#include <stdint.h>

#define BLOCK_SIZE 128

__forceinline__ __device__ void aes_add_16B_round_key(
		uint32_t data1,
		uint32_t data2,
		uint32_t data3,
		uint32_t data4,
		uint32_t key1,
		uint32_t key2,
		uint32_t key3,
		uint32_t key4
);

__device__ void cuda_ecb_aes_16b__add_round_key(unsigned char data[],
						int n_blocks,
						unsigned char expanded_key[]);
__device__ void cuda_ecb_aes_16b__sub_bytes(unsigned char data[],
						int n_blocks,
						unsigned char expanded_key[]);
__device__ void cuda_ecb_aes_16b__shift_rows(unsigned char data[],
						int n_blocks,
						unsigned char expanded_key[]);
__global__ void cuda_ecb_aes_16b_encrypt_kernel(unsigned char data[],
						int n_blocks,
						unsigned char expanded_key[],
						int rounds);
__global__ void cuda_ecb_aes_16b_decrypt_kernel(unsigned char data[],
						int n_blocks,
						unsigned char expanded_key[],
						int rounds);
void cuda_ecb_aes_16b_encrypt(int gridSize, int threadsPerBlock,
			      unsigned char data[], int n_blocks,
			      unsigned char expanded_key[], int rounds);
void cuda_ecb_aes_16b_decrypt(int gridSize, int threadsPerBlock,
			      unsigned char data[], int n_blocks,
			      unsigned char expanded_key[], int rounds);
