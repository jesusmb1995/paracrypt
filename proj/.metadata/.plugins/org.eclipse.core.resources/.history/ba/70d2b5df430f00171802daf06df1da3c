#include <functional>
#include "driver_types.h"

namespace paracrypt {

    class GPUCipherDevice {
      public:
    virtual ~GPUCipherDevice() {}
	virtual int getThreadsPerThreadBlock() = 0;
	virtual int getNWarpsPerBlock() = 0;
	virtual int getMaxBlocksPerSM() = 0;
	virtual int getConcurrentKernels() = 0;
	int getGridSize(int n_blocks, int threadsPerCipherBlock);
	virtual void set(); // must be called to set operations to this device
	virtual void malloc(void* data, int size);
	template<S>
	virtual void memcpyTo(void* host, void* dev, int size, void* stream) = 0; // Async
	virtual void memcpyFrom(void* dev, void* host, int size, void* stream) = 0; // Sync
	virtual void getStream
   };

}
