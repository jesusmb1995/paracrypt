__global__ void aes_add_16B_round_key_kernel
(
	uint32_t* data1,
	uint32_t* data2,
	uint32_t* data3,
	uint32_t* data4,
	uint32_t key1,
	uint32_t key2,
	uint32_t key3,
	uint32_t key4
);

typedef struct{
	uint32_t w1, w2, w3, w4;
} _16B;
_16B aes_add_16B_round_key_call(
		uint32_t data1,
		uint32_t data2,
		uint32_t data3,
		uint32_t data4,
		uint32_t key1,
		uint32_t key2,
		uint32_t key3,
		uint32_t key4)
{
	uint32_t* dd1, dd2, dd3, dd4;
	cudaMalloc(&dd1,sizeof(unint32_t));
	cudaMalloc(&dd2,sizeof(unint32_t));
	cudaMalloc(&dd3,sizeof(unint32_t));
	cudaMalloc(&dd4,sizeof(unint32_t));
	cudaMemcpy(&data1, dd1, sizeof(unint32_t), cudaMemcpyDeviceToHost);
	cudaMemcpy(&data2, dd2, sizeof(unint32_t), cudaMemcpyDeviceToHost);
	cudaMemcpy(&data3, dd3, sizeof(unint32_t), cudaMemcpyDeviceToHost);
	cudaMemcpy(&data4, dd4, sizeof(unint32_t), cudaMemcpyDeviceToHost);


	_16B result;
	cudaMemcpy(&data1, dd1, sizeof(unint32_t), cudaMemcpyDeviceToHost);
	cudaMemcpy(&data2, dd2, sizeof(unint32_t), cudaMemcpyDeviceToHost);
	cudaMemcpy(&data3, dd3, sizeof(unint32_t), cudaMemcpyDeviceToHost);
	cudaMemcpy(&data4, dd4, sizeof(unint32_t), cudaMemcpyDeviceToHost);
	return result;
}
