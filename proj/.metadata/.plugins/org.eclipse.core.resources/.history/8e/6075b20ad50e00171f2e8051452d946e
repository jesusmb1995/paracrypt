namespace paracrypt {

    class CUDACipherDevice:public GPUCipherDevice {
      private:
	int device;
	const cudaDeviceProp devProp;
	int maxCudaBlocksPerSM;
	int nWarpsPerBlock;
	int nThreadsPerThreadBlock;
	int nConcurrentKernels = 1;
      public:
	// 0 <= device < cudaGetDeviceCount()
	 CUDACipherDevice(int device);
	int getNWarpsPerBlock();
	int getThreadsPerThreadBlock();
	int getMaxBlocksPerSM();
	const cudaDeviceProp* getDeviceProperties();
	void set(); // must be called to set operations to this device
	void malloc(void* data, int size);
	void memcpyTo(void* host, void* dev, int size);
	void memcpyFrom(void* dev, void* host, int size);
	void launch(kernel, int gridSize, );
    };

}
