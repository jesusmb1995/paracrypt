23:21:47 **** Build of configuration Debug for project pcnsight ****
make tests 
src/subdir.mk:65: warning: overriding commands for target `src/CudaEcbAes16B.o'
src/subdir.mk:57: warning: ignoring old commands for target `src/CudaEcbAes16B.o'
make: *** No rule to make target `tests'.  Stop.
23:45:51 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
src/subdir.mk:65: warning: overriding commands for target `src/CudaEcbAes16B.o'
src/subdir.mk:57: warning: ignoring old commands for target `src/CudaEcbAes16B.o'
Building file: /home/jesus/Dropbox/Estudios/octavo_semestre/TFG/repository/src/tests/key_schedule_test.cpp
Invoking: NVCC Compiler
/usr/local/cuda-8.0/bin/nvcc -G -g -O0 -gencode arch=compute_35,code=sm_35  -odir "src/tests" -M -o "src/tests/key_schedule_test.d" "/home/jesus/Dropbox/Estudios/octavo_semestre/TFG/repository/src/tests/key_schedule_test.cpp"
/home/jesus/Dropbox/Estudios/octavo_semestre/TFG/repository/src/tests/key_schedule_test.cpp:2:49: fatal error: ../openssl/reverse_ssl_internal_key.h: No such file or directory
 #include "../openssl/reverse_ssl_internal_key.h"
                                                 ^
compilation terminated.
make: *** [src/tests/key_schedule_test.o] Error 1
08:34:59 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
tests
make: tests: Command not found
make: *** [all] Error 127
00:07:01 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
make: tests: Command not found
tests
make: *** [all] Error 127
10:59:14 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++  -c src/tests/tests.cpp -o obj/tests.o
g++  -c src/openssl/AES_key_schedule.c -o obj/AES_key_schedule.o
g++  obj/tests.o obj/AES_key_schedule.o \
	 -o bin/paracrypt_tests
obj/tests.o: In function `key_schedule_128::test_method()':
tests.cpp:(.text+0x1f06f): undefined reference to `hexdump(_IO_FILE*, char const*, unsigned char const*, int)'
tests.cpp:(.text+0x1f08f): undefined reference to `hexdump(_IO_FILE*, char const*, unsigned char const*, int)'
collect2: error: ld returned 1 exit status
make: *** [tests] Error 1
10:59:54 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++  -c src/tests/tests.cpp -o obj/tests.o
g++  -c src/openssl/AES_key_schedule.c -o obj/AES_key_schedule.o
g++  -c src/logging.cpp -o obj/logging.o
g++  obj/tests.o obj/AES_key_schedule.o \
	 obj/logging.o -o bin/paracrypt_tests
# make icc
11:17:02 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++  -c src/tests/tests.cpp -o obj/tests.o
In file included from src/tests/tests.cpp:16:0:
src/tests/cuda_aes_test.cpp: In member function ‘void cuda_aes::cuda_ecb_aes_16b::test_method()’:
src/tests/cuda_aes_test.cpp:18:5: error: ‘CUDACipherDevice’ was not declared in this scope
     CUDACipherDevice gpu = new CUDACipherDevice(0);
     ^
src/tests/cuda_aes_test.cpp:18:22: error: expected ‘;’ before ‘gpu’
     CUDACipherDevice gpu = new CUDACipherDevice(0);
                      ^
src/tests/cuda_aes_test.cpp:19:5: error: ‘CudaAes’ was not declared in this scope
     CudaAes aes = new CudaEcbAes16B();
     ^
src/tests/cuda_aes_test.cpp:19:13: error: expected ‘;’ before ‘aes’
     CudaAes aes = new CudaEcbAes16B();
             ^
src/tests/cuda_aes_test.cpp:20:5: error: ‘aes’ was not declared in this scope
     aes.setDevice(&gpu);
     ^
src/tests/cuda_aes_test.cpp:20:20: error: ‘gpu’ was not declared in this scope
     aes.setDevice(&gpu);
                    ^
src/tests/cuda_aes_test.cpp:24:12: error: type ‘<type error>’ argument given to ‘delete’, expected pointer
     delete aes;
            ^
src/tests/cuda_aes_test.cpp:25:12: error: type ‘<type error>’ argument given to ‘delete’, expected pointer
     delete gpu;
            ^
make: *** [tests.o] Error 1
11:18:13 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++  -c src/tests/tests.cpp -o obj/tests.o
In file included from src/tests/cuda_aes_test.cpp:1:0,
                 from src/tests/tests.cpp:18:
src/tests/../CUDACipherDevice.hpp:3:50: error: expected template-name before ‘<’ token
     class CUDACipherDevice:public GPUCipherDevice<cudaStream_t> {
                                                  ^
src/tests/../CUDACipherDevice.hpp:3:50: error: expected ‘{’ before ‘<’ token
src/tests/../CUDACipherDevice.hpp:3:50: error: expected unqualified-id before ‘<’ token
In file included from src/tests/../CudaEcbAes16B.hpp:1:0,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../AES.hpp:11:2: error: ‘AES_KEY’ does not name a type
  AES_KEY * roundKeys = NULL;
  ^
src/tests/../AES.hpp:22:13: error: ‘AES_KEY’ has not been declared
  int setKey(AES_KEY * expandedKey);
             ^
src/tests/../AES.hpp:23:2: error: ‘AES_KEY’ does not name a type
  AES_KEY *getExpandedKey();
  ^
In file included from src/tests/cuda_aes_test.cpp:2:0,
                 from src/tests/tests.cpp:18:
src/tests/../CudaEcbAes16B.hpp:5:40: error: expected class-name before ‘{’ token
     class CudaEcbAES16B:public CudaAES {
                                        ^
In file included from src/tests/tests.cpp:18:0:
src/tests/cuda_aes_test.cpp: In member function ‘void cuda_aes::cuda_ecb_aes_16b::test_method()’:
src/tests/cuda_aes_test.cpp:19:5: error: ‘CUDACipherDevice’ was not declared in this scope
     CUDACipherDevice gpu = new CUDACipherDevice(0);
     ^
src/tests/cuda_aes_test.cpp:19:5: note: suggested alternative:
In file included from src/tests/cuda_aes_test.cpp:1:0,
                 from src/tests/tests.cpp:18:
src/tests/../CUDACipherDevice.hpp:3:11: note:   ‘cuda_aes::paracrypt::CUDACipherDevice’
     class CUDACipherDevice:public GPUCipherDevice<cudaStream_t> {
           ^
In file included from src/tests/tests.cpp:18:0:
src/tests/cuda_aes_test.cpp:19:22: error: expected ‘;’ before ‘gpu’
     CUDACipherDevice gpu = new CUDACipherDevice(0);
                      ^
src/tests/cuda_aes_test.cpp:20:5: error: ‘CudaAes’ was not declared in this scope
     CudaAes aes = new CudaEcbAes16B();
     ^
src/tests/cuda_aes_test.cpp:20:13: error: expected ‘;’ before ‘aes’
     CudaAes aes = new CudaEcbAes16B();
             ^
src/tests/cuda_aes_test.cpp:21:5: error: ‘aes’ was not declared in this scope
     aes.setDevice(&gpu);
     ^
src/tests/cuda_aes_test.cpp:21:20: error: ‘gpu’ was not declared in this scope
     aes.setDevice(&gpu);
                    ^
src/tests/cuda_aes_test.cpp:25:12: error: type ‘<type error>’ argument given to ‘delete’, expected pointer
     delete aes;
            ^
src/tests/cuda_aes_test.cpp:26:12: error: type ‘<type error>’ argument given to ‘delete’, expected pointer
     delete gpu;
            ^
make: *** [tests.o] Error 1
11:18:37 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++  -c src/tests/tests.cpp -o obj/tests.o
In file included from src/tests/cuda_aes_test.cpp:1:0,
                 from src/tests/tests.cpp:18:
src/tests/../CUDACipherDevice.hpp:3:50: error: expected template-name before ‘<’ token
     class CUDACipherDevice:public GPUCipherDevice<cudaStream_t> {
                                                  ^
src/tests/../CUDACipherDevice.hpp:3:50: error: expected ‘{’ before ‘<’ token
src/tests/../CUDACipherDevice.hpp:3:50: error: expected unqualified-id before ‘<’ token
In file included from src/tests/../CudaEcbAes16B.hpp:1:0,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../AES.hpp:11:2: error: ‘AES_KEY’ does not name a type
  AES_KEY * roundKeys = NULL;
  ^
src/tests/../AES.hpp:22:13: error: ‘AES_KEY’ has not been declared
  int setKey(AES_KEY * expandedKey);
             ^
src/tests/../AES.hpp:23:2: error: ‘AES_KEY’ does not name a type
  AES_KEY *getExpandedKey();
  ^
In file included from src/tests/cuda_aes_test.cpp:2:0,
                 from src/tests/tests.cpp:18:
src/tests/../CudaEcbAes16B.hpp:5:40: error: expected class-name before ‘{’ token
     class CudaEcbAES16B:public CudaAES {
                                        ^
In file included from src/tests/tests.cpp:18:0:
src/tests/cuda_aes_test.cpp: In member function ‘void cuda_aes::cuda_ecb_aes_16b::test_method()’:
src/tests/cuda_aes_test.cpp:19:5: error: ‘CUDACipherDevice’ was not declared in this scope
     CUDACipherDevice gpu = new CUDACipherDevice(0);
     ^
src/tests/cuda_aes_test.cpp:19:5: note: suggested alternative:
In file included from src/tests/cuda_aes_test.cpp:1:0,
                 from src/tests/tests.cpp:18:
src/tests/../CUDACipherDevice.hpp:3:11: note:   ‘cuda_aes::paracrypt::CUDACipherDevice’
     class CUDACipherDevice:public GPUCipherDevice<cudaStream_t> {
           ^
In file included from src/tests/tests.cpp:18:0:
src/tests/cuda_aes_test.cpp:19:22: error: expected ‘;’ before ‘gpu’
     CUDACipherDevice gpu = new CUDACipherDevice(0);
                      ^
src/tests/cuda_aes_test.cpp:20:5: error: ‘CudaAes’ was not declared in this scope
     CudaAes aes = new CudaEcbAes16B();
     ^
src/tests/cuda_aes_test.cpp:20:13: error: expected ‘;’ before ‘aes’
     CudaAes aes = new CudaEcbAes16B();
             ^
src/tests/cuda_aes_test.cpp:21:5: error: ‘aes’ was not declared in this scope
     aes.setDevice(&gpu);
     ^
src/tests/cuda_aes_test.cpp:21:20: error: ‘gpu’ was not declared in this scope
     aes.setDevice(&gpu);
                    ^
src/tests/cuda_aes_test.cpp:25:12: error: type ‘<type error>’ argument given to ‘delete’, expected pointer
     delete aes;
            ^
src/tests/cuda_aes_test.cpp:26:12: error: type ‘<type error>’ argument given to ‘delete’, expected pointer
     delete gpu;
            ^
make: *** [tests.o] Error 1
11:22:13 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++  -c src/tests/tests.cpp -o obj/tests.o
In file included from src/tests/cuda_aes_test.cpp:1:0,
                 from src/tests/tests.cpp:18:
src/tests/../CUDACipherDevice.hpp:3:50: error: expected template-name before ‘<’ token
     class CUDACipherDevice:public GPUCipherDevice<cudaStream_t> {
                                                  ^
src/tests/../CUDACipherDevice.hpp:3:50: error: expected ‘{’ before ‘<’ token
src/tests/../CUDACipherDevice.hpp:3:50: error: expected unqualified-id before ‘<’ token
In file included from src/tests/../CudaEcbAes16B.hpp:1:0,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../AES.hpp:11:2: error: ‘AES_KEY’ does not name a type
  AES_KEY * roundKeys = NULL;
  ^
src/tests/../AES.hpp:22:13: error: ‘AES_KEY’ has not been declared
  int setKey(AES_KEY * expandedKey);
             ^
src/tests/../AES.hpp:23:2: error: ‘AES_KEY’ does not name a type
  AES_KEY *getExpandedKey();
  ^
In file included from src/tests/cuda_aes_test.cpp:2:0,
                 from src/tests/tests.cpp:18:
src/tests/../CudaEcbAes16B.hpp:5:40: error: expected class-name before ‘{’ token
     class CudaEcbAES16B:public CudaAES {
                                        ^
In file included from src/tests/tests.cpp:18:0:
src/tests/cuda_aes_test.cpp: In member function ‘void cuda_aes::cuda_ecb_aes_16b::test_method()’:
src/tests/cuda_aes_test.cpp:19:5: error: ‘CUDACipherDevice’ was not declared in this scope
     CUDACipherDevice gpu = new CUDACipherDevice(0);
     ^
src/tests/cuda_aes_test.cpp:19:5: note: suggested alternative:
In file included from src/tests/cuda_aes_test.cpp:1:0,
                 from src/tests/tests.cpp:18:
src/tests/../CUDACipherDevice.hpp:3:11: note:   ‘cuda_aes::paracrypt::CUDACipherDevice’
     class CUDACipherDevice:public GPUCipherDevice<cudaStream_t> {
           ^
In file included from src/tests/tests.cpp:18:0:
src/tests/cuda_aes_test.cpp:19:22: error: expected ‘;’ before ‘gpu’
     CUDACipherDevice gpu = new CUDACipherDevice(0);
                      ^
src/tests/cuda_aes_test.cpp:20:5: error: ‘CudaAes’ was not declared in this scope
     CudaAes aes = new CudaEcbAes16B();
     ^
src/tests/cuda_aes_test.cpp:20:13: error: expected ‘;’ before ‘aes’
     CudaAes aes = new CudaEcbAes16B();
             ^
src/tests/cuda_aes_test.cpp:21:5: error: ‘aes’ was not declared in this scope
     aes.setDevice(&gpu);
     ^
src/tests/cuda_aes_test.cpp:21:20: error: ‘gpu’ was not declared in this scope
     aes.setDevice(&gpu);
                    ^
src/tests/cuda_aes_test.cpp:25:12: error: type ‘<type error>’ argument given to ‘delete’, expected pointer
     delete aes;
            ^
src/tests/cuda_aes_test.cpp:26:12: error: type ‘<type error>’ argument given to ‘delete’, expected pointer
     delete gpu;
            ^
make: *** [tests.o] Error 1
11:25:20 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++  -c src/tests/tests.cpp -o obj/tests.o
In file included from src/tests/cuda_aes_test.cpp:1:0,
                 from src/tests/tests.cpp:18:
src/tests/../CUDACipherDevice.hpp:3:50: error: expected template-name before ‘<’ token
     class CUDACipherDevice:public GPUCipherDevice<cudaStream_t> {
                                                  ^
src/tests/../CUDACipherDevice.hpp:3:50: error: expected ‘{’ before ‘<’ token
src/tests/../CUDACipherDevice.hpp:3:50: error: expected unqualified-id before ‘<’ token
In file included from src/tests/../CudaEcbAes16B.hpp:1:0,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../AES.hpp:11:2: error: ‘AES_KEY’ does not name a type
  AES_KEY* roundKeys = NULL;
  ^
src/tests/../AES.hpp:22:13: error: ‘AES_KEY’ has not been declared
  int setKey(AES_KEY * expandedKey);
             ^
src/tests/../AES.hpp:23:2: error: ‘AES_KEY’ does not name a type
  AES_KEY *getExpandedKey();
  ^
In file included from src/tests/../AES.hpp:1:0,
                 from src/tests/../CudaAES.hpp:1,
                 from src/tests/../CudaEcbAes16B.hpp:2,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../BlockCipher.hpp:3:11: error: redefinition of ‘class cuda_aes::paracrypt::BlockCipher’
     class BlockCipher {
           ^
In file included from src/tests/../AES.hpp:1:0,
                 from src/tests/../CudaEcbAes16B.hpp:1,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../BlockCipher.hpp:3:11: error: previous definition of ‘class cuda_aes::paracrypt::BlockCipher’
     class BlockCipher {
           ^
In file included from src/tests/../CudaAES.hpp:1:0,
                 from src/tests/../CudaEcbAes16B.hpp:2,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../AES.hpp:6:11: error: redefinition of ‘class cuda_aes::paracrypt::AES’
     class AES:public BlockCipher {
           ^
In file included from src/tests/../CudaEcbAes16B.hpp:1:0,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../AES.hpp:6:11: error: previous definition of ‘class cuda_aes::paracrypt::AES’
     class AES:public BlockCipher {
           ^
In file included from src/tests/../CudaAES.hpp:2:0,
                 from src/tests/../CudaEcbAes16B.hpp:2,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../CUDACipherDevice.hpp:3:50: error: expected template-name before ‘<’ token
     class CUDACipherDevice:public GPUCipherDevice<cudaStream_t> {
                                                  ^
src/tests/../CUDACipherDevice.hpp:3:50: error: expected ‘{’ before ‘<’ token
src/tests/../CUDACipherDevice.hpp:3:50: error: expected unqualified-id before ‘<’ token
In file included from src/tests/../CudaEcbAes16B.hpp:2:0,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../CudaAES.hpp:9:2: error: ‘AES_KEY’ does not name a type
  AES_KEY *deviceKey = NULL;
  ^
src/tests/../CudaAES.hpp:10:2: error: ‘cudaStream_t’ does not name a type
  cudaStream_t stream;
  ^
src/tests/../CudaAES.hpp:13:3: error: ‘AES_KEY’ does not name a type
   AES_KEY * getDeviceKey();
   ^
In file included from src/tests/tests.cpp:18:0:
src/tests/cuda_aes_test.cpp: In member function ‘void cuda_aes::cuda_ecb_aes_16b::test_method()’:
src/tests/cuda_aes_test.cpp:19:5: error: ‘CUDACipherDevice’ was not declared in this scope
     CUDACipherDevice gpu = new CUDACipherDevice(0);
     ^
src/tests/cuda_aes_test.cpp:19:5: note: suggested alternative:
In file included from src/tests/../CudaAES.hpp:2:0,
                 from src/tests/../CudaEcbAes16B.hpp:2,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../CUDACipherDevice.hpp:3:11: note:   ‘cuda_aes::paracrypt::CUDACipherDevice’
     class CUDACipherDevice:public GPUCipherDevice<cudaStream_t> {
           ^
In file included from src/tests/tests.cpp:18:0:
src/tests/cuda_aes_test.cpp:19:22: error: expected ‘;’ before ‘gpu’
     CUDACipherDevice gpu = new CUDACipherDevice(0);
                      ^
src/tests/cuda_aes_test.cpp:20:5: error: ‘CudaAes’ was not declared in this scope
     CudaAes aes = new CudaEcbAes16B();
     ^
src/tests/cuda_aes_test.cpp:20:13: error: expected ‘;’ before ‘aes’
     CudaAes aes = new CudaEcbAes16B();
             ^
src/tests/cuda_aes_test.cpp:21:5: error: ‘aes’ was not declared in this scope
     aes.setDevice(&gpu);
     ^
src/tests/cuda_aes_test.cpp:21:20: error: ‘gpu’ was not declared in this scope
     aes.setDevice(&gpu);
                    ^
src/tests/cuda_aes_test.cpp:25:12: error: type ‘<type error>’ argument given to ‘delete’, expected pointer
     delete aes;
            ^
src/tests/cuda_aes_test.cpp:26:12: error: type ‘<type error>’ argument given to ‘delete’, expected pointer
     delete gpu;
            ^
make: *** [tests.o] Error 1
11:26:14 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++  -c src/tests/tests.cpp -o obj/tests.o
In file included from src/tests/cuda_aes_test.cpp:1:0,
                 from src/tests/tests.cpp:18:
src/tests/../CUDACipherDevice.hpp:3:50: error: expected template-name before ‘<’ token
     class CUDACipherDevice:public GPUCipherDevice<cudaStream_t> {
                                                  ^
src/tests/../CUDACipherDevice.hpp:3:50: error: expected ‘{’ before ‘<’ token
src/tests/../CUDACipherDevice.hpp:3:50: error: expected unqualified-id before ‘<’ token
In file included from src/tests/../CudaEcbAes16B.hpp:1:0,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../AES.hpp:11:2: error: ‘AES_KEY’ does not name a type
  AES_KEY* roundKeys = NULL;
  ^
src/tests/../AES.hpp:22:13: error: ‘AES_KEY’ has not been declared
  int setKey(AES_KEY * expandedKey);
             ^
src/tests/../AES.hpp:23:2: error: ‘AES_KEY’ does not name a type
  AES_KEY *getExpandedKey();
  ^
In file included from src/tests/../CudaAES.hpp:1:0,
                 from src/tests/../CudaEcbAes16B.hpp:2,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../AES.hpp:6:11: error: redefinition of ‘class cuda_aes::paracrypt::AES’
     class AES:public BlockCipher {
           ^
In file included from src/tests/../CudaEcbAes16B.hpp:1:0,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../AES.hpp:6:11: error: previous definition of ‘class cuda_aes::paracrypt::AES’
     class AES:public BlockCipher {
           ^
In file included from src/tests/../CudaAES.hpp:2:0,
                 from src/tests/../CudaEcbAes16B.hpp:2,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../CUDACipherDevice.hpp:3:50: error: expected template-name before ‘<’ token
     class CUDACipherDevice:public GPUCipherDevice<cudaStream_t> {
                                                  ^
src/tests/../CUDACipherDevice.hpp:3:50: error: expected ‘{’ before ‘<’ token
src/tests/../CUDACipherDevice.hpp:3:50: error: expected unqualified-id before ‘<’ token
In file included from src/tests/../CudaEcbAes16B.hpp:2:0,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../CudaAES.hpp:9:2: error: ‘AES_KEY’ does not name a type
  AES_KEY *deviceKey = NULL;
  ^
src/tests/../CudaAES.hpp:10:2: error: ‘cudaStream_t’ does not name a type
  cudaStream_t stream;
  ^
src/tests/../CudaAES.hpp:13:3: error: ‘AES_KEY’ does not name a type
   AES_KEY * getDeviceKey();
   ^
In file included from src/tests/tests.cpp:18:0:
src/tests/cuda_aes_test.cpp: In member function ‘void cuda_aes::cuda_ecb_aes_16b::test_method()’:
src/tests/cuda_aes_test.cpp:19:5: error: ‘CUDACipherDevice’ was not declared in this scope
     CUDACipherDevice gpu = new CUDACipherDevice(0);
     ^
src/tests/cuda_aes_test.cpp:19:5: note: suggested alternative:
In file included from src/tests/../CudaAES.hpp:2:0,
                 from src/tests/../CudaEcbAes16B.hpp:2,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../CUDACipherDevice.hpp:3:11: note:   ‘cuda_aes::paracrypt::CUDACipherDevice’
     class CUDACipherDevice:public GPUCipherDevice<cudaStream_t> {
           ^
In file included from src/tests/tests.cpp:18:0:
src/tests/cuda_aes_test.cpp:19:22: error: expected ‘;’ before ‘gpu’
     CUDACipherDevice gpu = new CUDACipherDevice(0);
                      ^
src/tests/cuda_aes_test.cpp:20:5: error: ‘CudaAes’ was not declared in this scope
     CudaAes aes = new CudaEcbAes16B();
     ^
src/tests/cuda_aes_test.cpp:20:13: error: expected ‘;’ before ‘aes’
     CudaAes aes = new CudaEcbAes16B();
             ^
src/tests/cuda_aes_test.cpp:21:5: error: ‘aes’ was not declared in this scope
     aes.setDevice(&gpu);
     ^
src/tests/cuda_aes_test.cpp:21:20: error: ‘gpu’ was not declared in this scope
     aes.setDevice(&gpu);
                    ^
src/tests/cuda_aes_test.cpp:25:12: error: type ‘<type error>’ argument given to ‘delete’, expected pointer
     delete aes;
            ^
src/tests/cuda_aes_test.cpp:26:12: error: type ‘<type error>’ argument given to ‘delete’, expected pointer
     delete gpu;
            ^
make: *** [tests.o] Error 1
11:27:02 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++  -c src/tests/tests.cpp -o obj/tests.o
In file included from src/tests/../CUDACipherDevice.hpp:3:0,
                 from src/tests/cuda_aes_test.cpp:1,
                 from src/tests/tests.cpp:18:
src/tests/../GPUCipherDevice.hpp:3:14: error: ‘S’ has not been declared
     template<S>
              ^
src/tests/../GPUCipherDevice.hpp:15:57: error: ‘S’ has not been declared
  virtual void memcpyTo(void* host, void* dev, int size, S stream) = 0; // Async
                                                         ^
src/tests/../GPUCipherDevice.hpp:16:59: error: ‘S’ has not been declared
  virtual void memcpyFrom(void* dev, void* host, int size, S stream) = 0; // Sync
                                                           ^
src/tests/../GPUCipherDevice.hpp:17:10: error: ‘S’ does not name a type
  virtual S getNewStream();
          ^
src/tests/../GPUCipherDevice.hpp:18:26: error: ‘S’ has not been declared
  virtual void freeStream(S s);
                          ^
In file included from src/tests/cuda_aes_test.cpp:1:0,
                 from src/tests/tests.cpp:18:
src/tests/../CUDACipherDevice.hpp:7:51: error: ‘cudaStream_t’ was not declared in this scope
     class CUDACipherDevice:public GPUCipherDevice<cudaStream_t> {
                                                   ^
src/tests/../CUDACipherDevice.hpp:7:63: error: template argument 1 is invalid
     class CUDACipherDevice:public GPUCipherDevice<cudaStream_t> {
                                                               ^
src/tests/../CUDACipherDevice.hpp:10:8: error: ‘cudaDeviceProp’ does not name a type
  const cudaDeviceProp devProp;
        ^
src/tests/../CUDACipherDevice.hpp:14:27: warning: non-static data member initializers only available with -std=c++11 or -std=gnu++11 [enabled by default]
  int nConcurrentKernels = 1;
                           ^
src/tests/../CUDACipherDevice.hpp:16:26: error: ‘cudaError_t’ has not been declared
  static void HandleError(cudaError_t err,
                          ^
src/tests/../CUDACipherDevice.hpp:26:8: error: ‘cudaDeviceProp’ does not name a type
  const cudaDeviceProp* getDeviceProperties();
        ^
src/tests/../CUDACipherDevice.hpp:30:49: error: ‘cudaStream_t’ has not been declared
  void memcpyTo(void* host, void* dev, int size, cudaStream_t stream);
                                                 ^
src/tests/../CUDACipherDevice.hpp:31:51: error: ‘cudaStream_t’ has not been declared
  void memcpyFrom(void* dev, void* host, int size, cudaStream_t stream);
                                                   ^
src/tests/../CUDACipherDevice.hpp:32:2: error: ‘cudaStream_t’ does not name a type
  cudaStream_t getNewStream();
  ^
src/tests/../CUDACipherDevice.hpp:33:18: error: ‘cudaStream_t’ has not been declared
  void freeStream(cudaStream_t s);
                  ^
In file included from src/tests/../CudaEcbAes16B.hpp:1:0,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../AES.hpp:13:2: error: ‘AES_KEY’ does not name a type
  AES_KEY* roundKeys = NULL;
  ^
src/tests/../AES.hpp:24:13: error: ‘AES_KEY’ has not been declared
  int setKey(AES_KEY * expandedKey);
             ^
src/tests/../AES.hpp:25:2: error: ‘AES_KEY’ does not name a type
  AES_KEY *getExpandedKey();
  ^
In file included from src/tests/../CudaEcbAes16B.hpp:2:0,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../CudaAES.hpp:11:2: error: ‘AES_KEY’ does not name a type
  AES_KEY *deviceKey = NULL;
  ^
src/tests/../CudaAES.hpp:12:2: error: ‘cudaStream_t’ does not name a type
  cudaStream_t stream;
  ^
src/tests/../CudaAES.hpp:15:3: error: ‘AES_KEY’ does not name a type
   AES_KEY * getDeviceKey();
   ^
In file included from src/tests/tests.cpp:18:0:
src/tests/cuda_aes_test.cpp: In member function ‘void cuda_aes::cuda_ecb_aes_16b::test_method()’:
src/tests/cuda_aes_test.cpp:19:5: error: ‘CUDACipherDevice’ was not declared in this scope
     CUDACipherDevice gpu = new CUDACipherDevice(0);
     ^
src/tests/cuda_aes_test.cpp:19:5: note: suggested alternative:
In file included from src/tests/cuda_aes_test.cpp:1:0,
                 from src/tests/tests.cpp:18:
src/tests/../CUDACipherDevice.hpp:7:11: note:   ‘cuda_aes::paracrypt::CUDACipherDevice’
     class CUDACipherDevice:public GPUCipherDevice<cudaStream_t> {
           ^
In file included from src/tests/tests.cpp:18:0:
src/tests/cuda_aes_test.cpp:19:22: error: expected ‘;’ before ‘gpu’
     CUDACipherDevice gpu = new CUDACipherDevice(0);
                      ^
src/tests/cuda_aes_test.cpp:20:5: error: ‘CudaAes’ was not declared in this scope
     CudaAes aes = new CudaEcbAes16B();
     ^
src/tests/cuda_aes_test.cpp:20:13: error: expected ‘;’ before ‘aes’
     CudaAes aes = new CudaEcbAes16B();
             ^
src/tests/cuda_aes_test.cpp:21:5: error: ‘aes’ was not declared in this scope
     aes.setDevice(&gpu);
     ^
src/tests/cuda_aes_test.cpp:21:20: error: ‘gpu’ was not declared in this scope
     aes.setDevice(&gpu);
                    ^
src/tests/cuda_aes_test.cpp:25:12: error: type ‘<type error>’ argument given to ‘delete’, expected pointer
     delete aes;
            ^
src/tests/cuda_aes_test.cpp:26:12: error: type ‘<type error>’ argument given to ‘delete’, expected pointer
     delete gpu;
            ^
make: *** [tests.o] Error 1
11:27:51 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++  -c src/tests/tests.cpp -o obj/tests.o
In file included from src/tests/../CUDACipherDevice.hpp:3:0,
                 from src/tests/cuda_aes_test.cpp:1,
                 from src/tests/tests.cpp:18:
src/tests/../GPUCipherDevice.hpp:3:14: error: ‘S’ has not been declared
     template<S>
              ^
src/tests/../GPUCipherDevice.hpp:15:57: error: ‘S’ has not been declared
  virtual void memcpyTo(void* host, void* dev, int size, S stream) = 0; // Async
                                                         ^
src/tests/../GPUCipherDevice.hpp:16:59: error: ‘S’ has not been declared
  virtual void memcpyFrom(void* dev, void* host, int size, S stream) = 0; // Sync
                                                           ^
src/tests/../GPUCipherDevice.hpp:17:10: error: ‘S’ does not name a type
  virtual S getNewStream();
          ^
src/tests/../GPUCipherDevice.hpp:18:26: error: ‘S’ has not been declared
  virtual void freeStream(S s);
                          ^
In file included from src/tests/cuda_aes_test.cpp:1:0,
                 from src/tests/tests.cpp:18:
src/tests/../CUDACipherDevice.hpp:7:51: error: ‘cudaStream_t’ was not declared in this scope
     class CUDACipherDevice:public GPUCipherDevice<cudaStream_t> {
                                                   ^
src/tests/../CUDACipherDevice.hpp:7:63: error: template argument 1 is invalid
     class CUDACipherDevice:public GPUCipherDevice<cudaStream_t> {
                                                               ^
src/tests/../CUDACipherDevice.hpp:10:8: error: ‘cudaDeviceProp’ does not name a type
  const cudaDeviceProp devProp;
        ^
src/tests/../CUDACipherDevice.hpp:14:27: warning: non-static data member initializers only available with -std=c++11 or -std=gnu++11 [enabled by default]
  int nConcurrentKernels = 1;
                           ^
src/tests/../CUDACipherDevice.hpp:16:26: error: ‘cudaError_t’ has not been declared
  static void HandleError(cudaError_t err,
                          ^
src/tests/../CUDACipherDevice.hpp:26:8: error: ‘cudaDeviceProp’ does not name a type
  const cudaDeviceProp* getDeviceProperties();
        ^
src/tests/../CUDACipherDevice.hpp:30:49: error: ‘cudaStream_t’ has not been declared
  void memcpyTo(void* host, void* dev, int size, cudaStream_t stream);
                                                 ^
src/tests/../CUDACipherDevice.hpp:31:51: error: ‘cudaStream_t’ has not been declared
  void memcpyFrom(void* dev, void* host, int size, cudaStream_t stream);
                                                   ^
src/tests/../CUDACipherDevice.hpp:32:2: error: ‘cudaStream_t’ does not name a type
  cudaStream_t getNewStream();
  ^
src/tests/../CUDACipherDevice.hpp:33:18: error: ‘cudaStream_t’ has not been declared
  void freeStream(cudaStream_t s);
                  ^
In file included from src/tests/../CudaEcbAes16B.hpp:1:0,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../AES.hpp:13:2: error: ‘AES_KEY’ does not name a type
  AES_KEY* roundKeys = NULL;
  ^
src/tests/../AES.hpp:24:13: error: ‘AES_KEY’ has not been declared
  int setKey(AES_KEY * expandedKey);
             ^
src/tests/../AES.hpp:25:2: error: ‘AES_KEY’ does not name a type
  AES_KEY *getExpandedKey();
  ^
In file included from src/tests/../CudaEcbAes16B.hpp:2:0,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../CudaAES.hpp:11:2: error: ‘AES_KEY’ does not name a type
  AES_KEY *deviceKey = NULL;
  ^
src/tests/../CudaAES.hpp:12:2: error: ‘cudaStream_t’ does not name a type
  cudaStream_t stream;
  ^
src/tests/../CudaAES.hpp:15:3: error: ‘AES_KEY’ does not name a type
   AES_KEY * getDeviceKey();
   ^
In file included from src/tests/tests.cpp:18:0:
src/tests/cuda_aes_test.cpp: In member function ‘void cuda_aes::cuda_ecb_aes_16b::test_method()’:
src/tests/cuda_aes_test.cpp:19:5: error: ‘CUDACipherDevice’ was not declared in this scope
     CUDACipherDevice gpu = new CUDACipherDevice(0);
     ^
src/tests/cuda_aes_test.cpp:19:5: note: suggested alternative:
In file included from src/tests/cuda_aes_test.cpp:1:0,
                 from src/tests/tests.cpp:18:
src/tests/../CUDACipherDevice.hpp:7:11: note:   ‘cuda_aes::paracrypt::CUDACipherDevice’
     class CUDACipherDevice:public GPUCipherDevice<cudaStream_t> {
           ^
In file included from src/tests/tests.cpp:18:0:
src/tests/cuda_aes_test.cpp:19:22: error: expected ‘;’ before ‘gpu’
     CUDACipherDevice gpu = new CUDACipherDevice(0);
                      ^
src/tests/cuda_aes_test.cpp:20:5: error: ‘CudaAes’ was not declared in this scope
     CudaAes aes = new CudaEcbAes16B();
     ^
src/tests/cuda_aes_test.cpp:20:13: error: expected ‘;’ before ‘aes’
     CudaAes aes = new CudaEcbAes16B();
             ^
src/tests/cuda_aes_test.cpp:21:5: error: ‘aes’ was not declared in this scope
     aes.setDevice(&gpu);
     ^
src/tests/cuda_aes_test.cpp:21:20: error: ‘gpu’ was not declared in this scope
     aes.setDevice(&gpu);
                    ^
src/tests/cuda_aes_test.cpp:25:12: error: type ‘<type error>’ argument given to ‘delete’, expected pointer
     delete aes;
            ^
src/tests/cuda_aes_test.cpp:26:12: error: type ‘<type error>’ argument given to ‘delete’, expected pointer
     delete gpu;
            ^
make: *** [tests.o] Error 1
11:28:59 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++  -c src/tests/tests.cpp -o obj/tests.o
In file included from src/tests/cuda_aes_test.cpp:1:0,
                 from src/tests/tests.cpp:18:
src/tests/../CUDACipherDevice.hpp:4:18: fatal error: cuda.h: No such file or directory
 #include <cuda.h>
                  ^
compilation terminated.
make: *** [tests.o] Error 1
11:29:09 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++  -c src/tests/tests.cpp -o obj/tests.o
In file included from src/tests/cuda_aes_test.cpp:1:0,
                 from src/tests/tests.cpp:18:
src/tests/../CUDACipherDevice.hpp:4:30: fatal error: cuda_runtime_api.h: No such file or directory
 #include <cuda_runtime_api.h>
                              ^
compilation terminated.
make: *** [tests.o] Error 1
11:30:23 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++  -c src/tests/tests.cpp -o obj/tests.o
In file included from src/tests/cuda_aes_test.cpp:1:0,
                 from src/tests/tests.cpp:18:
src/tests/../CUDACipherDevice.hpp:4:18: fatal error: cuda.h: No such file or directory
 #include <cuda.h>
                  ^
compilation terminated.
make: *** [tests.o] Error 1
11:40:26 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++  -c src/tests/tests.cpp -o obj/tests.o
In file included from src/tests/cuda_aes_test.cpp:1:0,
                 from src/tests/tests.cpp:18:
src/tests/../CUDACipherDevice.hpp:4:18: fatal error: cuda.h: No such file or directory
 #include "cuda.h"
                  ^
compilation terminated.
make: *** [tests.o] Error 1
11:41:25 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++  -c src/tests/tests.cpp -o obj/tests.o
In file included from src/tests/cuda_aes_test.cpp:1:0,
                 from src/tests/tests.cpp:18:
src/tests/../CUDACipherDevice.hpp:4:18: fatal error: cuda.h: No such file or directory
 #include "cuda.h"
                  ^
compilation terminated.
make: *** [tests.o] Error 1
11:41:56 **** Clean-only build of configuration Debug for project pcnsight ****
make clean 
rm -f obj/*.o
rm -f lib/*.a
rm -f bin/*
rm -f src/*~
rm -f src/tests/*~
rm -f src/openssl/*~
11:42:08 **** Build of configuration Debug for project pcnsight ****
make all 
g++  -c src/tests/tests.cpp -o obj/tests.o
In file included from src/tests/cuda_aes_test.cpp:1:0,
                 from src/tests/tests.cpp:18:
src/tests/../CUDACipherDevice.hpp:4:18: fatal error: cuda.h: No such file or directory
 #include "cuda.h"
                  ^
compilation terminated.
make: *** [tests.o] Error 1
11:42:46 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++ "-I/usr/local/cuda/include"  -c src/tests/tests.cpp -o obj/tests.o
In file included from src/tests/../CUDACipherDevice.hpp:3:0,
                 from src/tests/cuda_aes_test.cpp:1,
                 from src/tests/tests.cpp:18:
src/tests/../GPUCipherDevice.hpp:3:14: error: ‘S’ has not been declared
     template<S>
              ^
src/tests/../GPUCipherDevice.hpp:15:57: error: ‘S’ has not been declared
  virtual void memcpyTo(void* host, void* dev, int size, S stream) = 0; // Async
                                                         ^
src/tests/../GPUCipherDevice.hpp:16:59: error: ‘S’ has not been declared
  virtual void memcpyFrom(void* dev, void* host, int size, S stream) = 0; // Sync
                                                           ^
src/tests/../GPUCipherDevice.hpp:17:10: error: ‘S’ does not name a type
  virtual S getNewStream();
          ^
src/tests/../GPUCipherDevice.hpp:18:26: error: ‘S’ has not been declared
  virtual void freeStream(S s);
                          ^
In file included from src/tests/cuda_aes_test.cpp:1:0,
                 from src/tests/tests.cpp:18:
src/tests/../CUDACipherDevice.hpp:9:63: error: type/value mismatch at argument 1 in template parameter list for ‘template<int <anonymous> > class cuda_aes::paracrypt::GPUCipherDevice’
     class CUDACipherDevice:public GPUCipherDevice<cudaStream_t> {
                                                               ^
src/tests/../CUDACipherDevice.hpp:9:63: error:   expected a constant of type ‘int’, got ‘cuda_aes::cudaStream_t {aka cuda_aes::CUstream_st*}’
src/tests/../CUDACipherDevice.hpp:16:27: warning: non-static data member initializers only available with -std=c++11 or -std=gnu++11 [enabled by default]
  int nConcurrentKernels = 1;
                           ^
In file included from src/tests/../CudaEcbAes16B.hpp:1:0,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../AES.hpp:13:2: error: ‘AES_KEY’ does not name a type
  AES_KEY* roundKeys = NULL;
  ^
src/tests/../AES.hpp:24:13: error: ‘AES_KEY’ has not been declared
  int setKey(AES_KEY * expandedKey);
             ^
src/tests/../AES.hpp:25:2: error: ‘AES_KEY’ does not name a type
  AES_KEY *getExpandedKey();
  ^
In file included from src/tests/../CudaEcbAes16B.hpp:2:0,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../CudaAES.hpp:11:2: error: ‘AES_KEY’ does not name a type
  AES_KEY *deviceKey = NULL;
  ^
src/tests/../CudaAES.hpp:15:3: error: ‘AES_KEY’ does not name a type
   AES_KEY * getDeviceKey();
   ^
In file included from src/tests/tests.cpp:18:0:
src/tests/cuda_aes_test.cpp: In member function ‘void cuda_aes::cuda_ecb_aes_16b::test_method()’:
src/tests/cuda_aes_test.cpp:19:5: error: ‘CUDACipherDevice’ was not declared in this scope
     CUDACipherDevice gpu = new CUDACipherDevice(0);
     ^
src/tests/cuda_aes_test.cpp:19:5: note: suggested alternative:
In file included from src/tests/cuda_aes_test.cpp:1:0,
                 from src/tests/tests.cpp:18:
src/tests/../CUDACipherDevice.hpp:9:11: note:   ‘cuda_aes::paracrypt::CUDACipherDevice’
     class CUDACipherDevice:public GPUCipherDevice<cudaStream_t> {
           ^
In file included from src/tests/tests.cpp:18:0:
src/tests/cuda_aes_test.cpp:19:22: error: expected ‘;’ before ‘gpu’
     CUDACipherDevice gpu = new CUDACipherDevice(0);
                      ^
src/tests/cuda_aes_test.cpp:20:5: error: ‘CudaAes’ was not declared in this scope
     CudaAes aes = new CudaEcbAes16B();
     ^
src/tests/cuda_aes_test.cpp:20:13: error: expected ‘;’ before ‘aes’
     CudaAes aes = new CudaEcbAes16B();
             ^
src/tests/cuda_aes_test.cpp:21:5: error: ‘aes’ was not declared in this scope
     aes.setDevice(&gpu);
     ^
src/tests/cuda_aes_test.cpp:21:20: error: ‘gpu’ was not declared in this scope
     aes.setDevice(&gpu);
                    ^
src/tests/cuda_aes_test.cpp:25:12: error: type ‘<type error>’ argument given to ‘delete’, expected pointer
     delete aes;
            ^
src/tests/cuda_aes_test.cpp:26:12: error: type ‘<type error>’ argument given to ‘delete’, expected pointer
     delete gpu;
            ^
make: *** [tests.o] Error 1
11:43:50 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++ "-I/usr/local/cuda/include"  -c src/tests/tests.cpp -o obj/tests.o
In file included from src/tests/../CUDACipherDevice.hpp:3:0,
                 from src/tests/cuda_aes_test.cpp:1,
                 from src/tests/tests.cpp:18:
src/tests/../GPUCipherDevice.hpp:4:14: error: ‘struct cuda_aes::paracrypt::S’ is not a valid type for a template non-type parameter
     template<S>
              ^
In file included from src/tests/cuda_aes_test.cpp:1:0,
                 from src/tests/tests.cpp:18:
src/tests/../CUDACipherDevice.hpp:9:63: error: type/value mismatch at argument 1 in template parameter list for ‘template<<declaration error> > class cuda_aes::paracrypt::GPUCipherDevice’
     class CUDACipherDevice:public GPUCipherDevice<cudaStream_t> {
                                                               ^
src/tests/../CUDACipherDevice.hpp:9:63: error:   expected a constant of type ‘<type error>’, got ‘cuda_aes::cudaStream_t {aka cuda_aes::CUstream_st*}’
src/tests/../CUDACipherDevice.hpp:16:27: warning: non-static data member initializers only available with -std=c++11 or -std=gnu++11 [enabled by default]
  int nConcurrentKernels = 1;
                           ^
In file included from src/tests/../CudaEcbAes16B.hpp:1:0,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../AES.hpp:13:2: error: ‘AES_KEY’ does not name a type
  AES_KEY* roundKeys = NULL;
  ^
src/tests/../AES.hpp:24:13: error: ‘AES_KEY’ has not been declared
  int setKey(AES_KEY * expandedKey);
             ^
src/tests/../AES.hpp:25:2: error: ‘AES_KEY’ does not name a type
  AES_KEY *getExpandedKey();
  ^
In file included from src/tests/../CudaEcbAes16B.hpp:2:0,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../CudaAES.hpp:11:2: error: ‘AES_KEY’ does not name a type
  AES_KEY *deviceKey = NULL;
  ^
src/tests/../CudaAES.hpp:15:3: error: ‘AES_KEY’ does not name a type
   AES_KEY * getDeviceKey();
   ^
In file included from src/tests/tests.cpp:18:0:
src/tests/cuda_aes_test.cpp: In member function ‘void cuda_aes::cuda_ecb_aes_16b::test_method()’:
src/tests/cuda_aes_test.cpp:19:5: error: ‘CUDACipherDevice’ was not declared in this scope
     CUDACipherDevice gpu = new CUDACipherDevice(0);
     ^
src/tests/cuda_aes_test.cpp:19:5: note: suggested alternative:
In file included from src/tests/cuda_aes_test.cpp:1:0,
                 from src/tests/tests.cpp:18:
src/tests/../CUDACipherDevice.hpp:9:11: note:   ‘cuda_aes::paracrypt::CUDACipherDevice’
     class CUDACipherDevice:public GPUCipherDevice<cudaStream_t> {
           ^
In file included from src/tests/tests.cpp:18:0:
src/tests/cuda_aes_test.cpp:19:22: error: expected ‘;’ before ‘gpu’
     CUDACipherDevice gpu = new CUDACipherDevice(0);
                      ^
src/tests/cuda_aes_test.cpp:20:5: error: ‘CudaAes’ was not declared in this scope
     CudaAes aes = new CudaEcbAes16B();
     ^
src/tests/cuda_aes_test.cpp:20:13: error: expected ‘;’ before ‘aes’
     CudaAes aes = new CudaEcbAes16B();
             ^
src/tests/cuda_aes_test.cpp:21:5: error: ‘aes’ was not declared in this scope
     aes.setDevice(&gpu);
     ^
src/tests/cuda_aes_test.cpp:21:20: error: ‘gpu’ was not declared in this scope
     aes.setDevice(&gpu);
                    ^
src/tests/cuda_aes_test.cpp:25:12: error: type ‘<type error>’ argument given to ‘delete’, expected pointer
     delete aes;
            ^
src/tests/cuda_aes_test.cpp:26:12: error: type ‘<type error>’ argument given to ‘delete’, expected pointer
     delete gpu;
            ^
make: *** [tests.o] Error 1
11:44:31 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++ "-I/usr/local/cuda/include"  -c src/tests/tests.cpp -o obj/tests.o
In file included from src/tests/../CUDACipherDevice.hpp:3:0,
                 from src/tests/cuda_aes_test.cpp:1,
                 from src/tests/tests.cpp:18:
src/tests/../GPUCipherDevice.hpp:3:14: error: ‘S’ has not been declared
     template<S>
              ^
src/tests/../GPUCipherDevice.hpp:15:57: error: ‘S’ has not been declared
  virtual void memcpyTo(void* host, void* dev, int size, S stream) = 0; // Async
                                                         ^
src/tests/../GPUCipherDevice.hpp:16:59: error: ‘S’ has not been declared
  virtual void memcpyFrom(void* dev, void* host, int size, S stream) = 0; // Sync
                                                           ^
src/tests/../GPUCipherDevice.hpp:17:10: error: ‘S’ does not name a type
  virtual S getNewStream();
          ^
src/tests/../GPUCipherDevice.hpp:18:26: error: ‘S’ has not been declared
  virtual void freeStream(S s);
                          ^
In file included from src/tests/cuda_aes_test.cpp:1:0,
                 from src/tests/tests.cpp:18:
src/tests/../CUDACipherDevice.hpp:9:63: error: type/value mismatch at argument 1 in template parameter list for ‘template<int <anonymous> > class cuda_aes::paracrypt::GPUCipherDevice’
     class CUDACipherDevice:public GPUCipherDevice<cudaStream_t> {
                                                               ^
src/tests/../CUDACipherDevice.hpp:9:63: error:   expected a constant of type ‘int’, got ‘cuda_aes::cudaStream_t {aka cuda_aes::CUstream_st*}’
src/tests/../CUDACipherDevice.hpp:16:27: warning: non-static data member initializers only available with -std=c++11 or -std=gnu++11 [enabled by default]
  int nConcurrentKernels = 1;
                           ^
In file included from src/tests/../CudaEcbAes16B.hpp:1:0,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../AES.hpp:13:2: error: ‘AES_KEY’ does not name a type
  AES_KEY* roundKeys = NULL;
  ^
src/tests/../AES.hpp:24:13: error: ‘AES_KEY’ has not been declared
  int setKey(AES_KEY * expandedKey);
             ^
src/tests/../AES.hpp:25:2: error: ‘AES_KEY’ does not name a type
  AES_KEY *getExpandedKey();
  ^
In file included from src/tests/../CudaEcbAes16B.hpp:2:0,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../CudaAES.hpp:11:2: error: ‘AES_KEY’ does not name a type
  AES_KEY *deviceKey = NULL;
  ^
src/tests/../CudaAES.hpp:15:3: error: ‘AES_KEY’ does not name a type
   AES_KEY * getDeviceKey();
   ^
In file included from src/tests/tests.cpp:18:0:
src/tests/cuda_aes_test.cpp: In member function ‘void cuda_aes::cuda_ecb_aes_16b::test_method()’:
src/tests/cuda_aes_test.cpp:19:5: error: ‘CUDACipherDevice’ was not declared in this scope
     CUDACipherDevice gpu = new CUDACipherDevice(0);
     ^
src/tests/cuda_aes_test.cpp:19:5: note: suggested alternative:
In file included from src/tests/cuda_aes_test.cpp:1:0,
                 from src/tests/tests.cpp:18:
src/tests/../CUDACipherDevice.hpp:9:11: note:   ‘cuda_aes::paracrypt::CUDACipherDevice’
     class CUDACipherDevice:public GPUCipherDevice<cudaStream_t> {
           ^
In file included from src/tests/tests.cpp:18:0:
src/tests/cuda_aes_test.cpp:19:22: error: expected ‘;’ before ‘gpu’
     CUDACipherDevice gpu = new CUDACipherDevice(0);
                      ^
src/tests/cuda_aes_test.cpp:20:5: error: ‘CudaAes’ was not declared in this scope
     CudaAes aes = new CudaEcbAes16B();
     ^
src/tests/cuda_aes_test.cpp:20:13: error: expected ‘;’ before ‘aes’
     CudaAes aes = new CudaEcbAes16B();
             ^
src/tests/cuda_aes_test.cpp:21:5: error: ‘aes’ was not declared in this scope
     aes.setDevice(&gpu);
     ^
src/tests/cuda_aes_test.cpp:21:20: error: ‘gpu’ was not declared in this scope
     aes.setDevice(&gpu);
                    ^
src/tests/cuda_aes_test.cpp:25:12: error: type ‘<type error>’ argument given to ‘delete’, expected pointer
     delete aes;
            ^
src/tests/cuda_aes_test.cpp:26:12: error: type ‘<type error>’ argument given to ‘delete’, expected pointer
     delete gpu;
            ^
make: *** [tests.o] Error 1
11:46:10 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++ "-I/usr/local/cuda/include"  -c src/tests/tests.cpp -o obj/tests.o
In file included from src/tests/cuda_aes_test.cpp:1:0,
                 from src/tests/tests.cpp:18:
src/tests/../CUDACipherDevice.hpp:16:27: warning: non-static data member initializers only available with -std=c++11 or -std=gnu++11 [enabled by default]
  int nConcurrentKernels = 1;
                           ^
In file included from src/tests/../CudaEcbAes16B.hpp:1:0,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../AES.hpp:13:2: error: ‘AES_KEY’ does not name a type
  AES_KEY* roundKeys = NULL;
  ^
src/tests/../AES.hpp:24:13: error: ‘AES_KEY’ has not been declared
  int setKey(AES_KEY * expandedKey);
             ^
src/tests/../AES.hpp:25:2: error: ‘AES_KEY’ does not name a type
  AES_KEY *getExpandedKey();
  ^
In file included from src/tests/../CudaEcbAes16B.hpp:2:0,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../CudaAES.hpp:11:2: error: ‘AES_KEY’ does not name a type
  AES_KEY *deviceKey = NULL;
  ^
src/tests/../CudaAES.hpp:15:3: error: ‘AES_KEY’ does not name a type
   AES_KEY * getDeviceKey();
   ^
In file included from src/tests/tests.cpp:18:0:
src/tests/cuda_aes_test.cpp: In member function ‘void cuda_aes::cuda_ecb_aes_16b::test_method()’:
src/tests/cuda_aes_test.cpp:19:5: error: ‘CUDACipherDevice’ was not declared in this scope
     CUDACipherDevice gpu = new CUDACipherDevice(0);
     ^
src/tests/cuda_aes_test.cpp:19:5: note: suggested alternative:
In file included from src/tests/cuda_aes_test.cpp:1:0,
                 from src/tests/tests.cpp:18:
src/tests/../CUDACipherDevice.hpp:9:11: note:   ‘cuda_aes::paracrypt::CUDACipherDevice’
     class CUDACipherDevice:public GPUCipherDevice<cudaStream_t> {
           ^
In file included from src/tests/tests.cpp:18:0:
src/tests/cuda_aes_test.cpp:19:22: error: expected ‘;’ before ‘gpu’
     CUDACipherDevice gpu = new CUDACipherDevice(0);
                      ^
src/tests/cuda_aes_test.cpp:20:5: error: ‘CudaAes’ was not declared in this scope
     CudaAes aes = new CudaEcbAes16B();
     ^
src/tests/cuda_aes_test.cpp:20:13: error: expected ‘;’ before ‘aes’
     CudaAes aes = new CudaEcbAes16B();
             ^
src/tests/cuda_aes_test.cpp:21:5: error: ‘aes’ was not declared in this scope
     aes.setDevice(&gpu);
     ^
src/tests/cuda_aes_test.cpp:21:20: error: ‘gpu’ was not declared in this scope
     aes.setDevice(&gpu);
                    ^
src/tests/cuda_aes_test.cpp:25:12: error: type ‘<type error>’ argument given to ‘delete’, expected pointer
     delete aes;
            ^
src/tests/cuda_aes_test.cpp:26:12: error: type ‘<type error>’ argument given to ‘delete’, expected pointer
     delete gpu;
            ^
make: *** [tests.o] Error 1
11:47:03 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++ "-I/usr/local/cuda/include"  -c src/tests/tests.cpp -o obj/tests.o
In file included from src/tests/../CudaEcbAes16B.hpp:1:0,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../AES.hpp:13:2: error: ‘AES_KEY’ does not name a type
  AES_KEY* roundKeys = NULL;
  ^
src/tests/../AES.hpp:24:13: error: ‘AES_KEY’ has not been declared
  int setKey(AES_KEY * expandedKey);
             ^
src/tests/../AES.hpp:25:2: error: ‘AES_KEY’ does not name a type
  AES_KEY *getExpandedKey();
  ^
In file included from src/tests/../CudaEcbAes16B.hpp:2:0,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../CudaAES.hpp:11:2: error: ‘AES_KEY’ does not name a type
  AES_KEY *deviceKey = NULL;
  ^
src/tests/../CudaAES.hpp:15:3: error: ‘AES_KEY’ does not name a type
   AES_KEY * getDeviceKey();
   ^
In file included from src/tests/tests.cpp:18:0:
src/tests/cuda_aes_test.cpp: In member function ‘void cuda_aes::cuda_ecb_aes_16b::test_method()’:
src/tests/cuda_aes_test.cpp:19:5: error: ‘CUDACipherDevice’ was not declared in this scope
     CUDACipherDevice gpu = new CUDACipherDevice(0);
     ^
src/tests/cuda_aes_test.cpp:19:5: note: suggested alternative:
In file included from src/tests/cuda_aes_test.cpp:1:0,
                 from src/tests/tests.cpp:18:
src/tests/../CUDACipherDevice.hpp:9:11: note:   ‘cuda_aes::paracrypt::CUDACipherDevice’
     class CUDACipherDevice:public GPUCipherDevice<cudaStream_t> {
           ^
In file included from src/tests/tests.cpp:18:0:
src/tests/cuda_aes_test.cpp:19:22: error: expected ‘;’ before ‘gpu’
     CUDACipherDevice gpu = new CUDACipherDevice(0);
                      ^
src/tests/cuda_aes_test.cpp:20:5: error: ‘CudaAes’ was not declared in this scope
     CudaAes aes = new CudaEcbAes16B();
     ^
src/tests/cuda_aes_test.cpp:20:13: error: expected ‘;’ before ‘aes’
     CudaAes aes = new CudaEcbAes16B();
             ^
src/tests/cuda_aes_test.cpp:21:5: error: ‘aes’ was not declared in this scope
     aes.setDevice(&gpu);
     ^
src/tests/cuda_aes_test.cpp:21:20: error: ‘gpu’ was not declared in this scope
     aes.setDevice(&gpu);
                    ^
src/tests/cuda_aes_test.cpp:25:12: error: type ‘<type error>’ argument given to ‘delete’, expected pointer
     delete aes;
            ^
src/tests/cuda_aes_test.cpp:26:12: error: type ‘<type error>’ argument given to ‘delete’, expected pointer
     delete gpu;
            ^
make: *** [tests.o] Error 1
11:48:16 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++ "-I/usr/local/cuda/include"  -c src/tests/tests.cpp -o obj/tests.o
In file included from src/tests/../CudaEcbAes16B.hpp:1:0,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../AES.hpp:13:2: error: ‘AES_KEY’ does not name a type
  AES_KEY* roundKeys = NULL;
  ^
src/tests/../AES.hpp:24:13: error: ‘AES_KEY’ has not been declared
  int setKey(AES_KEY * expandedKey);
             ^
src/tests/../AES.hpp:25:2: error: ‘AES_KEY’ does not name a type
  AES_KEY *getExpandedKey();
  ^
In file included from src/tests/../CudaEcbAes16B.hpp:2:0,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../CudaAES.hpp:11:2: error: ‘AES_KEY’ does not name a type
  AES_KEY *deviceKey = NULL;
  ^
src/tests/../CudaAES.hpp:15:3: error: ‘AES_KEY’ does not name a type
   AES_KEY * getDeviceKey();
   ^
In file included from src/tests/tests.cpp:18:0:
src/tests/cuda_aes_test.cpp: In member function ‘void cuda_aes::cuda_ecb_aes_16b::test_method()’:
src/tests/cuda_aes_test.cpp:19:5: error: ‘CUDACipherDevice’ was not declared in this scope
     CUDACipherDevice gpu = new CUDACipherDevice(0);
     ^
src/tests/cuda_aes_test.cpp:19:5: note: suggested alternative:
In file included from src/tests/cuda_aes_test.cpp:1:0,
                 from src/tests/tests.cpp:18:
src/tests/../CUDACipherDevice.hpp:9:11: note:   ‘cuda_aes::paracrypt::CUDACipherDevice’
     class CUDACipherDevice:public GPUCipherDevice<cudaStream_t> {
           ^
In file included from src/tests/tests.cpp:18:0:
src/tests/cuda_aes_test.cpp:19:22: error: expected ‘;’ before ‘gpu’
     CUDACipherDevice gpu = new CUDACipherDevice(0);
                      ^
src/tests/cuda_aes_test.cpp:20:5: error: ‘CudaAes’ was not declared in this scope
     CudaAes aes = new CudaEcbAes16B();
     ^
src/tests/cuda_aes_test.cpp:20:13: error: expected ‘;’ before ‘aes’
     CudaAes aes = new CudaEcbAes16B();
             ^
src/tests/cuda_aes_test.cpp:21:5: error: ‘aes’ was not declared in this scope
     aes.setDevice(&gpu);
     ^
src/tests/cuda_aes_test.cpp:21:20: error: ‘gpu’ was not declared in this scope
     aes.setDevice(&gpu);
                    ^
src/tests/cuda_aes_test.cpp:25:12: error: type ‘<type error>’ argument given to ‘delete’, expected pointer
     delete aes;
            ^
src/tests/cuda_aes_test.cpp:26:12: error: type ‘<type error>’ argument given to ‘delete’, expected pointer
     delete gpu;
            ^
make: *** [tests.o] Error 1
11:48:54 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++ "-I/usr/local/cuda/include"  -c src/tests/tests.cpp -o obj/tests.o
In file included from src/tests/../CudaEcbAes16B.hpp:1:0,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../AES.hpp:13:2: error: ‘AES_KEY’ does not name a type
  AES_KEY* roundKeys = NULL;
  ^
src/tests/../AES.hpp:24:13: error: ‘AES_KEY’ has not been declared
  int setKey(AES_KEY * expandedKey);
             ^
src/tests/../AES.hpp:25:2: error: ‘AES_KEY’ does not name a type
  AES_KEY *getExpandedKey();
  ^
In file included from src/tests/../CudaEcbAes16B.hpp:2:0,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../CudaAES.hpp:11:2: error: ‘AES_KEY’ does not name a type
  AES_KEY *deviceKey = NULL;
  ^
src/tests/../CudaAES.hpp:15:3: error: ‘AES_KEY’ does not name a type
   AES_KEY * getDeviceKey();
   ^
In file included from src/tests/tests.cpp:18:0:
src/tests/cuda_aes_test.cpp: In member function ‘void cuda_aes::cuda_ecb_aes_16b::test_method()’:
src/tests/cuda_aes_test.cpp:19:5: error: ‘CUDACipherDevice’ was not declared in this scope
     CUDACipherDevice gpu = new CUDACipherDevice(0);
     ^
src/tests/cuda_aes_test.cpp:19:5: note: suggested alternative:
In file included from src/tests/cuda_aes_test.cpp:1:0,
                 from src/tests/tests.cpp:18:
src/tests/../CUDACipherDevice.hpp:9:11: note:   ‘cuda_aes::paracrypt::CUDACipherDevice’
     class CUDACipherDevice:public GPUCipherDevice<cudaStream_t> {
           ^
In file included from src/tests/tests.cpp:18:0:
src/tests/cuda_aes_test.cpp:19:22: error: expected ‘;’ before ‘gpu’
     CUDACipherDevice gpu = new CUDACipherDevice(0);
                      ^
src/tests/cuda_aes_test.cpp:20:5: error: ‘CudaAes’ was not declared in this scope
     CudaAes aes = new CudaEcbAes16B();
     ^
src/tests/cuda_aes_test.cpp:20:13: error: expected ‘;’ before ‘aes’
     CudaAes aes = new CudaEcbAes16B();
             ^
src/tests/cuda_aes_test.cpp:21:5: error: ‘aes’ was not declared in this scope
     aes.setDevice(&gpu);
     ^
src/tests/cuda_aes_test.cpp:21:20: error: ‘gpu’ was not declared in this scope
     aes.setDevice(&gpu);
                    ^
src/tests/cuda_aes_test.cpp:25:12: error: type ‘<type error>’ argument given to ‘delete’, expected pointer
     delete aes;
            ^
src/tests/cuda_aes_test.cpp:26:12: error: type ‘<type error>’ argument given to ‘delete’, expected pointer
     delete gpu;
            ^
make: *** [tests.o] Error 1
11:50:03 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++ "-I/usr/local/cuda/include"  -c src/tests/tests.cpp -o obj/tests.o
In file included from src/tests/../CUDACipherDevice.hpp:3:0,
                 from src/tests/cuda_aes_test.cpp:3,
                 from src/tests/tests.cpp:18:
src/tests/../GPUCipherDevice.hpp: In member function ‘void cuda_aes::cuda_ecb_aes_16b::test_method()’:
src/tests/../GPUCipherDevice.hpp:1:1: error: ‘namespace’ definition is not allowed here
 namespace paracrypt {
 ^
In file included from src/tests/../CUDACipherDevice.hpp:4:0,
                 from src/tests/cuda_aes_test.cpp:3,
                 from src/tests/tests.cpp:18:
/usr/local/cuda/include/cuda.h:211:8: error: expected unqualified-id before string constant
 extern "C" {
        ^
In file included from /usr/include/boost/test/unit_test.hpp:19:0,
                 from /usr/include/boost/test/included/unit_test.hpp:37,
                 from src/tests/tests.cpp:2:
src/tests/tests.cpp:19:1: error: expected ‘}’ at end of input
 BOOST_AUTO_TEST_SUITE_END()
 ^
src/tests/tests.cpp: At global scope:
src/tests/tests.cpp:19:1: error: expected ‘}’ at end of input
make: *** [tests.o] Error 1
11:50:11 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++ "-I/usr/local/cuda/include"  -c src/tests/tests.cpp -o obj/tests.o
In file included from src/tests/../CudaEcbAes16B.hpp:1:0,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../AES.hpp:13:2: error: ‘AES_KEY’ does not name a type
  AES_KEY* roundKeys = NULL;
  ^
src/tests/../AES.hpp:24:13: error: ‘AES_KEY’ has not been declared
  int setKey(AES_KEY * expandedKey);
             ^
src/tests/../AES.hpp:25:2: error: ‘AES_KEY’ does not name a type
  AES_KEY *getExpandedKey();
  ^
In file included from src/tests/../CudaEcbAes16B.hpp:2:0,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../CudaAES.hpp:11:2: error: ‘AES_KEY’ does not name a type
  AES_KEY *deviceKey = NULL;
  ^
src/tests/../CudaAES.hpp:15:3: error: ‘AES_KEY’ does not name a type
   AES_KEY * getDeviceKey();
   ^
In file included from src/tests/tests.cpp:18:0:
src/tests/cuda_aes_test.cpp: In member function ‘void cuda_aes::cuda_ecb_aes_16b::test_method()’:
src/tests/cuda_aes_test.cpp:19:5: error: ‘CUDACipherDevice’ was not declared in this scope
     CUDACipherDevice gpu = new CUDACipherDevice(0);
     ^
src/tests/cuda_aes_test.cpp:19:5: note: suggested alternative:
In file included from src/tests/cuda_aes_test.cpp:1:0,
                 from src/tests/tests.cpp:18:
src/tests/../CUDACipherDevice.hpp:9:11: note:   ‘cuda_aes::paracrypt::CUDACipherDevice’
     class CUDACipherDevice:public GPUCipherDevice<cudaStream_t> {
           ^
In file included from src/tests/tests.cpp:18:0:
src/tests/cuda_aes_test.cpp:19:22: error: expected ‘;’ before ‘gpu’
     CUDACipherDevice gpu = new CUDACipherDevice(0);
                      ^
src/tests/cuda_aes_test.cpp:20:5: error: ‘CudaAes’ was not declared in this scope
     CudaAes aes = new CudaEcbAes16B();
     ^
src/tests/cuda_aes_test.cpp:20:13: error: expected ‘;’ before ‘aes’
     CudaAes aes = new CudaEcbAes16B();
             ^
src/tests/cuda_aes_test.cpp:21:5: error: ‘aes’ was not declared in this scope
     aes.setDevice(&gpu);
     ^
src/tests/cuda_aes_test.cpp:21:20: error: ‘gpu’ was not declared in this scope
     aes.setDevice(&gpu);
                    ^
src/tests/cuda_aes_test.cpp:25:12: error: type ‘<type error>’ argument given to ‘delete’, expected pointer
     delete aes;
            ^
src/tests/cuda_aes_test.cpp:26:12: error: type ‘<type error>’ argument given to ‘delete’, expected pointer
     delete gpu;
            ^
make: *** [tests.o] Error 1
11:51:31 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++ "-I/usr/local/cuda/include"  -c src/tests/tests.cpp -o obj/tests.o
In file included from src/tests/../CudaEcbAes16B.hpp:1:0,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../AES.hpp:13:2: error: ‘AES_KEY’ does not name a type
  AES_KEY* roundKeys = NULL;
  ^
src/tests/../AES.hpp:24:13: error: ‘AES_KEY’ has not been declared
  int setKey(AES_KEY * expandedKey);
             ^
src/tests/../AES.hpp:25:2: error: ‘AES_KEY’ does not name a type
  AES_KEY *getExpandedKey();
  ^
In file included from src/tests/../CudaEcbAes16B.hpp:2:0,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../CudaAES.hpp:11:2: error: ‘AES_KEY’ does not name a type
  AES_KEY *deviceKey = NULL;
  ^
src/tests/../CudaAES.hpp:15:3: error: ‘AES_KEY’ does not name a type
   AES_KEY * getDeviceKey();
   ^
In file included from src/tests/tests.cpp:18:0:
src/tests/cuda_aes_test.cpp: In member function ‘void cuda_aes::cuda_ecb_aes_16b::test_method()’:
src/tests/cuda_aes_test.cpp:19:72: error: invalid conversion from ‘cuda_aes::paracrypt::CUDACipherDevice*’ to ‘int’ [-fpermissive]
     paracrypt::CUDACipherDevice gpu = new paracrypt::CUDACipherDevice(0);
                                                                        ^
In file included from src/tests/cuda_aes_test.cpp:1:0,
                 from src/tests/tests.cpp:18:
src/tests/../CUDACipherDevice.hpp:22:3: error:   initializing argument 1 of ‘cuda_aes::paracrypt::CUDACipherDevice::CUDACipherDevice(int)’ [-fpermissive]
   CUDACipherDevice(int device);
   ^
In file included from src/tests/tests.cpp:18:0:
src/tests/cuda_aes_test.cpp:20:5: error: ‘CudaAes’ is not a member of ‘cuda_aes::paracrypt’
     paracrypt::CudaAes aes = new paracrypt::CudaEcbAes16B();
     ^
src/tests/cuda_aes_test.cpp:20:24: error: expected ‘;’ before ‘aes’
     paracrypt::CudaAes aes = new paracrypt::CudaEcbAes16B();
                        ^
src/tests/cuda_aes_test.cpp:21:5: error: ‘aes’ was not declared in this scope
     aes.setDevice(&gpu);
     ^
src/tests/cuda_aes_test.cpp:25:12: error: type ‘<type error>’ argument given to ‘delete’, expected pointer
     delete aes;
            ^
src/tests/cuda_aes_test.cpp:26:12: error: type ‘class cuda_aes::paracrypt::CUDACipherDevice’ argument given to ‘delete’, expected pointer
     delete gpu;
            ^
make: *** [tests.o] Error 1
11:52:47 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++ "-I/usr/local/cuda/include"  -c src/tests/tests.cpp -o obj/tests.o
In file included from src/tests/../CudaEcbAes16B.hpp:1:0,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../AES.hpp:13:2: error: ‘AES_KEY’ does not name a type
  AES_KEY* roundKeys = NULL;
  ^
src/tests/../AES.hpp:24:13: error: ‘AES_KEY’ has not been declared
  int setKey(AES_KEY * expandedKey);
             ^
src/tests/../AES.hpp:25:2: error: ‘AES_KEY’ does not name a type
  AES_KEY *getExpandedKey();
  ^
In file included from src/tests/../CudaEcbAes16B.hpp:2:0,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../CudaAES.hpp:11:2: error: ‘AES_KEY’ does not name a type
  AES_KEY *deviceKey = NULL;
  ^
src/tests/../CudaAES.hpp:15:3: error: ‘AES_KEY’ does not name a type
   AES_KEY * getDeviceKey();
   ^
In file included from src/tests/tests.cpp:18:0:
src/tests/cuda_aes_test.cpp: In member function ‘void cuda_aes::cuda_ecb_aes_16b::test_method()’:
src/tests/cuda_aes_test.cpp:20:5: error: ‘CudaAes’ is not a member of ‘cuda_aes::paracrypt’
     paracrypt::CudaAes* aes = new paracrypt::CudaEcbAes16B();
     ^
src/tests/cuda_aes_test.cpp:20:25: error: ‘aes’ was not declared in this scope
     paracrypt::CudaAes* aes = new paracrypt::CudaEcbAes16B();
                         ^
src/tests/cuda_aes_test.cpp:20:35: error: expected type-specifier
     paracrypt::CudaAes* aes = new paracrypt::CudaEcbAes16B();
                                   ^
src/tests/cuda_aes_test.cpp:20:35: error: expected ‘;’
src/tests/cuda_aes_test.cpp:25:12: error: type ‘<type error>’ argument given to ‘delete’, expected pointer
     delete aes;
            ^
make: *** [tests.o] Error 1
11:53:30 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++ "-I/usr/local/cuda/include"  -c src/tests/tests.cpp -o obj/tests.o
In file included from src/tests/../CudaEcbAes16B.hpp:1:0,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../AES.hpp:13:2: error: ‘AES_KEY’ does not name a type
  AES_KEY* roundKeys = NULL;
  ^
src/tests/../AES.hpp:24:13: error: ‘AES_KEY’ has not been declared
  int setKey(AES_KEY * expandedKey);
             ^
src/tests/../AES.hpp:25:2: error: ‘AES_KEY’ does not name a type
  AES_KEY *getExpandedKey();
  ^
In file included from src/tests/../CudaEcbAes16B.hpp:2:0,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../CudaAES.hpp:11:2: error: ‘AES_KEY’ does not name a type
  AES_KEY *deviceKey = NULL;
  ^
src/tests/../CudaAES.hpp:15:3: error: ‘AES_KEY’ does not name a type
   AES_KEY * getDeviceKey();
   ^
In file included from src/tests/tests.cpp:18:0:
src/tests/cuda_aes_test.cpp: In member function ‘void cuda_aes::cuda_ecb_aes_16b::test_method()’:
src/tests/cuda_aes_test.cpp:20:35: error: expected type-specifier
     paracrypt::CudaAES* aes = new paracrypt::CudaEcbAes16B();
                                   ^
src/tests/cuda_aes_test.cpp:23:31: error: no matching function for call to ‘cuda_aes::paracrypt::CudaAES::encrypt(const unsigned char (*)[128], const unsigned char (*)[128], int)’
     aes->encrypt(&data,&data,1);
                               ^
src/tests/cuda_aes_test.cpp:23:31: note: candidate is:
In file included from src/tests/../CudaEcbAes16B.hpp:2:0,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../CudaAES.hpp:18:14: note: virtual int cuda_aes::paracrypt::CudaAES::encrypt(const unsigned char*, const unsigned char*, int)
  virtual int encrypt(const unsigned char in[],
              ^
src/tests/../CudaAES.hpp:18:14: note:   no known conversion for argument 1 from ‘const unsigned char (*)[128]’ to ‘const unsigned char*’
make: *** [tests.o] Error 1
11:53:58 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++ "-I/usr/local/cuda/include"  -c src/tests/tests.cpp -o obj/tests.o
In file included from src/tests/../CudaEcbAes16B.hpp:1:0,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../AES.hpp:13:2: error: ‘AES_KEY’ does not name a type
  AES_KEY* roundKeys = NULL;
  ^
src/tests/../AES.hpp:24:13: error: ‘AES_KEY’ has not been declared
  int setKey(AES_KEY * expandedKey);
             ^
src/tests/../AES.hpp:25:2: error: ‘AES_KEY’ does not name a type
  AES_KEY *getExpandedKey();
  ^
In file included from src/tests/../CudaEcbAes16B.hpp:2:0,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../CudaAES.hpp:11:2: error: ‘AES_KEY’ does not name a type
  AES_KEY *deviceKey = NULL;
  ^
src/tests/../CudaAES.hpp:15:3: error: ‘AES_KEY’ does not name a type
   AES_KEY * getDeviceKey();
   ^
In file included from src/tests/tests.cpp:18:0:
src/tests/cuda_aes_test.cpp: In member function ‘void cuda_aes::cuda_ecb_aes_16b::test_method()’:
src/tests/cuda_aes_test.cpp:23:31: error: no matching function for call to ‘cuda_aes::paracrypt::CudaAES::encrypt(const unsigned char (*)[128], const unsigned char (*)[128], int)’
     aes->encrypt(&data,&data,1);
                               ^
src/tests/cuda_aes_test.cpp:23:31: note: candidate is:
In file included from src/tests/../CudaEcbAes16B.hpp:2:0,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../CudaAES.hpp:18:14: note: virtual int cuda_aes::paracrypt::CudaAES::encrypt(const unsigned char*, const unsigned char*, int)
  virtual int encrypt(const unsigned char in[],
              ^
src/tests/../CudaAES.hpp:18:14: note:   no known conversion for argument 1 from ‘const unsigned char (*)[128]’ to ‘const unsigned char*’
make: *** [tests.o] Error 1
11:54:50 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++ "-I/usr/local/cuda/include"  -c src/tests/tests.cpp -o obj/tests.o
In file included from src/tests/../CudaEcbAes16B.hpp:1:0,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../AES.hpp:13:2: error: ‘AES_KEY’ does not name a type
  AES_KEY* roundKeys = NULL;
  ^
src/tests/../AES.hpp:24:13: error: ‘AES_KEY’ has not been declared
  int setKey(AES_KEY * expandedKey);
             ^
src/tests/../AES.hpp:25:2: error: ‘AES_KEY’ does not name a type
  AES_KEY *getExpandedKey();
  ^
In file included from src/tests/../CudaEcbAes16B.hpp:2:0,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../CudaAES.hpp:11:2: error: ‘AES_KEY’ does not name a type
  AES_KEY *deviceKey = NULL;
  ^
src/tests/../CudaAES.hpp:15:3: error: ‘AES_KEY’ does not name a type
   AES_KEY * getDeviceKey();
   ^
make: *** [tests.o] Error 1
11:57:34 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++ "-I/usr/local/cuda/include"  -c src/tests/tests.cpp -o obj/tests.o
In file included from src/tests/../CudaEcbAes16B.hpp:1:0,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../AES.hpp:13:2: error: ‘AES_KEY’ does not name a type
  AES_KEY* roundKeys = NULL;
  ^
src/tests/../AES.hpp:24:13: error: ‘AES_KEY’ has not been declared
  int setKey(AES_KEY * expandedKey);
             ^
src/tests/../AES.hpp:25:2: error: ‘AES_KEY’ does not name a type
  AES_KEY *getExpandedKey();
  ^
In file included from src/tests/../CudaEcbAes16B.hpp:2:0,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../CudaAES.hpp:11:2: error: ‘AES_KEY’ does not name a type
  AES_KEY *deviceKey = NULL;
  ^
src/tests/../CudaAES.hpp:15:3: error: ‘AES_KEY’ does not name a type
   AES_KEY * getDeviceKey();
   ^
make: *** [tests.o] Error 1
12:01:30 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++ "-I/usr/local/cuda/include"  -c src/tests/tests.cpp -o obj/tests.o
In file included from src/tests/../CudaEcbAes16B.hpp:1:0,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../AES.hpp:13:2: error: ‘AES_KEY’ does not name a type
  AES_KEY* roundKeys = NULL;
  ^
src/tests/../AES.hpp:24:13: error: ‘AES_KEY’ has not been declared
  int setKey(AES_KEY * expandedKey);
             ^
src/tests/../AES.hpp:25:2: error: ‘AES_KEY’ does not name a type
  AES_KEY *getExpandedKey();
  ^
In file included from src/tests/../CudaEcbAes16B.hpp:2:0,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../CudaAES.hpp:11:2: error: ‘AES_KEY’ does not name a type
  AES_KEY *deviceKey = NULL;
  ^
src/tests/../CudaAES.hpp:15:3: error: ‘AES_KEY’ does not name a type
   AES_KEY * getDeviceKey();
   ^
make: *** [tests.o] Error 1
12:01:39 **** Clean-only build of configuration Debug for project pcnsight ****
make clean 
rm -f obj/*.o
rm -f lib/*.a
rm -f bin/*
rm -f src/*~
rm -f src/tests/*~
rm -f src/openssl/*~
12:01:42 **** Build of configuration Debug for project pcnsight ****
make all 
g++ "-I/usr/local/cuda/include"  -c src/tests/tests.cpp -o obj/tests.o
In file included from src/tests/../CudaEcbAes16B.hpp:1:0,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../AES.hpp:13:2: error: ‘AES_KEY’ does not name a type
  AES_KEY* roundKeys = NULL;
  ^
src/tests/../AES.hpp:24:13: error: ‘AES_KEY’ has not been declared
  int setKey(AES_KEY * expandedKey);
             ^
src/tests/../AES.hpp:25:2: error: ‘AES_KEY’ does not name a type
  AES_KEY *getExpandedKey();
  ^
In file included from src/tests/../CudaEcbAes16B.hpp:2:0,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../CudaAES.hpp:11:2: error: ‘AES_KEY’ does not name a type
  AES_KEY *deviceKey = NULL;
  ^
src/tests/../CudaAES.hpp:15:3: error: ‘AES_KEY’ does not name a type
   AES_KEY * getDeviceKey();
   ^
make: *** [tests.o] Error 1
12:03:17 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++ "-I/usr/local/cuda/include"  -c src/tests/tests.cpp -o obj/tests.o
In file included from src/tests/../CudaEcbAes16B.hpp:3:0,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../AES.hpp:13:2: error: ‘AES_KEY’ does not name a type
  AES_KEY* roundKeys = NULL;
  ^
src/tests/../AES.hpp:24:13: error: ‘AES_KEY’ has not been declared
  int setKey(AES_KEY * expandedKey);
             ^
src/tests/../AES.hpp:25:2: error: ‘AES_KEY’ does not name a type
  AES_KEY *getExpandedKey();
  ^
In file included from src/tests/../CudaEcbAes16B.hpp:4:0,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../CudaAES.hpp:11:2: error: ‘AES_KEY’ does not name a type
  AES_KEY *deviceKey = NULL;
  ^
src/tests/../CudaAES.hpp:15:3: error: ‘AES_KEY’ does not name a type
   AES_KEY * getDeviceKey();
   ^
make: *** [tests.o] Error 1
12:04:43 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++ "-I/usr/local/cuda/include"  -c src/tests/tests.cpp -o obj/tests.o
In file included from src/tests/../CudaEcbAes16B.hpp:3:0,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../AES.hpp:16:2: error: ‘AES_KEY’ does not name a type
  AES_KEY* roundKeys = NULL;
  ^
src/tests/../AES.hpp:27:13: error: ‘AES_KEY’ has not been declared
  int setKey(AES_KEY * expandedKey);
             ^
src/tests/../AES.hpp:28:2: error: ‘AES_KEY’ does not name a type
  AES_KEY *getExpandedKey();
  ^
In file included from src/tests/../CudaEcbAes16B.hpp:4:0,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../CudaAES.hpp:11:2: error: ‘AES_KEY’ does not name a type
  AES_KEY *deviceKey = NULL;
  ^
src/tests/../CudaAES.hpp:15:3: error: ‘AES_KEY’ does not name a type
   AES_KEY * getDeviceKey();
   ^
make: *** [tests.o] Error 1
12:04:51 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++ "-I/usr/local/cuda/include"  -c src/tests/tests.cpp -o obj/tests.o
In file included from src/tests/../CudaEcbAes16B.hpp:3:0,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../AES.hpp:13:2: error: ‘AES_KEY’ does not name a type
  AES_KEY* roundKeys = NULL;
  ^
src/tests/../AES.hpp:24:13: error: ‘AES_KEY’ has not been declared
  int setKey(AES_KEY * expandedKey);
             ^
src/tests/../AES.hpp:25:2: error: ‘AES_KEY’ does not name a type
  AES_KEY *getExpandedKey();
  ^
In file included from src/tests/../CudaEcbAes16B.hpp:4:0,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../CudaAES.hpp:11:2: error: ‘AES_KEY’ does not name a type
  AES_KEY *deviceKey = NULL;
  ^
src/tests/../CudaAES.hpp:15:3: error: ‘AES_KEY’ does not name a type
   AES_KEY * getDeviceKey();
   ^
make: *** [tests.o] Error 1
12:07:55 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++ "-I/usr/local/cuda/include"  -c src/tests/tests.cpp -o obj/tests.o
In file included from src/tests/../CudaEcbAes16B.hpp:3:0,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../AES.hpp:13:2: error: ‘AES_KEY’ does not name a type
  AES_KEY* roundKeys = NULL;
  ^
src/tests/../AES.hpp:24:13: error: ‘AES_KEY’ has not been declared
  int setKey(AES_KEY * expandedKey);
             ^
src/tests/../AES.hpp:25:2: error: ‘AES_KEY’ does not name a type
  AES_KEY *getExpandedKey();
  ^
In file included from src/tests/../CudaEcbAes16B.hpp:4:0,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../CudaAES.hpp:11:2: error: ‘AES_KEY’ does not name a type
  AES_KEY *deviceKey = NULL;
  ^
src/tests/../CudaAES.hpp:15:3: error: ‘AES_KEY’ does not name a type
   AES_KEY * getDeviceKey();
   ^
make: *** [tests.o] Error 1
12:08:00 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++ "-I/usr/local/cuda/include"  -c src/tests/tests.cpp -o obj/tests.o
In file included from src/tests/../CudaEcbAes16B.hpp:3:0,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../AES.hpp:13:2: error: ‘AES_KEY’ does not name a type
  AES_KEY* roundKeys = NULL;
  ^
src/tests/../AES.hpp:24:13: error: ‘AES_KEY’ has not been declared
  int setKey(AES_KEY * expandedKey);
             ^
src/tests/../AES.hpp:25:2: error: ‘AES_KEY’ does not name a type
  AES_KEY *getExpandedKey();
  ^
In file included from src/tests/../CudaEcbAes16B.hpp:4:0,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../CudaAES.hpp:11:2: error: ‘AES_KEY’ does not name a type
  AES_KEY *deviceKey = NULL;
  ^
src/tests/../CudaAES.hpp:15:3: error: ‘AES_KEY’ does not name a type
   AES_KEY * getDeviceKey();
   ^
make: *** [tests.o] Error 1
12:09:15 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++ "-I/usr/local/cuda/include"  -c src/tests/tests.cpp -o obj/tests.o
In file included from src/tests/../CudaEcbAes16B.hpp:3:0,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../AES.hpp:8:34: error: expected class-name before ‘{’ token
     class AES:public BlockCipher {
                                  ^
src/tests/../AES.hpp:13:2: error: ‘AES_KEY’ does not name a type
  AES_KEY* roundKeys = NULL;
  ^
src/tests/../AES.hpp:24:13: error: ‘AES_KEY’ has not been declared
  int setKey(AES_KEY * expandedKey);
             ^
src/tests/../AES.hpp:25:2: error: ‘AES_KEY’ does not name a type
  AES_KEY *getExpandedKey();
  ^
In file included from src/tests/../CudaEcbAes16B.hpp:4:0,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../CudaAES.hpp:11:2: error: ‘AES_KEY’ does not name a type
  AES_KEY *deviceKey = NULL;
  ^
src/tests/../CudaAES.hpp:15:3: error: ‘AES_KEY’ does not name a type
   AES_KEY * getDeviceKey();
   ^
make: *** [tests.o] Error 1
12:09:28 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++ "-I/usr/local/cuda/include"  -c src/tests/tests.cpp -o obj/tests.o
In file included from src/tests/../CudaEcbAes16B.hpp:3:0,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../AES.hpp:13:2: error: ‘AES_KEY’ does not name a type
  AES_KEY* roundKeys = NULL;
  ^
src/tests/../AES.hpp:24:13: error: ‘AES_KEY’ has not been declared
  int setKey(AES_KEY * expandedKey);
             ^
src/tests/../AES.hpp:25:2: error: ‘AES_KEY’ does not name a type
  AES_KEY *getExpandedKey();
  ^
In file included from src/tests/../CudaEcbAes16B.hpp:4:0,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../CudaAES.hpp:11:2: error: ‘AES_KEY’ does not name a type
  AES_KEY *deviceKey = NULL;
  ^
src/tests/../CudaAES.hpp:15:3: error: ‘AES_KEY’ does not name a type
   AES_KEY * getDeviceKey();
   ^
make: *** [tests.o] Error 1
12:09:53 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++ "-I/usr/local/cuda/include"  -c src/tests/tests.cpp -o obj/tests.o
In file included from src/tests/../CudaEcbAes16B.hpp:3:0,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../AES.hpp:13:6: error: ‘aes_key_st’ does not name a type
      aes_key_st* roundKeys = NULL;
      ^
src/tests/../AES.hpp:24:13: error: ‘AES_KEY’ has not been declared
  int setKey(AES_KEY * expandedKey);
             ^
src/tests/../AES.hpp:25:2: error: ‘AES_KEY’ does not name a type
  AES_KEY *getExpandedKey();
  ^
In file included from src/tests/../CudaEcbAes16B.hpp:4:0,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../CudaAES.hpp:11:2: error: ‘AES_KEY’ does not name a type
  AES_KEY *deviceKey = NULL;
  ^
src/tests/../CudaAES.hpp:15:3: error: ‘AES_KEY’ does not name a type
   AES_KEY * getDeviceKey();
   ^
make: *** [tests.o] Error 1
12:10:02 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++ "-I/usr/local/cuda/include"  -c src/tests/tests.cpp -o obj/tests.o
In file included from src/tests/../CudaEcbAes16B.hpp:3:0,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../AES.hpp:13:2: error: ‘AES_KEY’ does not name a type
  AES_KEY* roundKeys = NULL;
  ^
src/tests/../AES.hpp:24:13: error: ‘AES_KEY’ has not been declared
  int setKey(AES_KEY * expandedKey);
             ^
src/tests/../AES.hpp:25:2: error: ‘AES_KEY’ does not name a type
  AES_KEY *getExpandedKey();
  ^
In file included from src/tests/../CudaEcbAes16B.hpp:4:0,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../CudaAES.hpp:11:2: error: ‘AES_KEY’ does not name a type
  AES_KEY *deviceKey = NULL;
  ^
src/tests/../CudaAES.hpp:15:3: error: ‘AES_KEY’ does not name a type
   AES_KEY * getDeviceKey();
   ^
make: *** [tests.o] Error 1
12:10:54 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++ "-I/usr/local/cuda/include"  -c src/tests/tests.cpp -o obj/tests.o
In file included from src/tests/../CudaEcbAes16B.hpp:3:0,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../AES.hpp:15:2: error: ‘AES_KEY’ does not name a type
  AES_KEY* roundKeys = NULL;
  ^
src/tests/../AES.hpp:26:13: error: ‘AES_KEY’ has not been declared
  int setKey(AES_KEY * expandedKey);
             ^
src/tests/../AES.hpp:27:2: error: ‘AES_KEY’ does not name a type
  AES_KEY *getExpandedKey();
  ^
In file included from src/tests/../CudaEcbAes16B.hpp:4:0,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../CudaAES.hpp:11:2: error: ‘AES_KEY’ does not name a type
  AES_KEY *deviceKey = NULL;
  ^
src/tests/../CudaAES.hpp:15:3: error: ‘AES_KEY’ does not name a type
   AES_KEY * getDeviceKey();
   ^
make: *** [tests.o] Error 1
12:11:04 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++ "-I/usr/local/cuda/include"  -c src/tests/tests.cpp -o obj/tests.o
In file included from src/tests/../CudaEcbAes16B.hpp:3:0,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../AES.hpp:13:2: error: ‘AES_KEY’ does not name a type
  AES_KEY* roundKeys = NULL;
  ^
src/tests/../AES.hpp:24:13: error: ‘AES_KEY’ has not been declared
  int setKey(AES_KEY * expandedKey);
             ^
src/tests/../AES.hpp:25:2: error: ‘AES_KEY’ does not name a type
  AES_KEY *getExpandedKey();
  ^
In file included from src/tests/../CudaEcbAes16B.hpp:4:0,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../CudaAES.hpp:11:2: error: ‘AES_KEY’ does not name a type
  AES_KEY *deviceKey = NULL;
  ^
src/tests/../CudaAES.hpp:15:3: error: ‘AES_KEY’ does not name a type
   AES_KEY * getDeviceKey();
   ^
make: *** [tests.o] Error 1
12:12:44 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++ "-I/usr/local/cuda/include"  -c src/tests/tests.cpp -o obj/tests.o
g++  -c src/openssl/AES_key_schedule.c -o obj/AES_key_schedule.o
g++  -c src/logging.cpp -o obj/logging.o
g++  -c src/AES.cpp -o obj/AES.o
In file included from src/AES.cpp:1:0:
src/AES.hpp:13:23: warning: non-static data member initializers only available with -std=c++11 or -std=gnu++11 [enabled by default]
  AES_KEY* roundKeys = NULL;
                       ^
src/AES.hpp:13:23: error: ‘NULL’ was not declared in this scope
src/AES.cpp: In constructor ‘paracrypt::AES::AES()’:
src/AES.cpp:5:45: error: ‘malloc’ was not declared in this scope
     this->roundKeys = malloc(sizeof(AES_KEY));
                                             ^
src/AES.cpp: In destructor ‘virtual paracrypt::AES::~AES()’:
src/AES.cpp:10:25: error: ‘free’ was not declared in this scope
     free(this->roundKeys);
                         ^
make: *** [AES.o] Error 1
12:13:46 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++ "-I/usr/local/cuda/include"  -c src/tests/tests.cpp -o obj/tests.o
In file included from src/tests/../CudaEcbAes16B.hpp:3:0,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../AES.hpp:13:2: error: ‘AES_KEY’ does not name a type
  AES_KEY* roundKeys = NULL;
  ^
src/tests/../AES.hpp:24:13: error: ‘AES_KEY’ has not been declared
  int setKey(AES_KEY * expandedKey);
             ^
src/tests/../AES.hpp:25:2: error: ‘AES_KEY’ does not name a type
  AES_KEY *getExpandedKey();
  ^
In file included from src/tests/../CudaEcbAes16B.hpp:4:0,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../CudaAES.hpp:11:2: error: ‘AES_KEY’ does not name a type
  AES_KEY *deviceKey = NULL;
  ^
src/tests/../CudaAES.hpp:15:3: error: ‘AES_KEY’ does not name a type
   AES_KEY * getDeviceKey();
   ^
make: *** [tests.o] Error 1
12:13:55 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++ "-I/usr/local/cuda/include"  -c src/tests/tests.cpp -o obj/tests.o
In file included from src/tests/../CudaEcbAes16B.hpp:3:0,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../AES.hpp:13:2: error: ‘AES_KEY’ does not name a type
  AES_KEY* roundKeys = NULL;
  ^
src/tests/../AES.hpp:24:13: error: ‘AES_KEY’ has not been declared
  int setKey(AES_KEY * expandedKey);
             ^
src/tests/../AES.hpp:25:2: error: ‘AES_KEY’ does not name a type
  AES_KEY *getExpandedKey();
  ^
In file included from src/tests/../CudaEcbAes16B.hpp:4:0,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../CudaAES.hpp:11:2: error: ‘AES_KEY’ does not name a type
  AES_KEY *deviceKey = NULL;
  ^
src/tests/../CudaAES.hpp:15:3: error: ‘AES_KEY’ does not name a type
   AES_KEY * getDeviceKey();
   ^
make: *** [tests.o] Error 1
12:19:26 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++ "-I/usr/local/cuda/include"  -c src/tests/tests.cpp -o obj/tests.o
In file included from src/tests/../CudaEcbAes16B.hpp:3:0,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../AES.hpp:13:2: error: ‘AES_KEY’ does not name a type
  AES_KEY* roundKeys = NULL;
  ^
src/tests/../AES.hpp:24:13: error: ‘AES_KEY’ has not been declared
  int setKey(AES_KEY * expandedKey);
             ^
src/tests/../AES.hpp:25:2: error: ‘AES_KEY’ does not name a type
  AES_KEY *getExpandedKey();
  ^
In file included from src/tests/../CudaEcbAes16B.hpp:4:0,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../CudaAES.hpp:11:2: error: ‘AES_KEY’ does not name a type
  AES_KEY *deviceKey = NULL;
  ^
src/tests/../CudaAES.hpp:15:3: error: ‘AES_KEY’ does not name a type
   AES_KEY * getDeviceKey();
   ^
make: *** [tests.o] Error 1
12:19:40 **** Clean-only build of configuration Debug for project pcnsight ****
make clean 
rm -f obj/*.o
rm -f lib/*.a
rm -f bin/*
rm -f src/*~
rm -f src/tests/*~
rm -f src/openssl/*~
12:19:42 **** Build of configuration Debug for project pcnsight ****
make all 
g++ "-I/usr/local/cuda/include"  -c src/tests/tests.cpp -o obj/tests.o
In file included from src/tests/../CudaEcbAes16B.hpp:3:0,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../AES.hpp:13:2: error: ‘AES_KEY’ does not name a type
  AES_KEY* roundKeys = NULL;
  ^
src/tests/../AES.hpp:24:13: error: ‘AES_KEY’ has not been declared
  int setKey(AES_KEY * expandedKey);
             ^
src/tests/../AES.hpp:25:2: error: ‘AES_KEY’ does not name a type
  AES_KEY *getExpandedKey();
  ^
In file included from src/tests/../CudaEcbAes16B.hpp:4:0,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../CudaAES.hpp:11:2: error: ‘AES_KEY’ does not name a type
  AES_KEY *deviceKey = NULL;
  ^
src/tests/../CudaAES.hpp:15:3: error: ‘AES_KEY’ does not name a type
   AES_KEY * getDeviceKey();
   ^
make: *** [tests.o] Error 1
12:19:58 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++ "-I/usr/local/cuda/include"  -c src/tests/tests.cpp -o obj/tests.o
In file included from src/tests/../CudaEcbAes16B.hpp:3:0,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../AES.hpp:13:2: error: ‘AES_KEY’ does not name a type
  AES_KEY* roundKeys = NULL;
  ^
src/tests/../AES.hpp:24:13: error: ‘AES_KEY’ has not been declared
  int setKey(AES_KEY * expandedKey);
             ^
src/tests/../AES.hpp:25:2: error: ‘AES_KEY’ does not name a type
  AES_KEY *getExpandedKey();
  ^
In file included from src/tests/../CudaEcbAes16B.hpp:4:0,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../CudaAES.hpp:11:2: error: ‘AES_KEY’ does not name a type
  AES_KEY *deviceKey = NULL;
  ^
src/tests/../CudaAES.hpp:15:3: error: ‘AES_KEY’ does not name a type
   AES_KEY * getDeviceKey();
   ^
make: *** [tests.o] Error 1
12:20:08 **** Clean-only build of configuration Debug for project pcnsight ****
make clean 
rm -f obj/*.o
rm -f lib/*.a
rm -f bin/*
rm -f src/*~
rm -f src/tests/*~
rm -f src/openssl/*~
12:20:10 **** Build of configuration Debug for project pcnsight ****
make all 
g++ "-I/usr/local/cuda/include"  -c src/tests/tests.cpp -o obj/tests.o
In file included from src/tests/../CudaEcbAes16B.hpp:3:0,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../AES.hpp:13:2: error: ‘AES_KEY’ does not name a type
  AES_KEY* roundKeys = NULL;
  ^
src/tests/../AES.hpp:24:13: error: ‘AES_KEY’ has not been declared
  int setKey(AES_KEY * expandedKey);
             ^
src/tests/../AES.hpp:25:2: error: ‘AES_KEY’ does not name a type
  AES_KEY *getExpandedKey();
  ^
In file included from src/tests/../CudaEcbAes16B.hpp:4:0,
                 from src/tests/cuda_aes_test.cpp:2,
                 from src/tests/tests.cpp:18:
src/tests/../CudaAES.hpp:11:2: error: ‘AES_KEY’ does not name a type
  AES_KEY *deviceKey = NULL;
  ^
src/tests/../CudaAES.hpp:15:3: error: ‘AES_KEY’ does not name a type
   AES_KEY * getDeviceKey();
   ^
make: *** [tests.o] Error 1
12:21:05 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++ "-I/usr/local/cuda/include"  -c src/tests/tests.cpp -o obj/tests.o
In file included from src/tests/tests.cpp:14:0:
src/tests/key_schedule_test.cpp: In member function ‘void key_expansion::key_schedule_128::test_method()’:
src/tests/key_schedule_test.cpp:46:5: error: ‘AES_KEY’ was not declared in this scope
     AES_KEY ek;
     ^
src/tests/key_schedule_test.cpp:46:13: error: expected ‘;’ before ‘ek’
     AES_KEY ek;
             ^
src/tests/key_schedule_test.cpp:47:59: error: ‘ek’ was not declared in this scope
     AES_set_encrypt_key((const unsigned char *) &k, 128, &ek);
                                                           ^
src/tests/key_schedule_test.cpp:47:61: error: ‘AES_set_encrypt_key’ was not declared in this scope
     AES_set_encrypt_key((const unsigned char *) &k, 128, &ek);
                                                             ^
make: *** [tests.o] Error 1
12:21:47 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++ "-I/usr/local/cuda/include"  -c src/tests/tests.cpp -o obj/tests.o
g++  -c src/openssl/AES_key_schedule.c -o obj/AES_key_schedule.o
g++  -c src/logging.cpp -o obj/logging.o
g++  -c src/AES.cpp -o obj/AES.o
In file included from src/AES.cpp:1:0:
src/AES.hpp:13:23: warning: non-static data member initializers only available with -std=c++11 or -std=gnu++11 [enabled by default]
  AES_KEY* roundKeys = NULL;
                       ^
src/AES.hpp:13:23: error: ‘NULL’ was not declared in this scope
src/AES.cpp: In constructor ‘paracrypt::AES::AES()’:
src/AES.cpp:5:45: error: ‘malloc’ was not declared in this scope
     this->roundKeys = malloc(sizeof(AES_KEY));
                                             ^
src/AES.cpp: In destructor ‘virtual paracrypt::AES::~AES()’:
src/AES.cpp:10:25: error: ‘free’ was not declared in this scope
     free(this->roundKeys);
                         ^
make: *** [AES.o] Error 1
12:22:34 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++ "-I/usr/local/cuda/include"  -c src/tests/tests.cpp -o obj/tests.o
g++  -c src/openssl/AES_key_schedule.c -o obj/AES_key_schedule.o
g++  -c src/logging.cpp -o obj/logging.o
g++  -c src/AES.cpp -o obj/AES.o
src/AES.cpp: In constructor ‘paracrypt::AES::AES()’:
src/AES.cpp:5:45: error: ‘malloc’ was not declared in this scope
     this->roundKeys = malloc(sizeof(AES_KEY));
                                             ^
src/AES.cpp: In destructor ‘virtual paracrypt::AES::~AES()’:
src/AES.cpp:10:25: error: ‘free’ was not declared in this scope
     free(this->roundKeys);
                         ^
make: *** [AES.o] Error 1
12:25:53 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++ "-I/usr/local/cuda/include"  -c src/tests/tests.cpp -o obj/tests.o
g++  -c src/openssl/AES_key_schedule.c -o obj/AES_key_schedule.o
g++  -c src/logging.cpp -o obj/logging.o
g++  -c src/AES.cpp -o obj/AES.o
src/AES.cpp: In constructor ‘paracrypt::AES::AES()’:
src/AES.cpp:5:20: error: ‘NULL’ was not declared in this scope
  this->roundKeys = NULL;
                    ^
src/AES.cpp: In destructor ‘virtual paracrypt::AES::~AES()’:
src/AES.cpp:10:47: error: ‘NULL’ was not declared in this scope
  if(this->keyPropietary && this->roundKeys != NULL)
                                               ^
src/AES.cpp:11:23: error: ‘free’ was not declared in this scope
   free(this->roundKeys);
                       ^
src/AES.cpp: In member function ‘virtual int paracrypt::AES::setKey(const unsigned char*, int)’:
src/AES.cpp:16:24: error: ‘NULL’ was not declared in this scope
  if(this->roundKeys == NULL) {
                        ^
src/AES.cpp:17:43: error: ‘malloc’ was not declared in this scope
   this->roundKeys = malloc(sizeof(AES_KEY));
                                           ^
src/AES.cpp: In member function ‘int paracrypt::AES::setKey(AES_KEY*)’:
src/AES.cpp:28:47: error: ‘NULL’ was not declared in this scope
  if(this->keyPropietary && this->roundKeys != NULL)  {
                                               ^
src/AES.cpp:29:23: error: ‘free’ was not declared in this scope
   free(this->roundKeys);
                       ^
make: *** [AES.o] Error 1
12:26:41 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++ "-I/usr/local/cuda/include"  -c src/tests/tests.cpp -o obj/tests.o
g++  -c src/openssl/AES_key_schedule.c -o obj/AES_key_schedule.o
g++  -c src/logging.cpp -o obj/logging.o
g++  -c src/AES.cpp -o obj/AES.o
src/AES.cpp: In destructor ‘virtual paracrypt::AES::~AES()’:
src/AES.cpp:12:23: error: ‘free’ was not declared in this scope
   free(this->roundKeys);
                       ^
src/AES.cpp: In member function ‘virtual int paracrypt::AES::setKey(const unsigned char*, int)’:
src/AES.cpp:18:43: error: ‘malloc’ was not declared in this scope
   this->roundKeys = malloc(sizeof(AES_KEY));
                                           ^
src/AES.cpp: In member function ‘int paracrypt::AES::setKey(AES_KEY*)’:
src/AES.cpp:30:23: error: ‘free’ was not declared in this scope
   free(this->roundKeys);
                       ^
make: *** [AES.o] Error 1
12:27:15 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++ "-I/usr/local/cuda/include"  -c src/tests/tests.cpp -o obj/tests.o
g++  -c src/openssl/AES_key_schedule.c -o obj/AES_key_schedule.o
g++  -c src/logging.cpp -o obj/logging.o
g++  -c src/AES.cpp -o obj/AES.o
src/AES.cpp: In member function ‘virtual int paracrypt::AES::setKey(const unsigned char*, int)’:
src/AES.cpp:19:43: error: invalid conversion from ‘void*’ to ‘AES_KEY* {aka aes_key_st*}’ [-fpermissive]
   this->roundKeys = malloc(sizeof(AES_KEY));
                                           ^
make: *** [AES.o] Error 1
12:27:54 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++ "-I/usr/local/cuda/include"  -c src/tests/tests.cpp -o obj/tests.o
g++  -c src/openssl/AES_key_schedule.c -o obj/AES_key_schedule.o
g++  -c src/logging.cpp -o obj/logging.o
g++  -c src/AES.cpp -o obj/AES.o
make: *** No rule to make target `src/CudaAES.cu', needed by `CudaAES.o'.  Stop.
12:28:16 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++ "-I/usr/local/cuda/include"  -c src/tests/tests.cpp -o obj/tests.o
g++  -c src/openssl/AES_key_schedule.c -o obj/AES_key_schedule.o
g++  -c src/logging.cpp -o obj/logging.o
g++  -c src/AES.cpp -o obj/AES.o
src/AES.cpp: In constructor ‘paracrypt::AES::AES()’:
src/AES.cpp:8:18: warning: converting ‘false’ to pointer type ‘AES_KEY* {aka aes_key_st*}’ [-Wconversion-null]
  this->roundKeys = false;
                  ^
make: *** No rule to make target `src/CudaAES.cu', needed by `CudaAES.o'.  Stop.
12:28:55 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++ "-I/usr/local/cuda/include"  -c src/tests/tests.cpp -o obj/tests.o
g++  -c src/openssl/AES_key_schedule.c -o obj/AES_key_schedule.o
g++  -c src/logging.cpp -o obj/logging.o
g++  -c src/AES.cpp -o obj/AES.o
g++  -c src/CudaAES.cpp -o obj/CudaAES.o
In file included from src/CudaAES.hpp:4:0,
                 from src/CudaAES.cpp:1:
src/CUDACipherDevice.hpp:4:18: fatal error: cuda.h: No such file or directory
 #include "cuda.h"
                  ^
compilation terminated.
make: *** [CudaAES.o] Error 1
12:29:55 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++  -c src/tests/tests.cpp -o obj/tests.o "-I/usr/local/cuda/include"
g++  -c src/openssl/AES_key_schedule.c -o obj/AES_key_schedule.o
g++  -c src/logging.cpp -o obj/logging.o
g++  -c src/AES.cpp -o obj/AES.o
g++  -c src/CudaAES.cpp -o obj/CudaAES.o "-I/usr/local/cuda/include"
In file included from src/CudaAES.hpp:3:0,
                 from src/CudaAES.cpp:1:
src/AES.hpp: In member function ‘void paracrypt::CudaAES::setDevice(paracrypt::CUDACipherDevice*)’:
src/AES.hpp:13:11: error: ‘AES_KEY* paracrypt::AES::roundKeys’ is private
  AES_KEY* roundKeys;
           ^
src/CudaAES.cpp:32:31: error: within this context
     int keySize = (4 * (this->roundKeys->rounds + 1)) * sizeof(uint32_t);
                               ^
In file included from src/CudaAES.hpp:3:0,
                 from src/CudaAES.cpp:1:
src/AES.hpp:13:11: error: ‘AES_KEY* paracrypt::AES::roundKeys’ is private
  AES_KEY* roundKeys;
           ^
src/CudaAES.cpp:34:39: error: within this context
     this->getDevice()->memcpyTo(this->roundKeys->rd_key, &(this->deviceKey),keySize,this->stream);
                                       ^
src/CudaAES.cpp: At global scope:
src/CudaAES.cpp:37:1: error: ‘CUDACipherDevice’ does not name a type
 CUDACipherDevice* paracrypt::CudaAES::getDevice() {
 ^
make: *** [CudaAES.o] Error 1
12:30:43 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++  -c src/tests/tests.cpp -o obj/tests.o "-I/usr/local/cuda/include"
g++  -c src/openssl/AES_key_schedule.c -o obj/AES_key_schedule.o
g++  -c src/logging.cpp -o obj/logging.o
g++  -c src/AES.cpp -o obj/AES.o
g++  -c src/CudaAES.cpp -o obj/CudaAES.o "-I/usr/local/cuda/include"
In file included from src/CudaAES.hpp:3:0,
                 from src/CudaAES.cpp:1:
src/AES.hpp: In member function ‘void paracrypt::CudaAES::setDevice(paracrypt::CUDACipherDevice*)’:
src/AES.hpp:13:11: error: ‘AES_KEY* paracrypt::AES::roundKeys’ is private
  AES_KEY* roundKeys;
           ^
src/CudaAES.cpp:34:39: error: within this context
     this->getDevice()->memcpyTo(this->roundKeys->rd_key, &(this->deviceKey),keySize,this->stream);
                                       ^
src/CudaAES.cpp: At global scope:
src/CudaAES.cpp:37:1: error: ‘CUDACipherDevice’ does not name a type
 CUDACipherDevice* paracrypt::CudaAES::getDevice() {
 ^
make: *** [CudaAES.o] Error 1
12:31:03 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++  -c src/tests/tests.cpp -o obj/tests.o "-I/usr/local/cuda/include"
g++  -c src/openssl/AES_key_schedule.c -o obj/AES_key_schedule.o
g++  -c src/logging.cpp -o obj/logging.o
g++  -c src/AES.cpp -o obj/AES.o
g++  -c src/CudaAES.cpp -o obj/CudaAES.o "-I/usr/local/cuda/include"
src/CudaAES.cpp:37:1: error: ‘CUDACipherDevice’ does not name a type
 CUDACipherDevice* paracrypt::CudaAES::getDevice() {
 ^
make: *** [CudaAES.o] Error 1
12:31:49 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++  -c src/tests/tests.cpp -o obj/tests.o "-I/usr/local/cuda/include"
g++  -c src/openssl/AES_key_schedule.c -o obj/AES_key_schedule.o
g++  -c src/logging.cpp -o obj/logging.o
g++  -c src/AES.cpp -o obj/AES.o
g++  -c src/CudaAES.cpp -o obj/CudaAES.o "-I/usr/local/cuda/include"
g++  -c src/CudaEcbAes16B.cpp -o obj/CudaEcbAes16B.o
In file included from src/CudaAES.hpp:4:0,
                 from src/CudaEcbAes16B.hpp:4,
                 from src/CudaEcbAes16B.cpp:1:
src/CUDACipherDevice.hpp:4:18: fatal error: cuda.h: No such file or directory
 #include "cuda.h"
                  ^
compilation terminated.
make: *** [CudaEcbAes16B.o] Error 1
12:32:18 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++  -c src/tests/tests.cpp -o obj/tests.o "-I/usr/local/cuda/include"
g++  -c src/openssl/AES_key_schedule.c -o obj/AES_key_schedule.o
g++  -c src/logging.cpp -o obj/logging.o
g++  -c src/AES.cpp -o obj/AES.o
g++  -c src/CudaAES.cpp -o obj/CudaAES.o "-I/usr/local/cuda/include"
g++  -c src/CudaEcbAes16B.cpp -o obj/CudaEcbAes16B.o "-I/usr/local/cuda/include"
In file included from src/CudaEcbAes16B.hpp:4:0,
                 from src/CudaEcbAes16B.cpp:1:
src/CudaAES.hpp: In member function ‘virtual int paracrypt::CudaEcbAES16B::encrypt(const unsigned char*, const unsigned char*, int)’:
src/CudaAES.hpp:10:20: error: ‘paracrypt::CUDACipherDevice* paracrypt::CudaAES::device’ is private
  CUDACipherDevice* device;
                    ^
src/CudaEcbAes16B.cpp:7:26: error: within this context
     int gridSize = this->device->getGridSize(n_blocks,1);
                          ^
In file included from src/CudaEcbAes16B.hpp:4:0,
                 from src/CudaEcbAes16B.cpp:1:
src/CudaAES.hpp:10:20: error: ‘paracrypt::CUDACipherDevice* paracrypt::CudaAES::device’ is private
  CUDACipherDevice* device;
                    ^
src/CudaEcbAes16B.cpp:11:8: error: within this context
  this->device->memcpyTo(in, this->data, dataSize, this->stream);
        ^
In file included from /usr/local/cuda/include/driver_types.h:72:0,
                 from /usr/local/cuda/include/builtin_types.h:59,
                 from /usr/local/cuda/include/cuda_runtime_api.h:134,
                 from src/CUDACipherDevice.hpp:5,
                 from src/CudaAES.hpp:4,
                 from src/CudaEcbAes16B.hpp:4,
                 from src/CudaEcbAes16B.cpp:1:
src/CudaAES.hpp:13:24: error: ‘unsigned char* paracrypt::CudaAES::data’ is private
  unsigned char *data = NULL;
                        ^
src/CudaEcbAes16B.cpp:11:35: error: within this context
  this->device->memcpyTo(in, this->data, dataSize, this->stream);
                                   ^
In file included from src/CudaEcbAes16B.hpp:4:0,
                 from src/CudaEcbAes16B.cpp:1:
src/CudaAES.hpp:12:15: error: ‘CUstream_st* paracrypt::CudaAES::stream’ is private
  cudaStream_t stream;
               ^
src/CudaEcbAes16B.cpp:11:57: error: within this context
  this->device->memcpyTo(in, this->data, dataSize, this->stream);
                                                         ^
src/CudaEcbAes16B.cpp:11:63: error: invalid conversion from ‘const void*’ to ‘void*’ [-fpermissive]
  this->device->memcpyTo(in, this->data, dataSize, this->stream);
                                                               ^
In file included from src/CudaAES.hpp:4:0,
                 from src/CudaEcbAes16B.hpp:4,
                 from src/CudaEcbAes16B.cpp:1:
src/CUDACipherDevice.hpp:32:7: error:   initializing argument 1 of ‘virtual void paracrypt::CUDACipherDevice::memcpyTo(void*, void*, int, cudaStream_t)’ [-fpermissive]
  void memcpyTo(void* host, void* dev, int size, cudaStream_t stream);
       ^
src/CudaEcbAes16B.cpp:12:2: error: ‘cuda_ecb_aes_16b_encrypt’ was not declared in this scope
  cuda_ecb_aes_16b_encrypt<<gridSize,threadsPerBlock>>(data,n_blocks,this->getDeviceKey());
  ^
In file included from /usr/local/cuda/include/driver_types.h:72:0,
                 from /usr/local/cuda/include/builtin_types.h:59,
                 from /usr/local/cuda/include/cuda_runtime_api.h:134,
                 from src/CUDACipherDevice.hpp:5,
                 from src/CudaAES.hpp:4,
                 from src/CudaEcbAes16B.hpp:4,
                 from src/CudaEcbAes16B.cpp:1:
src/CudaAES.hpp:13:24: error: ‘unsigned char* paracrypt::CudaAES::data’ is private
  unsigned char *data = NULL;
                        ^
src/CudaEcbAes16B.cpp:12:55: error: within this context
  cuda_ecb_aes_16b_encrypt<<gridSize,threadsPerBlock>>(data,n_blocks,this->getDeviceKey());
                                                       ^
src/CudaEcbAes16B.cpp:12:89: error: invalid operands of types ‘int’ and ‘AES_KEY* {aka aes_key_st*}’ to binary ‘operator>>’
  cuda_ecb_aes_16b_encrypt<<gridSize,threadsPerBlock>>(data,n_blocks,this->getDeviceKey());
                                                                                         ^
In file included from src/CudaEcbAes16B.hpp:4:0,
                 from src/CudaEcbAes16B.cpp:1:
src/CudaAES.hpp:10:20: error: ‘paracrypt::CUDACipherDevice* paracrypt::CudaAES::device’ is private
  CUDACipherDevice* device;
                    ^
src/CudaEcbAes16B.cpp:13:8: error: within this context
  this->device->memcpyFrom(this->data, out, dataSize, this->stream);
        ^
In file included from /usr/local/cuda/include/driver_types.h:72:0,
                 from /usr/local/cuda/include/builtin_types.h:59,
                 from /usr/local/cuda/include/cuda_runtime_api.h:134,
                 from src/CUDACipherDevice.hpp:5,
                 from src/CudaAES.hpp:4,
                 from src/CudaEcbAes16B.hpp:4,
                 from src/CudaEcbAes16B.cpp:1:
src/CudaAES.hpp:13:24: error: ‘unsigned char* paracrypt::CudaAES::data’ is private
  unsigned char *data = NULL;
                        ^
src/CudaEcbAes16B.cpp:13:33: error: within this context
  this->device->memcpyFrom(this->data, out, dataSize, this->stream);
                                 ^
In file included from src/CudaEcbAes16B.hpp:4:0,
                 from src/CudaEcbAes16B.cpp:1:
src/CudaAES.hpp:12:15: error: ‘CUstream_st* paracrypt::CudaAES::stream’ is private
  cudaStream_t stream;
               ^
src/CudaEcbAes16B.cpp:13:60: error: within this context
  this->device->memcpyFrom(this->data, out, dataSize, this->stream);
                                                            ^
src/CudaEcbAes16B.cpp:13:66: error: invalid conversion from ‘const void*’ to ‘void*’ [-fpermissive]
  this->device->memcpyFrom(this->data, out, dataSize, this->stream);
                                                                  ^
In file included from src/CudaAES.hpp:4:0,
                 from src/CudaEcbAes16B.hpp:4,
                 from src/CudaEcbAes16B.cpp:1:
src/CUDACipherDevice.hpp:33:7: error:   initializing argument 2 of ‘virtual void paracrypt::CUDACipherDevice::memcpyFrom(void*, void*, int, cudaStream_t)’ [-fpermissive]
  void memcpyFrom(void* dev, void* host, int size, cudaStream_t stream);
       ^
In file included from src/CudaEcbAes16B.hpp:4:0,
                 from src/CudaEcbAes16B.cpp:1:
src/CudaAES.hpp: In member function ‘virtual int paracrypt::CudaEcbAES16B::decrypt(const unsigned char*, const unsigned char*, int)’:
src/CudaAES.hpp:10:20: error: ‘paracrypt::CUDACipherDevice* paracrypt::CudaAES::device’ is private
  CUDACipherDevice* device;
                    ^
src/CudaEcbAes16B.cpp:22:26: error: within this context
     int gridSize = this->device->getGridSize(n_blocks,1);
                          ^
In file included from src/CudaEcbAes16B.hpp:4:0,
                 from src/CudaEcbAes16B.cpp:1:
src/CudaAES.hpp:10:20: error: ‘paracrypt::CUDACipherDevice* paracrypt::CudaAES::device’ is private
  CUDACipherDevice* device;
                    ^
src/CudaEcbAes16B.cpp:26:8: error: within this context
  this->device->memcpyTo(in, this->data, dataSize, this->stream);
        ^
In file included from /usr/local/cuda/include/driver_types.h:72:0,
                 from /usr/local/cuda/include/builtin_types.h:59,
                 from /usr/local/cuda/include/cuda_runtime_api.h:134,
                 from src/CUDACipherDevice.hpp:5,
                 from src/CudaAES.hpp:4,
                 from src/CudaEcbAes16B.hpp:4,
                 from src/CudaEcbAes16B.cpp:1:
src/CudaAES.hpp:13:24: error: ‘unsigned char* paracrypt::CudaAES::data’ is private
  unsigned char *data = NULL;
                        ^
src/CudaEcbAes16B.cpp:26:35: error: within this context
  this->device->memcpyTo(in, this->data, dataSize, this->stream);
                                   ^
In file included from src/CudaEcbAes16B.hpp:4:0,
                 from src/CudaEcbAes16B.cpp:1:
src/CudaAES.hpp:12:15: error: ‘CUstream_st* paracrypt::CudaAES::stream’ is private
  cudaStream_t stream;
               ^
src/CudaEcbAes16B.cpp:26:57: error: within this context
  this->device->memcpyTo(in, this->data, dataSize, this->stream);
                                                         ^
src/CudaEcbAes16B.cpp:26:63: error: invalid conversion from ‘const void*’ to ‘void*’ [-fpermissive]
  this->device->memcpyTo(in, this->data, dataSize, this->stream);
                                                               ^
In file included from src/CudaAES.hpp:4:0,
                 from src/CudaEcbAes16B.hpp:4,
                 from src/CudaEcbAes16B.cpp:1:
src/CUDACipherDevice.hpp:32:7: error:   initializing argument 1 of ‘virtual void paracrypt::CUDACipherDevice::memcpyTo(void*, void*, int, cudaStream_t)’ [-fpermissive]
  void memcpyTo(void* host, void* dev, int size, cudaStream_t stream);
       ^
src/CudaEcbAes16B.cpp:27:2: error: ‘cuda_ecb_aes_16b_decrypt’ was not declared in this scope
  cuda_ecb_aes_16b_decrypt<<gridSize,threadsPerBlock>>(data,n_blocks,this->getDeviceKey()); // TODO get decrypt key
  ^
In file included from /usr/local/cuda/include/driver_types.h:72:0,
                 from /usr/local/cuda/include/builtin_types.h:59,
                 from /usr/local/cuda/include/cuda_runtime_api.h:134,
                 from src/CUDACipherDevice.hpp:5,
                 from src/CudaAES.hpp:4,
                 from src/CudaEcbAes16B.hpp:4,
                 from src/CudaEcbAes16B.cpp:1:
src/CudaAES.hpp:13:24: error: ‘unsigned char* paracrypt::CudaAES::data’ is private
  unsigned char *data = NULL;
                        ^
src/CudaEcbAes16B.cpp:27:55: error: within this context
  cuda_ecb_aes_16b_decrypt<<gridSize,threadsPerBlock>>(data,n_blocks,this->getDeviceKey()); // TODO get decrypt key
                                                       ^
src/CudaEcbAes16B.cpp:27:89: error: invalid operands of types ‘int’ and ‘AES_KEY* {aka aes_key_st*}’ to binary ‘operator>>’
  cuda_ecb_aes_16b_decrypt<<gridSize,threadsPerBlock>>(data,n_blocks,this->getDeviceKey()); // TODO get decrypt key
                                                                                         ^
In file included from src/CudaEcbAes16B.hpp:4:0,
                 from src/CudaEcbAes16B.cpp:1:
src/CudaAES.hpp:10:20: error: ‘paracrypt::CUDACipherDevice* paracrypt::CudaAES::device’ is private
  CUDACipherDevice* device;
                    ^
src/CudaEcbAes16B.cpp:28:8: error: within this context
  this->device->memcpyFrom(this->data, out, dataSize, this->stream);
        ^
In file included from /usr/local/cuda/include/driver_types.h:72:0,
                 from /usr/local/cuda/include/builtin_types.h:59,
                 from /usr/local/cuda/include/cuda_runtime_api.h:134,
                 from src/CUDACipherDevice.hpp:5,
                 from src/CudaAES.hpp:4,
                 from src/CudaEcbAes16B.hpp:4,
                 from src/CudaEcbAes16B.cpp:1:
src/CudaAES.hpp:13:24: error: ‘unsigned char* paracrypt::CudaAES::data’ is private
  unsigned char *data = NULL;
                        ^
src/CudaEcbAes16B.cpp:28:33: error: within this context
  this->device->memcpyFrom(this->data, out, dataSize, this->stream);
                                 ^
In file included from src/CudaEcbAes16B.hpp:4:0,
                 from src/CudaEcbAes16B.cpp:1:
src/CudaAES.hpp:12:15: error: ‘CUstream_st* paracrypt::CudaAES::stream’ is private
  cudaStream_t stream;
               ^
src/CudaEcbAes16B.cpp:28:60: error: within this context
  this->device->memcpyFrom(this->data, out, dataSize, this->stream);
                                                            ^
src/CudaEcbAes16B.cpp:28:66: error: invalid conversion from ‘const void*’ to ‘void*’ [-fpermissive]
  this->device->memcpyFrom(this->data, out, dataSize, this->stream);
                                                                  ^
In file included from src/CudaAES.hpp:4:0,
                 from src/CudaEcbAes16B.hpp:4,
                 from src/CudaEcbAes16B.cpp:1:
src/CUDACipherDevice.hpp:33:7: error:   initializing argument 2 of ‘virtual void paracrypt::CUDACipherDevice::memcpyFrom(void*, void*, int, cudaStream_t)’ [-fpermissive]
  void memcpyFrom(void* dev, void* host, int size, cudaStream_t stream);
       ^
make: *** [CudaEcbAes16B.o] Error 1
12:33:05 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++  -c src/tests/tests.cpp -o obj/tests.o "-I/usr/local/cuda/include"
g++  -c src/openssl/AES_key_schedule.c -o obj/AES_key_schedule.o
g++  -c src/logging.cpp -o obj/logging.o
g++  -c src/AES.cpp -o obj/AES.o
g++  -c src/CudaAES.cpp -o obj/CudaAES.o "-I/usr/local/cuda/include"
g++  -c src/CudaEcbAes16B.cpp -o obj/CudaEcbAes16B.o "-I/usr/local/cuda/include"
In file included from /usr/local/cuda/include/driver_types.h:72:0,
                 from /usr/local/cuda/include/builtin_types.h:59,
                 from /usr/local/cuda/include/cuda_runtime_api.h:134,
                 from src/CUDACipherDevice.hpp:5,
                 from src/CudaAES.hpp:4,
                 from src/CudaEcbAes16B.hpp:4,
                 from src/CudaEcbAes16B.cpp:1:
src/CudaAES.hpp: In member function ‘virtual int paracrypt::CudaEcbAES16B::encrypt(const unsigned char*, const unsigned char*, int)’:
src/CudaAES.hpp:13:24: error: ‘unsigned char* paracrypt::CudaAES::data’ is private
  unsigned char *data = NULL;
                        ^
src/CudaEcbAes16B.cpp:11:40: error: within this context
  this->getDevice()->memcpyTo(in, this->data, dataSize, this->stream);
                                        ^
In file included from src/CudaEcbAes16B.hpp:4:0,
                 from src/CudaEcbAes16B.cpp:1:
src/CudaAES.hpp:12:15: error: ‘CUstream_st* paracrypt::CudaAES::stream’ is private
  cudaStream_t stream;
               ^
src/CudaEcbAes16B.cpp:11:62: error: within this context
  this->getDevice()->memcpyTo(in, this->data, dataSize, this->stream);
                                                              ^
src/CudaEcbAes16B.cpp:11:68: error: invalid conversion from ‘const void*’ to ‘void*’ [-fpermissive]
  this->getDevice()->memcpyTo(in, this->data, dataSize, this->stream);
                                                                    ^
In file included from src/CudaAES.hpp:4:0,
                 from src/CudaEcbAes16B.hpp:4,
                 from src/CudaEcbAes16B.cpp:1:
src/CUDACipherDevice.hpp:32:7: error:   initializing argument 1 of ‘virtual void paracrypt::CUDACipherDevice::memcpyTo(void*, void*, int, cudaStream_t)’ [-fpermissive]
  void memcpyTo(void* host, void* dev, int size, cudaStream_t stream);
       ^
src/CudaEcbAes16B.cpp:12:2: error: ‘cuda_ecb_aes_16b_encrypt’ was not declared in this scope
  cuda_ecb_aes_16b_encrypt<<gridSize,threadsPerBlock>>(data,n_blocks,this->getDeviceKey());
  ^
In file included from /usr/local/cuda/include/driver_types.h:72:0,
                 from /usr/local/cuda/include/builtin_types.h:59,
                 from /usr/local/cuda/include/cuda_runtime_api.h:134,
                 from src/CUDACipherDevice.hpp:5,
                 from src/CudaAES.hpp:4,
                 from src/CudaEcbAes16B.hpp:4,
                 from src/CudaEcbAes16B.cpp:1:
src/CudaAES.hpp:13:24: error: ‘unsigned char* paracrypt::CudaAES::data’ is private
  unsigned char *data = NULL;
                        ^
src/CudaEcbAes16B.cpp:12:55: error: within this context
  cuda_ecb_aes_16b_encrypt<<gridSize,threadsPerBlock>>(data,n_blocks,this->getDeviceKey());
                                                       ^
src/CudaEcbAes16B.cpp:12:89: error: invalid operands of types ‘int’ and ‘AES_KEY* {aka aes_key_st*}’ to binary ‘operator>>’
  cuda_ecb_aes_16b_encrypt<<gridSize,threadsPerBlock>>(data,n_blocks,this->getDeviceKey());
                                                                                         ^
In file included from /usr/local/cuda/include/driver_types.h:72:0,
                 from /usr/local/cuda/include/builtin_types.h:59,
                 from /usr/local/cuda/include/cuda_runtime_api.h:134,
                 from src/CUDACipherDevice.hpp:5,
                 from src/CudaAES.hpp:4,
                 from src/CudaEcbAes16B.hpp:4,
                 from src/CudaEcbAes16B.cpp:1:
src/CudaAES.hpp:13:24: error: ‘unsigned char* paracrypt::CudaAES::data’ is private
  unsigned char *data = NULL;
                        ^
src/CudaEcbAes16B.cpp:13:38: error: within this context
  this->getDevice()->memcpyFrom(this->data, out, dataSize, this->stream);
                                      ^
In file included from src/CudaEcbAes16B.hpp:4:0,
                 from src/CudaEcbAes16B.cpp:1:
src/CudaAES.hpp:12:15: error: ‘CUstream_st* paracrypt::CudaAES::stream’ is private
  cudaStream_t stream;
               ^
src/CudaEcbAes16B.cpp:13:65: error: within this context
  this->getDevice()->memcpyFrom(this->data, out, dataSize, this->stream);
                                                                 ^
src/CudaEcbAes16B.cpp:13:71: error: invalid conversion from ‘const void*’ to ‘void*’ [-fpermissive]
  this->getDevice()->memcpyFrom(this->data, out, dataSize, this->stream);
                                                                       ^
In file included from src/CudaAES.hpp:4:0,
                 from src/CudaEcbAes16B.hpp:4,
                 from src/CudaEcbAes16B.cpp:1:
src/CUDACipherDevice.hpp:33:7: error:   initializing argument 2 of ‘virtual void paracrypt::CUDACipherDevice::memcpyFrom(void*, void*, int, cudaStream_t)’ [-fpermissive]
  void memcpyFrom(void* dev, void* host, int size, cudaStream_t stream);
       ^
In file included from /usr/local/cuda/include/driver_types.h:72:0,
                 from /usr/local/cuda/include/builtin_types.h:59,
                 from /usr/local/cuda/include/cuda_runtime_api.h:134,
                 from src/CUDACipherDevice.hpp:5,
                 from src/CudaAES.hpp:4,
                 from src/CudaEcbAes16B.hpp:4,
                 from src/CudaEcbAes16B.cpp:1:
src/CudaAES.hpp: In member function ‘virtual int paracrypt::CudaEcbAES16B::decrypt(const unsigned char*, const unsigned char*, int)’:
src/CudaAES.hpp:13:24: error: ‘unsigned char* paracrypt::CudaAES::data’ is private
  unsigned char *data = NULL;
                        ^
src/CudaEcbAes16B.cpp:26:40: error: within this context
  this->getDevice()->memcpyTo(in, this->data, dataSize, this->stream);
                                        ^
In file included from src/CudaEcbAes16B.hpp:4:0,
                 from src/CudaEcbAes16B.cpp:1:
src/CudaAES.hpp:12:15: error: ‘CUstream_st* paracrypt::CudaAES::stream’ is private
  cudaStream_t stream;
               ^
src/CudaEcbAes16B.cpp:26:62: error: within this context
  this->getDevice()->memcpyTo(in, this->data, dataSize, this->stream);
                                                              ^
src/CudaEcbAes16B.cpp:26:68: error: invalid conversion from ‘const void*’ to ‘void*’ [-fpermissive]
  this->getDevice()->memcpyTo(in, this->data, dataSize, this->stream);
                                                                    ^
In file included from src/CudaAES.hpp:4:0,
                 from src/CudaEcbAes16B.hpp:4,
                 from src/CudaEcbAes16B.cpp:1:
src/CUDACipherDevice.hpp:32:7: error:   initializing argument 1 of ‘virtual void paracrypt::CUDACipherDevice::memcpyTo(void*, void*, int, cudaStream_t)’ [-fpermissive]
  void memcpyTo(void* host, void* dev, int size, cudaStream_t stream);
       ^
src/CudaEcbAes16B.cpp:27:2: error: ‘cuda_ecb_aes_16b_decrypt’ was not declared in this scope
  cuda_ecb_aes_16b_decrypt<<gridSize,threadsPerBlock>>(data,n_blocks,this->getDeviceKey()); // TODO get decrypt key
  ^
In file included from /usr/local/cuda/include/driver_types.h:72:0,
                 from /usr/local/cuda/include/builtin_types.h:59,
                 from /usr/local/cuda/include/cuda_runtime_api.h:134,
                 from src/CUDACipherDevice.hpp:5,
                 from src/CudaAES.hpp:4,
                 from src/CudaEcbAes16B.hpp:4,
                 from src/CudaEcbAes16B.cpp:1:
src/CudaAES.hpp:13:24: error: ‘unsigned char* paracrypt::CudaAES::data’ is private
  unsigned char *data = NULL;
                        ^
src/CudaEcbAes16B.cpp:27:55: error: within this context
  cuda_ecb_aes_16b_decrypt<<gridSize,threadsPerBlock>>(data,n_blocks,this->getDeviceKey()); // TODO get decrypt key
                                                       ^
src/CudaEcbAes16B.cpp:27:89: error: invalid operands of types ‘int’ and ‘AES_KEY* {aka aes_key_st*}’ to binary ‘operator>>’
  cuda_ecb_aes_16b_decrypt<<gridSize,threadsPerBlock>>(data,n_blocks,this->getDeviceKey()); // TODO get decrypt key
                                                                                         ^
In file included from /usr/local/cuda/include/driver_types.h:72:0,
                 from /usr/local/cuda/include/builtin_types.h:59,
                 from /usr/local/cuda/include/cuda_runtime_api.h:134,
                 from src/CUDACipherDevice.hpp:5,
                 from src/CudaAES.hpp:4,
                 from src/CudaEcbAes16B.hpp:4,
                 from src/CudaEcbAes16B.cpp:1:
src/CudaAES.hpp:13:24: error: ‘unsigned char* paracrypt::CudaAES::data’ is private
  unsigned char *data = NULL;
                        ^
src/CudaEcbAes16B.cpp:28:38: error: within this context
  this->getDevice()->memcpyFrom(this->data, out, dataSize, this->stream);
                                      ^
In file included from src/CudaEcbAes16B.hpp:4:0,
                 from src/CudaEcbAes16B.cpp:1:
src/CudaAES.hpp:12:15: error: ‘CUstream_st* paracrypt::CudaAES::stream’ is private
  cudaStream_t stream;
               ^
src/CudaEcbAes16B.cpp:28:65: error: within this context
  this->getDevice()->memcpyFrom(this->data, out, dataSize, this->stream);
                                                                 ^
src/CudaEcbAes16B.cpp:28:71: error: invalid conversion from ‘const void*’ to ‘void*’ [-fpermissive]
  this->getDevice()->memcpyFrom(this->data, out, dataSize, this->stream);
                                                                       ^
In file included from src/CudaAES.hpp:4:0,
                 from src/CudaEcbAes16B.hpp:4,
                 from src/CudaEcbAes16B.cpp:1:
src/CUDACipherDevice.hpp:33:7: error:   initializing argument 2 of ‘virtual void paracrypt::CUDACipherDevice::memcpyFrom(void*, void*, int, cudaStream_t)’ [-fpermissive]
  void memcpyFrom(void* dev, void* host, int size, cudaStream_t stream);
       ^
make: *** [CudaEcbAes16B.o] Error 1
12:33:51 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++  -c src/tests/tests.cpp -o obj/tests.o "-I/usr/local/cuda/include"
g++  -c src/openssl/AES_key_schedule.c -o obj/AES_key_schedule.o
g++  -c src/logging.cpp -o obj/logging.o
g++  -c src/AES.cpp -o obj/AES.o
g++  -c src/CudaAES.cpp -o obj/CudaAES.o "-I/usr/local/cuda/include"
g++  -c src/CudaEcbAes16B.cpp -o obj/CudaEcbAes16B.o "-I/usr/local/cuda/include"
In file included from src/CudaEcbAes16B.hpp:4:0,
                 from src/CudaEcbAes16B.cpp:1:
src/CudaAES.hpp: In member function ‘virtual int paracrypt::CudaEcbAES16B::encrypt(const unsigned char*, const unsigned char*, int)’:
src/CudaAES.hpp:12:15: error: ‘CUstream_st* paracrypt::CudaAES::stream’ is private
  cudaStream_t stream;
               ^
src/CudaEcbAes16B.cpp:11:62: error: within this context
  this->getDevice()->memcpyTo(in, this->data, dataSize, this->stream);
                                                              ^
src/CudaEcbAes16B.cpp:11:68: error: invalid conversion from ‘const void*’ to ‘void*’ [-fpermissive]
  this->getDevice()->memcpyTo(in, this->data, dataSize, this->stream);
                                                                    ^
In file included from src/CudaAES.hpp:4:0,
                 from src/CudaEcbAes16B.hpp:4,
                 from src/CudaEcbAes16B.cpp:1:
src/CUDACipherDevice.hpp:32:7: error:   initializing argument 1 of ‘virtual void paracrypt::CUDACipherDevice::memcpyTo(void*, void*, int, cudaStream_t)’ [-fpermissive]
  void memcpyTo(void* host, void* dev, int size, cudaStream_t stream);
       ^
src/CudaEcbAes16B.cpp:12:2: error: ‘cuda_ecb_aes_16b_encrypt’ was not declared in this scope
  cuda_ecb_aes_16b_encrypt<<gridSize,threadsPerBlock>>(data,n_blocks,this->getDeviceKey());
  ^
src/CudaEcbAes16B.cpp:12:89: error: invalid operands of types ‘int’ and ‘AES_KEY* {aka aes_key_st*}’ to binary ‘operator>>’
  cuda_ecb_aes_16b_encrypt<<gridSize,threadsPerBlock>>(data,n_blocks,this->getDeviceKey());
                                                                                         ^
In file included from src/CudaEcbAes16B.hpp:4:0,
                 from src/CudaEcbAes16B.cpp:1:
src/CudaAES.hpp:12:15: error: ‘CUstream_st* paracrypt::CudaAES::stream’ is private
  cudaStream_t stream;
               ^
src/CudaEcbAes16B.cpp:13:65: error: within this context
  this->getDevice()->memcpyFrom(this->data, out, dataSize, this->stream);
                                                                 ^
src/CudaEcbAes16B.cpp:13:71: error: invalid conversion from ‘const void*’ to ‘void*’ [-fpermissive]
  this->getDevice()->memcpyFrom(this->data, out, dataSize, this->stream);
                                                                       ^
In file included from src/CudaAES.hpp:4:0,
                 from src/CudaEcbAes16B.hpp:4,
                 from src/CudaEcbAes16B.cpp:1:
src/CUDACipherDevice.hpp:33:7: error:   initializing argument 2 of ‘virtual void paracrypt::CUDACipherDevice::memcpyFrom(void*, void*, int, cudaStream_t)’ [-fpermissive]
  void memcpyFrom(void* dev, void* host, int size, cudaStream_t stream);
       ^
In file included from src/CudaEcbAes16B.hpp:4:0,
                 from src/CudaEcbAes16B.cpp:1:
src/CudaAES.hpp: In member function ‘virtual int paracrypt::CudaEcbAES16B::decrypt(const unsigned char*, const unsigned char*, int)’:
src/CudaAES.hpp:12:15: error: ‘CUstream_st* paracrypt::CudaAES::stream’ is private
  cudaStream_t stream;
               ^
src/CudaEcbAes16B.cpp:26:62: error: within this context
  this->getDevice()->memcpyTo(in, this->data, dataSize, this->stream);
                                                              ^
src/CudaEcbAes16B.cpp:26:68: error: invalid conversion from ‘const void*’ to ‘void*’ [-fpermissive]
  this->getDevice()->memcpyTo(in, this->data, dataSize, this->stream);
                                                                    ^
In file included from src/CudaAES.hpp:4:0,
                 from src/CudaEcbAes16B.hpp:4,
                 from src/CudaEcbAes16B.cpp:1:
src/CUDACipherDevice.hpp:32:7: error:   initializing argument 1 of ‘virtual void paracrypt::CUDACipherDevice::memcpyTo(void*, void*, int, cudaStream_t)’ [-fpermissive]
  void memcpyTo(void* host, void* dev, int size, cudaStream_t stream);
       ^
src/CudaEcbAes16B.cpp:27:2: error: ‘cuda_ecb_aes_16b_decrypt’ was not declared in this scope
  cuda_ecb_aes_16b_decrypt<<gridSize,threadsPerBlock>>(data,n_blocks,this->getDeviceKey()); // TODO get decrypt key
  ^
src/CudaEcbAes16B.cpp:27:89: error: invalid operands of types ‘int’ and ‘AES_KEY* {aka aes_key_st*}’ to binary ‘operator>>’
  cuda_ecb_aes_16b_decrypt<<gridSize,threadsPerBlock>>(data,n_blocks,this->getDeviceKey()); // TODO get decrypt key
                                                                                         ^
In file included from src/CudaEcbAes16B.hpp:4:0,
                 from src/CudaEcbAes16B.cpp:1:
src/CudaAES.hpp:12:15: error: ‘CUstream_st* paracrypt::CudaAES::stream’ is private
  cudaStream_t stream;
               ^
src/CudaEcbAes16B.cpp:28:65: error: within this context
  this->getDevice()->memcpyFrom(this->data, out, dataSize, this->stream);
                                                                 ^
src/CudaEcbAes16B.cpp:28:71: error: invalid conversion from ‘const void*’ to ‘void*’ [-fpermissive]
  this->getDevice()->memcpyFrom(this->data, out, dataSize, this->stream);
                                                                       ^
In file included from src/CudaAES.hpp:4:0,
                 from src/CudaEcbAes16B.hpp:4,
                 from src/CudaEcbAes16B.cpp:1:
src/CUDACipherDevice.hpp:33:7: error:   initializing argument 2 of ‘virtual void paracrypt::CUDACipherDevice::memcpyFrom(void*, void*, int, cudaStream_t)’ [-fpermissive]
  void memcpyFrom(void* dev, void* host, int size, cudaStream_t stream);
       ^
make: *** [CudaEcbAes16B.o] Error 1
12:34:22 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++  -c src/tests/tests.cpp -o obj/tests.o "-I/usr/local/cuda/include"
g++  -c src/openssl/AES_key_schedule.c -o obj/AES_key_schedule.o
g++  -c src/logging.cpp -o obj/logging.o
g++  -c src/AES.cpp -o obj/AES.o
g++  -c src/CudaAES.cpp -o obj/CudaAES.o "-I/usr/local/cuda/include"
g++  -c src/CudaEcbAes16B.cpp -o obj/CudaEcbAes16B.o "-I/usr/local/cuda/include"
src/CudaEcbAes16B.cpp: In member function ‘virtual int paracrypt::CudaEcbAES16B::encrypt(const unsigned char*, const unsigned char*, int)’:
src/CudaEcbAes16B.cpp:11:68: error: invalid conversion from ‘const void*’ to ‘void*’ [-fpermissive]
  this->getDevice()->memcpyTo(in, this->data, dataSize, this->stream);
                                                                    ^
In file included from src/CudaAES.hpp:4:0,
                 from src/CudaEcbAes16B.hpp:4,
                 from src/CudaEcbAes16B.cpp:1:
src/CUDACipherDevice.hpp:32:7: error:   initializing argument 1 of ‘virtual void paracrypt::CUDACipherDevice::memcpyTo(void*, void*, int, cudaStream_t)’ [-fpermissive]
  void memcpyTo(void* host, void* dev, int size, cudaStream_t stream);
       ^
src/CudaEcbAes16B.cpp:12:2: error: ‘cuda_ecb_aes_16b_encrypt’ was not declared in this scope
  cuda_ecb_aes_16b_encrypt<<gridSize,threadsPerBlock>>(data,n_blocks,this->getDeviceKey());
  ^
src/CudaEcbAes16B.cpp:12:89: error: invalid operands of types ‘int’ and ‘AES_KEY* {aka aes_key_st*}’ to binary ‘operator>>’
  cuda_ecb_aes_16b_encrypt<<gridSize,threadsPerBlock>>(data,n_blocks,this->getDeviceKey());
                                                                                         ^
src/CudaEcbAes16B.cpp:13:71: error: invalid conversion from ‘const void*’ to ‘void*’ [-fpermissive]
  this->getDevice()->memcpyFrom(this->data, out, dataSize, this->stream);
                                                                       ^
In file included from src/CudaAES.hpp:4:0,
                 from src/CudaEcbAes16B.hpp:4,
                 from src/CudaEcbAes16B.cpp:1:
src/CUDACipherDevice.hpp:33:7: error:   initializing argument 2 of ‘virtual void paracrypt::CUDACipherDevice::memcpyFrom(void*, void*, int, cudaStream_t)’ [-fpermissive]
  void memcpyFrom(void* dev, void* host, int size, cudaStream_t stream);
       ^
src/CudaEcbAes16B.cpp: In member function ‘virtual int paracrypt::CudaEcbAES16B::decrypt(const unsigned char*, const unsigned char*, int)’:
src/CudaEcbAes16B.cpp:26:68: error: invalid conversion from ‘const void*’ to ‘void*’ [-fpermissive]
  this->getDevice()->memcpyTo(in, this->data, dataSize, this->stream);
                                                                    ^
In file included from src/CudaAES.hpp:4:0,
                 from src/CudaEcbAes16B.hpp:4,
                 from src/CudaEcbAes16B.cpp:1:
src/CUDACipherDevice.hpp:32:7: error:   initializing argument 1 of ‘virtual void paracrypt::CUDACipherDevice::memcpyTo(void*, void*, int, cudaStream_t)’ [-fpermissive]
  void memcpyTo(void* host, void* dev, int size, cudaStream_t stream);
       ^
src/CudaEcbAes16B.cpp:27:2: error: ‘cuda_ecb_aes_16b_decrypt’ was not declared in this scope
  cuda_ecb_aes_16b_decrypt<<gridSize,threadsPerBlock>>(data,n_blocks,this->getDeviceKey()); // TODO get decrypt key
  ^
src/CudaEcbAes16B.cpp:27:89: error: invalid operands of types ‘int’ and ‘AES_KEY* {aka aes_key_st*}’ to binary ‘operator>>’
  cuda_ecb_aes_16b_decrypt<<gridSize,threadsPerBlock>>(data,n_blocks,this->getDeviceKey()); // TODO get decrypt key
                                                                                         ^
src/CudaEcbAes16B.cpp:28:71: error: invalid conversion from ‘const void*’ to ‘void*’ [-fpermissive]
  this->getDevice()->memcpyFrom(this->data, out, dataSize, this->stream);
                                                                       ^
In file included from src/CudaAES.hpp:4:0,
                 from src/CudaEcbAes16B.hpp:4,
                 from src/CudaEcbAes16B.cpp:1:
src/CUDACipherDevice.hpp:33:7: error:   initializing argument 2 of ‘virtual void paracrypt::CUDACipherDevice::memcpyFrom(void*, void*, int, cudaStream_t)’ [-fpermissive]
  void memcpyFrom(void* dev, void* host, int size, cudaStream_t stream);
       ^
make: *** [CudaEcbAes16B.o] Error 1
12:43:40 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++  -c src/tests/tests.cpp -o obj/tests.o "-I/usr/local/cuda/include"
g++  -c src/openssl/AES_key_schedule.c -o obj/AES_key_schedule.o
g++  -c src/logging.cpp -o obj/logging.o
g++  -c src/AES.cpp -o obj/AES.o
g++  -c src/CudaAES.cpp -o obj/CudaAES.o "-I/usr/local/cuda/include"
g++  -c src/CudaEcbAes16B.cpp -o obj/CudaEcbAes16B.o "-I/usr/local/cuda/include"
src/CudaEcbAes16B.cpp: In member function ‘virtual int paracrypt::CudaEcbAES16B::encrypt(const unsigned char*, const unsigned char*, int)’:
src/CudaEcbAes16B.cpp:12:2: error: ‘cuda_ecb_aes_16b_encrypt’ was not declared in this scope
  cuda_ecb_aes_16b_encrypt<<gridSize,threadsPerBlock>>(data,n_blocks,this->getDeviceKey());
  ^
src/CudaEcbAes16B.cpp:12:89: error: invalid operands of types ‘int’ and ‘AES_KEY* {aka aes_key_st*}’ to binary ‘operator>>’
  cuda_ecb_aes_16b_encrypt<<gridSize,threadsPerBlock>>(data,n_blocks,this->getDeviceKey());
                                                                                         ^
src/CudaEcbAes16B.cpp:13:71: error: invalid conversion from ‘const void*’ to ‘void*’ [-fpermissive]
  this->getDevice()->memcpyFrom(this->data, out, dataSize, this->stream);
                                                                       ^
In file included from src/CudaAES.hpp:4:0,
                 from src/CudaEcbAes16B.hpp:4,
                 from src/CudaEcbAes16B.cpp:1:
src/CUDACipherDevice.hpp:33:7: error:   initializing argument 2 of ‘virtual void paracrypt::CUDACipherDevice::memcpyFrom(void*, void*, int, cudaStream_t)’ [-fpermissive]
  void memcpyFrom(void* dev, void* host, int size, cudaStream_t stream);
       ^
src/CudaEcbAes16B.cpp: In member function ‘virtual int paracrypt::CudaEcbAES16B::decrypt(const unsigned char*, const unsigned char*, int)’:
src/CudaEcbAes16B.cpp:26:68: error: invalid conversion from ‘const void*’ to ‘void*’ [-fpermissive]
  this->getDevice()->memcpyTo(in, this->data, dataSize, this->stream);
                                                                    ^
In file included from src/CudaAES.hpp:4:0,
                 from src/CudaEcbAes16B.hpp:4,
                 from src/CudaEcbAes16B.cpp:1:
src/CUDACipherDevice.hpp:32:7: error:   initializing argument 1 of ‘virtual void paracrypt::CUDACipherDevice::memcpyTo(void*, void*, int, cudaStream_t)’ [-fpermissive]
  void memcpyTo(void* host, void* dev, int size, cudaStream_t stream);
       ^
src/CudaEcbAes16B.cpp:27:2: error: ‘cuda_ecb_aes_16b_decrypt’ was not declared in this scope
  cuda_ecb_aes_16b_decrypt<<gridSize,threadsPerBlock>>(data,n_blocks,this->getDeviceKey()); // TODO get decrypt key
  ^
src/CudaEcbAes16B.cpp:27:89: error: invalid operands of types ‘int’ and ‘AES_KEY* {aka aes_key_st*}’ to binary ‘operator>>’
  cuda_ecb_aes_16b_decrypt<<gridSize,threadsPerBlock>>(data,n_blocks,this->getDeviceKey()); // TODO get decrypt key
                                                                                         ^
src/CudaEcbAes16B.cpp:28:71: error: invalid conversion from ‘const void*’ to ‘void*’ [-fpermissive]
  this->getDevice()->memcpyFrom(this->data, out, dataSize, this->stream);
                                                                       ^
In file included from src/CudaAES.hpp:4:0,
                 from src/CudaEcbAes16B.hpp:4,
                 from src/CudaEcbAes16B.cpp:1:
src/CUDACipherDevice.hpp:33:7: error:   initializing argument 2 of ‘virtual void paracrypt::CUDACipherDevice::memcpyFrom(void*, void*, int, cudaStream_t)’ [-fpermissive]
  void memcpyFrom(void* dev, void* host, int size, cudaStream_t stream);
       ^
make: *** [CudaEcbAes16B.o] Error 1
12:44:07 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++  -c src/tests/tests.cpp -o obj/tests.o "-I/usr/local/cuda/include"
g++  -c src/openssl/AES_key_schedule.c -o obj/AES_key_schedule.o
g++  -c src/logging.cpp -o obj/logging.o
g++  -c src/AES.cpp -o obj/AES.o
g++  -c src/CudaAES.cpp -o obj/CudaAES.o "-I/usr/local/cuda/include"
g++  -c src/CudaEcbAes16B.cpp -o obj/CudaEcbAes16B.o "-I/usr/local/cuda/include"
src/CudaEcbAes16B.cpp: In member function ‘virtual int paracrypt::CudaEcbAES16B::encrypt(const unsigned char*, const unsigned char*, int)’:
src/CudaEcbAes16B.cpp:13:28: error: invalid operands of types ‘void(unsigned char*, int, AES_KEY*) {aka void(unsigned char*, int, aes_key_st*)}’ and ‘int’ to binary ‘operator<<’
  cuda_ecb_aes_16b_encrypt<<gridSize,threadsPerBlock>>(data,n_blocks,this->getDeviceKey());
                            ^
src/CudaEcbAes16B.cpp:13:89: error: invalid operands of types ‘int’ and ‘AES_KEY* {aka aes_key_st*}’ to binary ‘operator>>’
  cuda_ecb_aes_16b_encrypt<<gridSize,threadsPerBlock>>(data,n_blocks,this->getDeviceKey());
                                                                                         ^
src/CudaEcbAes16B.cpp:14:71: error: invalid conversion from ‘const void*’ to ‘void*’ [-fpermissive]
  this->getDevice()->memcpyFrom(this->data, out, dataSize, this->stream);
                                                                       ^
In file included from src/CudaAES.hpp:4:0,
                 from src/CudaEcbAes16B.hpp:4,
                 from src/CudaEcbAes16B.cpp:1:
src/CUDACipherDevice.hpp:33:7: error:   initializing argument 2 of ‘virtual void paracrypt::CUDACipherDevice::memcpyFrom(void*, void*, int, cudaStream_t)’ [-fpermissive]
  void memcpyFrom(void* dev, void* host, int size, cudaStream_t stream);
       ^
src/CudaEcbAes16B.cpp: In member function ‘virtual int paracrypt::CudaEcbAES16B::decrypt(const unsigned char*, const unsigned char*, int)’:
src/CudaEcbAes16B.cpp:27:68: error: invalid conversion from ‘const void*’ to ‘void*’ [-fpermissive]
  this->getDevice()->memcpyTo(in, this->data, dataSize, this->stream);
                                                                    ^
In file included from src/CudaAES.hpp:4:0,
                 from src/CudaEcbAes16B.hpp:4,
                 from src/CudaEcbAes16B.cpp:1:
src/CUDACipherDevice.hpp:32:7: error:   initializing argument 1 of ‘virtual void paracrypt::CUDACipherDevice::memcpyTo(void*, void*, int, cudaStream_t)’ [-fpermissive]
  void memcpyTo(void* host, void* dev, int size, cudaStream_t stream);
       ^
src/CudaEcbAes16B.cpp:28:28: error: invalid operands of types ‘void(unsigned char*, int, AES_KEY*) {aka void(unsigned char*, int, aes_key_st*)}’ and ‘int’ to binary ‘operator<<’
  cuda_ecb_aes_16b_decrypt<<gridSize,threadsPerBlock>>(data,n_blocks,this->getDeviceKey()); // TODO get decrypt key
                            ^
src/CudaEcbAes16B.cpp:28:89: error: invalid operands of types ‘int’ and ‘AES_KEY* {aka aes_key_st*}’ to binary ‘operator>>’
  cuda_ecb_aes_16b_decrypt<<gridSize,threadsPerBlock>>(data,n_blocks,this->getDeviceKey()); // TODO get decrypt key
                                                                                         ^
src/CudaEcbAes16B.cpp:29:71: error: invalid conversion from ‘const void*’ to ‘void*’ [-fpermissive]
  this->getDevice()->memcpyFrom(this->data, out, dataSize, this->stream);
                                                                       ^
In file included from src/CudaAES.hpp:4:0,
                 from src/CudaEcbAes16B.hpp:4,
                 from src/CudaEcbAes16B.cpp:1:
src/CUDACipherDevice.hpp:33:7: error:   initializing argument 2 of ‘virtual void paracrypt::CUDACipherDevice::memcpyFrom(void*, void*, int, cudaStream_t)’ [-fpermissive]
  void memcpyFrom(void* dev, void* host, int size, cudaStream_t stream);
       ^
make: *** [CudaEcbAes16B.o] Error 1
12:45:13 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++  -c src/tests/tests.cpp -o obj/tests.o "-I/usr/local/cuda/include"
g++  -c src/openssl/AES_key_schedule.c -o obj/AES_key_schedule.o
g++  -c src/logging.cpp -o obj/logging.o
g++  -c src/AES.cpp -o obj/AES.o
g++  -c src/CudaAES.cpp -o obj/CudaAES.o "-I/usr/local/cuda/include"
/usr/local/cuda/bin/nvcc  -c src/CudaEcbAes16B.cpp -o obj/CudaEcbAes16B.o "-I/usr/local/cuda/include"
nvcc warning : The 'compute_20', 'sm_20', and 'sm_21' architectures are deprecated, and may be removed in a future release (Use -Wno-deprecated-gpu-targets to suppress warning).
src/CudaEcbAes16B.cpp: In member function ‘virtual int paracrypt::CudaEcbAES16B::encrypt(const unsigned char*, const unsigned char*, int)’:
src/CudaEcbAes16B.cpp:13:28: error: invalid operands of types ‘void(unsigned char*, int, AES_KEY*) {aka void(unsigned char*, int, aes_key_st*)}’ and ‘int’ to binary ‘operator<<’
  cuda_ecb_aes_16b_encrypt<<gridSize,threadsPerBlock>>(data,n_blocks,this->getDeviceKey());
                            ^
src/CudaEcbAes16B.cpp:13:89: error: invalid operands of types ‘int’ and ‘AES_KEY* {aka aes_key_st*}’ to binary ‘operator>>’
  cuda_ecb_aes_16b_encrypt<<gridSize,threadsPerBlock>>(data,n_blocks,this->getDeviceKey());
                                                                                         ^
src/CudaEcbAes16B.cpp:14:71: error: invalid conversion from ‘const void*’ to ‘void*’ [-fpermissive]
  this->getDevice()->memcpyFrom(this->data, out, dataSize, this->stream);
                                                                       ^
In file included from src/CudaAES.hpp:4:0,
                 from src/CudaEcbAes16B.hpp:4,
                 from src/CudaEcbAes16B.cpp:1:
src/CUDACipherDevice.hpp:33:7: error:   initializing argument 2 of ‘virtual void paracrypt::CUDACipherDevice::memcpyFrom(void*, void*, int, cudaStream_t)’ [-fpermissive]
  void memcpyFrom(void* dev, void* host, int size, cudaStream_t stream);
       ^
src/CudaEcbAes16B.cpp: In member function ‘virtual int paracrypt::CudaEcbAES16B::decrypt(const unsigned char*, const unsigned char*, int)’:
src/CudaEcbAes16B.cpp:27:68: error: invalid conversion from ‘const void*’ to ‘void*’ [-fpermissive]
  this->getDevice()->memcpyTo(in, this->data, dataSize, this->stream);
                                                                    ^
In file included from src/CudaAES.hpp:4:0,
                 from src/CudaEcbAes16B.hpp:4,
                 from src/CudaEcbAes16B.cpp:1:
src/CUDACipherDevice.hpp:32:7: error:   initializing argument 1 of ‘virtual void paracrypt::CUDACipherDevice::memcpyTo(void*, void*, int, cudaStream_t)’ [-fpermissive]
  void memcpyTo(void* host, void* dev, int size, cudaStream_t stream);
       ^
src/CudaEcbAes16B.cpp:28:28: error: invalid operands of types ‘void(unsigned char*, int, AES_KEY*) {aka void(unsigned char*, int, aes_key_st*)}’ and ‘int’ to binary ‘operator<<’
  cuda_ecb_aes_16b_decrypt<<gridSize,threadsPerBlock>>(data,n_blocks,this->getDeviceKey()); // TODO get decrypt key
                            ^
src/CudaEcbAes16B.cpp:28:89: error: invalid operands of types ‘int’ and ‘AES_KEY* {aka aes_key_st*}’ to binary ‘operator>>’
  cuda_ecb_aes_16b_decrypt<<gridSize,threadsPerBlock>>(data,n_blocks,this->getDeviceKey()); // TODO get decrypt key
                                                                                         ^
src/CudaEcbAes16B.cpp:29:71: error: invalid conversion from ‘const void*’ to ‘void*’ [-fpermissive]
  this->getDevice()->memcpyFrom(this->data, out, dataSize, this->stream);
                                                                       ^
In file included from src/CudaAES.hpp:4:0,
                 from src/CudaEcbAes16B.hpp:4,
                 from src/CudaEcbAes16B.cpp:1:
src/CUDACipherDevice.hpp:33:7: error:   initializing argument 2 of ‘virtual void paracrypt::CUDACipherDevice::memcpyFrom(void*, void*, int, cudaStream_t)’ [-fpermissive]
  void memcpyFrom(void* dev, void* host, int size, cudaStream_t stream);
       ^
make: *** [CudaEcbAes16B.o] Error 1
12:49:29 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++  -c src/tests/tests.cpp -o obj/tests.o "-I/usr/local/cuda/include"
g++  -c src/openssl/AES_key_schedule.c -o obj/AES_key_schedule.o
g++  -c src/logging.cpp -o obj/logging.o
g++  -c src/AES.cpp -o obj/AES.o
g++  -c src/CudaAES.cpp -o obj/CudaAES.o "-I/usr/local/cuda/include"
g++  -c src/CudaEcbAes16B.cpp -o obj/CudaEcbAes16B.o "-I/usr/local/cuda/include"
src/CudaEcbAes16B.cpp: In member function ‘virtual int paracrypt::CudaEcbAES16B::encrypt(const unsigned char*, const unsigned char*, int)’:
src/CudaEcbAes16B.cpp:13:28: error: invalid operands of types ‘<unresolved overloaded function type>’ and ‘int’ to binary ‘operator<<’
  cuda_ecb_aes_16b_encrypt<<gridSize,threadsPerBlock>>(data,n_blocks,this->getDeviceKey(),gridSize,threadsPerBlock);
                            ^
src/CudaEcbAes16B.cpp:14:71: error: invalid conversion from ‘const void*’ to ‘void*’ [-fpermissive]
  this->getDevice()->memcpyFrom(this->data, out, dataSize, this->stream);
                                                                       ^
In file included from src/CudaAES.hpp:4:0,
                 from src/CudaEcbAes16B.hpp:4,
                 from src/CudaEcbAes16B.cpp:1:
src/CUDACipherDevice.hpp:33:7: error:   initializing argument 2 of ‘virtual void paracrypt::CUDACipherDevice::memcpyFrom(void*, void*, int, cudaStream_t)’ [-fpermissive]
  void memcpyFrom(void* dev, void* host, int size, cudaStream_t stream);
       ^
src/CudaEcbAes16B.cpp: In member function ‘virtual int paracrypt::CudaEcbAES16B::decrypt(const unsigned char*, const unsigned char*, int)’:
src/CudaEcbAes16B.cpp:27:68: error: invalid conversion from ‘const void*’ to ‘void*’ [-fpermissive]
  this->getDevice()->memcpyTo(in, this->data, dataSize, this->stream);
                                                                    ^
In file included from src/CudaAES.hpp:4:0,
                 from src/CudaEcbAes16B.hpp:4,
                 from src/CudaEcbAes16B.cpp:1:
src/CUDACipherDevice.hpp:32:7: error:   initializing argument 1 of ‘virtual void paracrypt::CUDACipherDevice::memcpyTo(void*, void*, int, cudaStream_t)’ [-fpermissive]
  void memcpyTo(void* host, void* dev, int size, cudaStream_t stream);
       ^
src/CudaEcbAes16B.cpp:29:71: error: invalid conversion from ‘const void*’ to ‘void*’ [-fpermissive]
  this->getDevice()->memcpyFrom(this->data, out, dataSize, this->stream);
                                                                       ^
In file included from src/CudaAES.hpp:4:0,
                 from src/CudaEcbAes16B.hpp:4,
                 from src/CudaEcbAes16B.cpp:1:
src/CUDACipherDevice.hpp:33:7: error:   initializing argument 2 of ‘virtual void paracrypt::CUDACipherDevice::memcpyFrom(void*, void*, int, cudaStream_t)’ [-fpermissive]
  void memcpyFrom(void* dev, void* host, int size, cudaStream_t stream);
       ^
make: *** [CudaEcbAes16B.o] Error 1
12:49:58 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++  -c src/tests/tests.cpp -o obj/tests.o "-I/usr/local/cuda/include"
g++  -c src/openssl/AES_key_schedule.c -o obj/AES_key_schedule.o
g++  -c src/logging.cpp -o obj/logging.o
g++  -c src/AES.cpp -o obj/AES.o
g++  -c src/CudaAES.cpp -o obj/CudaAES.o "-I/usr/local/cuda/include"
g++  -c src/CudaEcbAes16B.cpp -o obj/CudaEcbAes16B.o "-I/usr/local/cuda/include"
src/CudaEcbAes16B.cpp: In member function ‘virtual int paracrypt::CudaEcbAES16B::encrypt(const unsigned char*, const unsigned char*, int)’:
src/CudaEcbAes16B.cpp:14:71: error: invalid conversion from ‘const void*’ to ‘void*’ [-fpermissive]
  this->getDevice()->memcpyFrom(this->data, out, dataSize, this->stream);
                                                                       ^
In file included from src/CudaAES.hpp:4:0,
                 from src/CudaEcbAes16B.hpp:4,
                 from src/CudaEcbAes16B.cpp:1:
src/CUDACipherDevice.hpp:33:7: error:   initializing argument 2 of ‘virtual void paracrypt::CUDACipherDevice::memcpyFrom(void*, void*, int, cudaStream_t)’ [-fpermissive]
  void memcpyFrom(void* dev, void* host, int size, cudaStream_t stream);
       ^
src/CudaEcbAes16B.cpp: In member function ‘virtual int paracrypt::CudaEcbAES16B::decrypt(const unsigned char*, const unsigned char*, int)’:
src/CudaEcbAes16B.cpp:27:68: error: invalid conversion from ‘const void*’ to ‘void*’ [-fpermissive]
  this->getDevice()->memcpyTo(in, this->data, dataSize, this->stream);
                                                                    ^
In file included from src/CudaAES.hpp:4:0,
                 from src/CudaEcbAes16B.hpp:4,
                 from src/CudaEcbAes16B.cpp:1:
src/CUDACipherDevice.hpp:32:7: error:   initializing argument 1 of ‘virtual void paracrypt::CUDACipherDevice::memcpyTo(void*, void*, int, cudaStream_t)’ [-fpermissive]
  void memcpyTo(void* host, void* dev, int size, cudaStream_t stream);
       ^
src/CudaEcbAes16B.cpp:29:71: error: invalid conversion from ‘const void*’ to ‘void*’ [-fpermissive]
  this->getDevice()->memcpyFrom(this->data, out, dataSize, this->stream);
                                                                       ^
In file included from src/CudaAES.hpp:4:0,
                 from src/CudaEcbAes16B.hpp:4,
                 from src/CudaEcbAes16B.cpp:1:
src/CUDACipherDevice.hpp:33:7: error:   initializing argument 2 of ‘virtual void paracrypt::CUDACipherDevice::memcpyFrom(void*, void*, int, cudaStream_t)’ [-fpermissive]
  void memcpyFrom(void* dev, void* host, int size, cudaStream_t stream);
       ^
make: *** [CudaEcbAes16B.o] Error 1
12:51:13 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++  -c src/tests/tests.cpp -o obj/tests.o "-I/usr/local/cuda/include"
g++  -c src/openssl/AES_key_schedule.c -o obj/AES_key_schedule.o
g++  -c src/logging.cpp -o obj/logging.o
g++  -c src/AES.cpp -o obj/AES.o
g++  -c src/CudaAES.cpp -o obj/CudaAES.o "-I/usr/local/cuda/include"
g++  -c src/CudaEcbAes16B.cpp -o obj/CudaEcbAes16B.o "-I/usr/local/cuda/include"
src/CudaEcbAes16B.cpp: In member function ‘virtual int paracrypt::CudaEcbAES16B::encrypt(const unsigned char*, const unsigned char*, int)’:
src/CudaEcbAes16B.cpp:14:71: error: invalid conversion from ‘const void*’ to ‘void*’ [-fpermissive]
  this->getDevice()->memcpyFrom(this->data, out, dataSize, this->stream);
                                                                       ^
In file included from src/CudaAES.hpp:4:0,
                 from src/CudaEcbAes16B.hpp:4,
                 from src/CudaEcbAes16B.cpp:1:
src/CUDACipherDevice.hpp:33:7: error:   initializing argument 2 of ‘virtual void paracrypt::CUDACipherDevice::memcpyFrom(void*, void*, int, cudaStream_t)’ [-fpermissive]
  void memcpyFrom(void* dev, void* host, int size, cudaStream_t stream);
       ^
src/CudaEcbAes16B.cpp: In member function ‘virtual int paracrypt::CudaEcbAES16B::decrypt(const unsigned char*, const unsigned char*, int)’:
src/CudaEcbAes16B.cpp:27:68: error: invalid conversion from ‘const void*’ to ‘void*’ [-fpermissive]
  this->getDevice()->memcpyTo(in, this->data, dataSize, this->stream);
                                                                    ^
In file included from src/CudaAES.hpp:4:0,
                 from src/CudaEcbAes16B.hpp:4,
                 from src/CudaEcbAes16B.cpp:1:
src/CUDACipherDevice.hpp:32:7: error:   initializing argument 1 of ‘virtual void paracrypt::CUDACipherDevice::memcpyTo(void*, void*, int, cudaStream_t)’ [-fpermissive]
  void memcpyTo(void* host, void* dev, int size, cudaStream_t stream);
       ^
src/CudaEcbAes16B.cpp:29:71: error: invalid conversion from ‘const void*’ to ‘void*’ [-fpermissive]
  this->getDevice()->memcpyFrom(this->data, out, dataSize, this->stream);
                                                                       ^
In file included from src/CudaAES.hpp:4:0,
                 from src/CudaEcbAes16B.hpp:4,
                 from src/CudaEcbAes16B.cpp:1:
src/CUDACipherDevice.hpp:33:7: error:   initializing argument 2 of ‘virtual void paracrypt::CUDACipherDevice::memcpyFrom(void*, void*, int, cudaStream_t)’ [-fpermissive]
  void memcpyFrom(void* dev, void* host, int size, cudaStream_t stream);
       ^
make: *** [CudaEcbAes16B.o] Error 1
12:51:50 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++  -c src/tests/tests.cpp -o obj/tests.o "-I/usr/local/cuda/include"
g++  -c src/openssl/AES_key_schedule.c -o obj/AES_key_schedule.o
g++  -c src/logging.cpp -o obj/logging.o
g++  -c src/AES.cpp -o obj/AES.o
g++  -c src/CudaAES.cpp -o obj/CudaAES.o "-I/usr/local/cuda/include"
g++  -c src/CudaEcbAes16B.cpp -o obj/CudaEcbAes16B.o "-I/usr/local/cuda/include"
/usr/local/cuda/bin/nvcc  -c src/CudaEcbAes16B.cu -o obj/CudaEcbAes16B.cuo
nvcc warning : The 'compute_20', 'sm_20', and 'sm_21' architectures are deprecated, and may be removed in a future release (Use -Wno-deprecated-gpu-targets to suppress warning).
src/CudaEcbAes16B.cuh(2): error: identifier "AES_KEY" is undefined

src/CudaEcbAes16B.cuh(3): error: identifier "AES_KEY" is undefined

src/CudaEcbAes16B.cuh(4): error: identifier "AES_KEY" is undefined

src/CudaEcbAes16B.cuh(5): error: identifier "AES_KEY" is undefined

src/CudaEcbAes16B.cu(3): error: identifier "AES_KEY" is undefined

src/CudaEcbAes16B.cu(10): error: identifier "AES_KEY" is undefined

src/CudaEcbAes16B.cu(16): error: identifier "AES_KEY" is undefined

src/CudaEcbAes16B.cu(18): error: cannot determine which instance of overloaded function "cuda_ecb_aes_16b_encrypt" is intended

src/CudaEcbAes16B.cu(18): warning: expression has no effect

src/CudaEcbAes16B.cu(18): warning: expression has no effect

src/CudaEcbAes16B.cu(18): error: expression must have integral or enum type

src/CudaEcbAes16B.cu(22): error: identifier "AES_KEY" is undefined

src/CudaEcbAes16B.cu(24): error: cannot determine which instance of overloaded function "cuda_ecb_aes_16b_decrypt" is intended

src/CudaEcbAes16B.cu(24): warning: expression has no effect

src/CudaEcbAes16B.cu(24): warning: expression has no effect

src/CudaEcbAes16B.cu(24): error: expression must have integral or enum type

12 errors detected in the compilation of "/tmp/tmpxft_00004331_00000000-7_CudaEcbAes16B.cpp1.ii".
make: *** [CudaEcbAes16B.cuo] Error 2
12:52:47 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++  -c src/tests/tests.cpp -o obj/tests.o "-I/usr/local/cuda/include"
g++  -c src/openssl/AES_key_schedule.c -o obj/AES_key_schedule.o
g++  -c src/logging.cpp -o obj/logging.o
g++  -c src/AES.cpp -o obj/AES.o
g++  -c src/CudaAES.cpp -o obj/CudaAES.o "-I/usr/local/cuda/include"
g++  -c src/CudaEcbAes16B.cpp -o obj/CudaEcbAes16B.o "-I/usr/local/cuda/include"
/usr/local/cuda/bin/nvcc  -c src/CudaEcbAes16B.cu -o obj/CudaEcbAes16B.cuo
nvcc warning : The 'compute_20', 'sm_20', and 'sm_21' architectures are deprecated, and may be removed in a future release (Use -Wno-deprecated-gpu-targets to suppress warning).
src/CudaEcbAes16B.cu(18): error: cannot determine which instance of overloaded function "cuda_ecb_aes_16b_encrypt" is intended

src/CudaEcbAes16B.cu(18): warning: expression has no effect

src/CudaEcbAes16B.cu(18): warning: expression has no effect

src/CudaEcbAes16B.cu(18): error: expression must have integral or enum type

src/CudaEcbAes16B.cu(24): error: cannot determine which instance of overloaded function "cuda_ecb_aes_16b_decrypt" is intended

src/CudaEcbAes16B.cu(24): warning: expression has no effect

src/CudaEcbAes16B.cu(24): warning: expression has no effect

src/CudaEcbAes16B.cu(24): error: expression must have integral or enum type

4 errors detected in the compilation of "/tmp/tmpxft_000043a6_00000000-7_CudaEcbAes16B.cpp1.ii".
make: *** [CudaEcbAes16B.cuo] Error 2
12:54:35 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++  -c src/tests/tests.cpp -o obj/tests.o "-I/usr/local/cuda/include"
g++  -c src/openssl/AES_key_schedule.c -o obj/AES_key_schedule.o
g++  -c src/logging.cpp -o obj/logging.o
g++  -c src/AES.cpp -o obj/AES.o
g++  -c src/CudaAES.cpp -o obj/CudaAES.o "-I/usr/local/cuda/include"
g++  -c src/CudaEcbAes16B.cpp -o obj/CudaEcbAes16B.o "-I/usr/local/cuda/include"
/usr/local/cuda/bin/nvcc  -c src/CudaEcbAes16B.cu -o obj/CudaEcbAes16B.cuo
nvcc warning : The 'compute_20', 'sm_20', and 'sm_21' architectures are deprecated, and may be removed in a future release (Use -Wno-deprecated-gpu-targets to suppress warning).
src/CudaEcbAes16B.cu(18): error: expression must have integral or enum type

src/CudaEcbAes16B.cu(18): warning: expression has no effect

src/CudaEcbAes16B.cu(18): warning: expression has no effect

src/CudaEcbAes16B.cu(18): error: expression must have integral or enum type

src/CudaEcbAes16B.cu(24): error: expression must have integral or enum type

src/CudaEcbAes16B.cu(24): warning: expression has no effect

src/CudaEcbAes16B.cu(24): warning: expression has no effect

src/CudaEcbAes16B.cu(24): error: expression must have integral or enum type

4 errors detected in the compilation of "/tmp/tmpxft_00004468_00000000-7_CudaEcbAes16B.cpp1.ii".
make: *** [CudaEcbAes16B.cuo] Error 2
12:58:29 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++  -c src/tests/tests.cpp -o obj/tests.o "-I/usr/local/cuda/include"
g++  -c src/openssl/AES_key_schedule.c -o obj/AES_key_schedule.o
g++  -c src/logging.cpp -o obj/logging.o
g++  -c src/AES.cpp -o obj/AES.o
g++  -c src/CudaAES.cpp -o obj/CudaAES.o "-I/usr/local/cuda/include"
g++  -c src/CudaEcbAes16B.cpp -o obj/CudaEcbAes16B.o "-I/usr/local/cuda/include"
src/CudaEcbAes16B.cpp: In member function ‘virtual int paracrypt::CudaEcbAES16B::encrypt(const unsigned char*, const unsigned char*, int)’:
src/CudaEcbAes16B.cpp:12:26: error: expected primary-expression before ‘*’ token
     int rounds = uint32_t* key = this->getDeviceKey()->rounds;
                          ^
src/CudaEcbAes16B.cpp: In member function ‘virtual int paracrypt::CudaEcbAES16B::decrypt(const unsigned char*, const unsigned char*, int)’:
src/CudaEcbAes16B.cpp:28:9: error: redeclaration of ‘int dataSize’
     int dataSize = n_blocks*AES_BLOCK_SIZE;
         ^
src/CudaEcbAes16B.cpp:27:9: error: ‘int dataSize’ previously declared here
     int dataSize = n_blocks*AES_BLOCK_SIZE;
         ^
src/CudaEcbAes16B.cpp:32:70: error: ‘rounds’ was not declared in this scope
  cuda_ecb_aes_16b_decrypt(gridSize,threadsPerBlock,data,n_blocks,key,rounds); // TODO get decrypt key
                                                                      ^
make: *** [CudaEcbAes16B.o] Error 1
12:58:47 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++  -c src/tests/tests.cpp -o obj/tests.o "-I/usr/local/cuda/include"
g++  -c src/openssl/AES_key_schedule.c -o obj/AES_key_schedule.o
g++  -c src/logging.cpp -o obj/logging.o
g++  -c src/AES.cpp -o obj/AES.o
g++  -c src/CudaAES.cpp -o obj/CudaAES.o "-I/usr/local/cuda/include"
g++  -c src/CudaEcbAes16B.cpp -o obj/CudaEcbAes16B.o "-I/usr/local/cuda/include"
src/CudaEcbAes16B.cpp: In member function ‘virtual int paracrypt::CudaEcbAES16B::encrypt(const unsigned char*, const unsigned char*, int)’:
src/CudaEcbAes16B.cpp:12:26: error: expected primary-expression before ‘*’ token
     int rounds = uint32_t* key = this->getDeviceKey()->rounds;
                          ^
src/CudaEcbAes16B.cpp: In member function ‘virtual int paracrypt::CudaEcbAES16B::decrypt(const unsigned char*, const unsigned char*, int)’:
src/CudaEcbAes16B.cpp:28:9: error: redeclaration of ‘int dataSize’
     int dataSize = n_blocks*AES_BLOCK_SIZE;
         ^
src/CudaEcbAes16B.cpp:27:9: error: ‘int dataSize’ previously declared here
     int dataSize = n_blocks*AES_BLOCK_SIZE;
         ^
src/CudaEcbAes16B.cpp:32:70: error: ‘rounds’ was not declared in this scope
  cuda_ecb_aes_16b_decrypt(gridSize,threadsPerBlock,data,n_blocks,key,rounds); // TODO get decrypt key
                                                                      ^
make: *** [CudaEcbAes16B.o] Error 1
12:59:20 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++  -c src/tests/tests.cpp -o obj/tests.o "-I/usr/local/cuda/include"
g++  -c src/openssl/AES_key_schedule.c -o obj/AES_key_schedule.o
g++  -c src/logging.cpp -o obj/logging.o
g++  -c src/AES.cpp -o obj/AES.o
g++  -c src/CudaAES.cpp -o obj/CudaAES.o "-I/usr/local/cuda/include"
g++  -c src/CudaEcbAes16B.cpp -o obj/CudaEcbAes16B.o "-I/usr/local/cuda/include"
/usr/local/cuda/bin/nvcc  -c src/CudaEcbAes16B.cu -o obj/CudaEcbAes16B.cuo
nvcc warning : The 'compute_20', 'sm_20', and 'sm_21' architectures are deprecated, and may be removed in a future release (Use -Wno-deprecated-gpu-targets to suppress warning).
src/CudaEcbAes16B.cu(3): error: identifier "uint32_t" is undefined

src/CudaEcbAes16B.cu(10): error: identifier "uint32_t" is undefined

src/CudaEcbAes16B.cu(16): error: identifier "uint32_t" is undefined

src/CudaEcbAes16B.cu(18): error: expression must have integral or enum type

src/CudaEcbAes16B.cu(18): warning: expression has no effect

src/CudaEcbAes16B.cu(18): error: identifier "key" is undefined

src/CudaEcbAes16B.cu(18): warning: expression has no effect

src/CudaEcbAes16B.cu(22): error: identifier "uint32_t" is undefined

src/CudaEcbAes16B.cu(24): error: expression must have integral or enum type

src/CudaEcbAes16B.cu(24): warning: expression has no effect

src/CudaEcbAes16B.cu(24): error: identifier "key" is undefined

src/CudaEcbAes16B.cu(24): warning: expression has no effect

8 errors detected in the compilation of "/tmp/tmpxft_0000467e_00000000-7_CudaEcbAes16B.cpp1.ii".
make: *** [CudaEcbAes16B.cuo] Error 2
12:59:53 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++  -c src/tests/tests.cpp -o obj/tests.o "-I/usr/local/cuda/include"
g++  -c src/openssl/AES_key_schedule.c -o obj/AES_key_schedule.o
g++  -c src/logging.cpp -o obj/logging.o
g++  -c src/AES.cpp -o obj/AES.o
g++  -c src/CudaAES.cpp -o obj/CudaAES.o "-I/usr/local/cuda/include"
g++  -c src/CudaEcbAes16B.cpp -o obj/CudaEcbAes16B.o "-I/usr/local/cuda/include"
/usr/local/cuda/bin/nvcc  -c src/CudaEcbAes16B.cu -o obj/CudaEcbAes16B.cuo
nvcc warning : The 'compute_20', 'sm_20', and 'sm_21' architectures are deprecated, and may be removed in a future release (Use -Wno-deprecated-gpu-targets to suppress warning).
src/CudaEcbAes16B.cu(18): error: expression must have integral or enum type

src/CudaEcbAes16B.cu(18): warning: expression has no effect

src/CudaEcbAes16B.cu(18): error: identifier "key" is undefined

src/CudaEcbAes16B.cu(18): warning: expression has no effect

src/CudaEcbAes16B.cu(24): error: expression must have integral or enum type

src/CudaEcbAes16B.cu(24): warning: expression has no effect

src/CudaEcbAes16B.cu(24): error: identifier "key" is undefined

src/CudaEcbAes16B.cu(24): warning: expression has no effect

4 errors detected in the compilation of "/tmp/tmpxft_000046e3_00000000-7_CudaEcbAes16B.cpp1.ii".
make: *** [CudaEcbAes16B.cuo] Error 2
13:00:26 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++  -c src/tests/tests.cpp -o obj/tests.o "-I/usr/local/cuda/include"
g++  -c src/openssl/AES_key_schedule.c -o obj/AES_key_schedule.o
g++  -c src/logging.cpp -o obj/logging.o
g++  -c src/AES.cpp -o obj/AES.o
g++  -c src/CudaAES.cpp -o obj/CudaAES.o "-I/usr/local/cuda/include"
g++  -c src/CudaEcbAes16B.cpp -o obj/CudaEcbAes16B.o "-I/usr/local/cuda/include"
/usr/local/cuda/bin/nvcc  -c src/CudaEcbAes16B.cu -o obj/CudaEcbAes16B.cuo
nvcc warning : The 'compute_20', 'sm_20', and 'sm_21' architectures are deprecated, and may be removed in a future release (Use -Wno-deprecated-gpu-targets to suppress warning).
src/CudaEcbAes16B.cu(18): error: expression must have integral or enum type

src/CudaEcbAes16B.cu(18): warning: expression has no effect

src/CudaEcbAes16B.cu(18): warning: expression has no effect

src/CudaEcbAes16B.cu(18): warning: expression has no effect

src/CudaEcbAes16B.cu(24): error: expression must have integral or enum type

src/CudaEcbAes16B.cu(24): warning: expression has no effect

src/CudaEcbAes16B.cu(24): error: identifier "key" is undefined

src/CudaEcbAes16B.cu(24): warning: expression has no effect

3 errors detected in the compilation of "/tmp/tmpxft_0000473c_00000000-7_CudaEcbAes16B.cpp1.ii".
make: *** [CudaEcbAes16B.cuo] Error 2
13:00:48 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++  -c src/tests/tests.cpp -o obj/tests.o "-I/usr/local/cuda/include"
g++  -c src/openssl/AES_key_schedule.c -o obj/AES_key_schedule.o
g++  -c src/logging.cpp -o obj/logging.o
g++  -c src/AES.cpp -o obj/AES.o
g++  -c src/CudaAES.cpp -o obj/CudaAES.o "-I/usr/local/cuda/include"
g++  -c src/CudaEcbAes16B.cpp -o obj/CudaEcbAes16B.o "-I/usr/local/cuda/include"
/usr/local/cuda/bin/nvcc  -c src/CudaEcbAes16B.cu -o obj/CudaEcbAes16B.cuo
nvcc warning : The 'compute_20', 'sm_20', and 'sm_21' architectures are deprecated, and may be removed in a future release (Use -Wno-deprecated-gpu-targets to suppress warning).
src/CudaEcbAes16B.cu(18): error: expression must have integral or enum type

src/CudaEcbAes16B.cu(18): warning: expression has no effect

src/CudaEcbAes16B.cu(18): warning: expression has no effect

src/CudaEcbAes16B.cu(18): warning: expression has no effect

src/CudaEcbAes16B.cu(24): error: expression must have integral or enum type

src/CudaEcbAes16B.cu(24): warning: expression has no effect

src/CudaEcbAes16B.cu(24): warning: expression has no effect

src/CudaEcbAes16B.cu(24): warning: expression has no effect

2 errors detected in the compilation of "/tmp/tmpxft_000047a1_00000000-7_CudaEcbAes16B.cpp1.ii".
make: *** [CudaEcbAes16B.cuo] Error 2
13:03:13 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++  -c src/tests/tests.cpp -o obj/tests.o "-I/usr/local/cuda/include"
g++  -c src/openssl/AES_key_schedule.c -o obj/AES_key_schedule.o
g++  -c src/logging.cpp -o obj/logging.o
g++  -c src/AES.cpp -o obj/AES.o
g++  -c src/CudaAES.cpp -o obj/CudaAES.o "-I/usr/local/cuda/include"
g++  -c src/CudaEcbAes16B.cpp -o obj/CudaEcbAes16B.o "-I/usr/local/cuda/include"
/usr/local/cuda/bin/nvcc  -c src/CudaEcbAes16B.cu -o obj/CudaEcbAes16B.cuo
nvcc warning : The 'compute_20', 'sm_20', and 'sm_21' architectures are deprecated, and may be removed in a future release (Use -Wno-deprecated-gpu-targets to suppress warning).
g++  -c src/GPUCipherDevice.cpp -o obj/GPUCipherDevice.o
src/GPUCipherDevice.cpp:3:16: error: ‘template<class S> class paracrypt::GPUCipherDevice’ used without template parameters
 int paracrypt::GPUCipherDevice::getGridSize(int n_blocks, int threadsPerCipherBlock) {
                ^
src/GPUCipherDevice.cpp: In function ‘int getGridSize(int, int)’:
src/GPUCipherDevice.cpp:4:55: error: invalid use of ‘this’ in non-member function
     int gridSize = n_blocks * threadsPerCipherBlock / this->getThreadsPerThreadBlock();
                                                       ^
make: *** [GPUCipherDevice.o] Error 1
13:04:20 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++  -c src/tests/tests.cpp -o obj/tests.o "-I/usr/local/cuda/include"
g++  -c src/openssl/AES_key_schedule.c -o obj/AES_key_schedule.o
g++  -c src/logging.cpp -o obj/logging.o
g++  -c src/AES.cpp -o obj/AES.o
g++  -c src/CudaAES.cpp -o obj/CudaAES.o "-I/usr/local/cuda/include"
g++  -c src/CudaEcbAes16B.cpp -o obj/CudaEcbAes16B.o "-I/usr/local/cuda/include"
/usr/local/cuda/bin/nvcc  -c src/CudaEcbAes16B.cu -o obj/CudaEcbAes16B.cuo
nvcc warning : The 'compute_20', 'sm_20', and 'sm_21' architectures are deprecated, and may be removed in a future release (Use -Wno-deprecated-gpu-targets to suppress warning).
g++  -c src/GPUCipherDevice.cpp -o obj/GPUCipherDevice.o
src/GPUCipherDevice.cpp:4:16: error: ‘template<class S> class paracrypt::GPUCipherDevice’ used without template parameters
 int paracrypt::GPUCipherDevice::getGridSize(int n_blocks, int threadsPerCipherBlock) {
                ^
src/GPUCipherDevice.cpp: In function ‘int getGridSize(int, int)’:
src/GPUCipherDevice.cpp:5:55: error: invalid use of ‘this’ in non-member function
     int gridSize = n_blocks * threadsPerCipherBlock / this->getThreadsPerThreadBlock();
                                                       ^
make: *** [GPUCipherDevice.o] Error 1
13:05:54 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++  -c src/tests/tests.cpp -o obj/tests.o "-I/usr/local/cuda/include"
g++  -c src/openssl/AES_key_schedule.c -o obj/AES_key_schedule.o
g++  -c src/logging.cpp -o obj/logging.o
g++  -c src/AES.cpp -o obj/AES.o
g++  -c src/CudaAES.cpp -o obj/CudaAES.o "-I/usr/local/cuda/include"
g++  -c src/CudaEcbAes16B.cpp -o obj/CudaEcbAes16B.o "-I/usr/local/cuda/include"
/usr/local/cuda/bin/nvcc  -c src/CudaEcbAes16B.cu -o obj/CudaEcbAes16B.cuo
nvcc warning : The 'compute_20', 'sm_20', and 'sm_21' architectures are deprecated, and may be removed in a future release (Use -Wno-deprecated-gpu-targets to suppress warning).
g++  -c src/GPUCipherDevice.cpp -o obj/GPUCipherDevice.o
src/GPUCipherDevice.cpp:3:42: error: template argument 1 is invalid
 int paracrypt::GPUCipherDevice<typename S>::getGridSize(int n_blocks, int threadsPerCipherBlock) {
                                          ^
src/GPUCipherDevice.cpp: In function ‘int getGridSize(int, int)’:
src/GPUCipherDevice.cpp:4:55: error: invalid use of ‘this’ in non-member function
     int gridSize = n_blocks * threadsPerCipherBlock / this->getThreadsPerThreadBlock();
                                                       ^
make: *** [GPUCipherDevice.o] Error 1
13:06:14 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++  -c src/tests/tests.cpp -o obj/tests.o "-I/usr/local/cuda/include"
g++  -c src/openssl/AES_key_schedule.c -o obj/AES_key_schedule.o
g++  -c src/logging.cpp -o obj/logging.o
g++  -c src/AES.cpp -o obj/AES.o
g++  -c src/CudaAES.cpp -o obj/CudaAES.o "-I/usr/local/cuda/include"
g++  -c src/CudaEcbAes16B.cpp -o obj/CudaEcbAes16B.o "-I/usr/local/cuda/include"
/usr/local/cuda/bin/nvcc  -c src/CudaEcbAes16B.cu -o obj/CudaEcbAes16B.cuo
nvcc warning : The 'compute_20', 'sm_20', and 'sm_21' architectures are deprecated, and may be removed in a future release (Use -Wno-deprecated-gpu-targets to suppress warning).
g++  -c src/GPUCipherDevice.cpp -o obj/GPUCipherDevice.o
src/GPUCipherDevice.cpp:3:32: error: ‘S’ was not declared in this scope
 int paracrypt::GPUCipherDevice<S>::getGridSize(int n_blocks, int threadsPerCipherBlock) {
                                ^
src/GPUCipherDevice.cpp:3:33: error: template argument 1 is invalid
 int paracrypt::GPUCipherDevice<S>::getGridSize(int n_blocks, int threadsPerCipherBlock) {
                                 ^
src/GPUCipherDevice.cpp: In function ‘int getGridSize(int, int)’:
src/GPUCipherDevice.cpp:4:55: error: invalid use of ‘this’ in non-member function
     int gridSize = n_blocks * threadsPerCipherBlock / this->getThreadsPerThreadBlock();
                                                       ^
make: *** [GPUCipherDevice.o] Error 1
13:06:56 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++  -c src/tests/tests.cpp -o obj/tests.o "-I/usr/local/cuda/include"
g++  -c src/openssl/AES_key_schedule.c -o obj/AES_key_schedule.o
g++  -c src/logging.cpp -o obj/logging.o
g++  -c src/AES.cpp -o obj/AES.o
g++  -c src/CudaAES.cpp -o obj/CudaAES.o "-I/usr/local/cuda/include"
g++  -c src/CudaEcbAes16B.cpp -o obj/CudaEcbAes16B.o "-I/usr/local/cuda/include"
/usr/local/cuda/bin/nvcc  -c src/CudaEcbAes16B.cu -o obj/CudaEcbAes16B.cuo
nvcc warning : The 'compute_20', 'sm_20', and 'sm_21' architectures are deprecated, and may be removed in a future release (Use -Wno-deprecated-gpu-targets to suppress warning).
g++  -c src/GPUCipherDevice.cpp -o obj/GPUCipherDevice.o
g++  -c src/CUDACipherDevice.cpp -o obj/CUDACipherDevice.o
In file included from src/CUDACipherDevice.cpp:1:0:
src/CUDACipherDevice.hpp:4:18: fatal error: cuda.h: No such file or directory
 #include "cuda.h"
                  ^
compilation terminated.
make: *** [CUDACipherDevice.o] Error 1
13:07:35 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++  -c src/tests/tests.cpp -o obj/tests.o "-I/usr/local/cuda/include"
g++  -c src/openssl/AES_key_schedule.c -o obj/AES_key_schedule.o
g++  -c src/logging.cpp -o obj/logging.o
g++  -c src/AES.cpp -o obj/AES.o
g++  -c src/CudaAES.cpp -o obj/CudaAES.o "-I/usr/local/cuda/include"
g++  -c src/CudaEcbAes16B.cpp -o obj/CudaEcbAes16B.o "-I/usr/local/cuda/include"
/usr/local/cuda/bin/nvcc  -c src/CudaEcbAes16B.cu -o obj/CudaEcbAes16B.cuo
nvcc warning : The 'compute_20', 'sm_20', and 'sm_21' architectures are deprecated, and may be removed in a future release (Use -Wno-deprecated-gpu-targets to suppress warning).
g++  -c src/GPUCipherDevice.cpp -o obj/GPUCipherDevice.o
g++  -c src/CUDACipherDevice.cpp -o obj/CUDACipherDevice.o "-I/usr/local/cuda/include"
src/CUDACipherDevice.cpp:3:39: error: ISO C++ forbids declaration of ‘CUDACipherDevice’ with no type [-fpermissive]
 paracrypt::CUDACipherDevice(int device)
                                       ^
src/CUDACipherDevice.cpp:3:39: error: ‘int paracrypt::CUDACipherDevice(int)’ should have been declared inside ‘paracrypt’
src/CUDACipherDevice.cpp: In function ‘int paracrypt::CUDACipherDevice(int)’:
src/CUDACipherDevice.cpp:5:2: error: invalid use of ‘this’ in non-member function
  this->nConcurrentKernels = 1;
  ^
src/CUDACipherDevice.cpp:6:5: error: invalid use of ‘this’ in non-member function
     this->device = device;
     ^
src/CUDACipherDevice.cpp:7:31: error: invalid use of ‘this’ in non-member function
     cudaGetDeviceProperties(&(this->devProp), device);
                               ^
src/CUDACipherDevice.cpp:14:13: error: invalid use of ‘this’ in non-member function
     int M = this->devProp.major;
             ^
src/CUDACipherDevice.cpp:15:13: error: invalid use of ‘this’ in non-member function
     int m = this->devProp.minor;
             ^
src/CUDACipherDevice.cpp:17:2: error: invalid use of ‘this’ in non-member function
  this->maxCudaBlocksPerSM = 8;
  ^
src/CUDACipherDevice.cpp:19:2: error: invalid use of ‘this’ in non-member function
  this->maxCudaBlocksPerSM = 16;
  ^
src/CUDACipherDevice.cpp:21:2: error: invalid use of ‘this’ in non-member function
  this->maxCudaBlocksPerSM = 32;
  ^
src/CUDACipherDevice.cpp:24:5: error: invalid use of ‘this’ in non-member function
     this->nWarpsPerBlock =
     ^
src/CUDACipherDevice.cpp:25:2: error: invalid use of ‘this’ in non-member function
  this->devProp.maxThreadsPerBlock / this->devProp.warpSize;
  ^
src/CUDACipherDevice.cpp:25:37: error: invalid use of ‘this’ in non-member function
  this->devProp.maxThreadsPerBlock / this->devProp.warpSize;
                                     ^
src/CUDACipherDevice.cpp:26:5: error: invalid use of ‘this’ in non-member function
     this->nThreadsPerThreadBlock =
     ^
src/CUDACipherDevice.cpp:27:2: error: invalid use of ‘this’ in non-member function
  this->devProp.warpSize * this->nWarpsPerBlock /
  ^
src/CUDACipherDevice.cpp:27:27: error: invalid use of ‘this’ in non-member function
  this->devProp.warpSize * this->nWarpsPerBlock /
                           ^
src/CUDACipherDevice.cpp:28:2: error: invalid use of ‘this’ in non-member function
  this->maxCudaBlocksPerSM;
  ^
src/CUDACipherDevice.cpp:30:5: error: invalid use of ‘this’ in non-member function
  if(this->devProp.concurrentKernels) {
     ^
src/CUDACipherDevice.cpp:34:3: error: invalid use of ‘this’ in non-member function
   this->nConcurrentKernels = 16;
   ^
src/CUDACipherDevice.cpp:36:6: error: invalid use of ‘this’ in non-member function
      this->nConcurrentKernels = 4;
      ^
src/CUDACipherDevice.cpp:38:3: error: invalid use of ‘this’ in non-member function
   this->maxCudaBlocksPerSM = 32;
   ^
src/CUDACipherDevice.cpp:41:7: error: invalid use of ‘this’ in non-member function
       this->maxCudaBlocksPerSM = 16;
       ^
src/CUDACipherDevice.cpp:44:7: error: invalid use of ‘this’ in non-member function
       this->maxCudaBlocksPerSM = 128;
       ^
src/CUDACipherDevice.cpp:47:7: error: invalid use of ‘this’ in non-member function
       this->maxCudaBlocksPerSM = 32;
       ^
src/CUDACipherDevice.cpp:50:7: error: invalid use of ‘this’ in non-member function
       this->maxCudaBlocksPerSM = 16;
       ^
In file included from src/CUDACipherDevice.cpp:1:0:
src/CUDACipherDevice.cpp:54:41: error: ‘event’ was not declared in this scope
  HANDLE_ERROR(cudaEventCreateWithFlags(&event, "flag"));
                                         ^
src/CUDACipherDevice.hpp:17:43: note: in definition of macro ‘HANDLE_ERROR’
 #define HANDLE_ERROR( err ) (HandleError( err, __FILE__, __LINE__ ))
                                           ^
src/CUDACipherDevice.hpp:17:67: error: ‘HandleError’ was not declared in this scope
 #define HANDLE_ERROR( err ) (HandleError( err, __FILE__, __LINE__ ))
                                                                   ^
src/CUDACipherDevice.cpp:54:2: note: in expansion of macro ‘HANDLE_ERROR’
  HANDLE_ERROR(cudaEventCreateWithFlags(&event, "flag"));
  ^
src/CUDACipherDevice.cpp: At global scope:
src/CUDACipherDevice.cpp:58:36: error: cannot declare member function ‘static void paracrypt::CUDACipherDevice::HandleError(cudaError_t, const char*, int)’ to have static linkage [-fpermissive]
          const char *file, int line){
                                    ^
src/CUDACipherDevice.cpp: In static member function ‘static void paracrypt::CUDACipherDevice::HandleError(cudaError_t, const char*, int)’:
src/CUDACipherDevice.cpp:61:19: error: ‘printf’ was not declared in this scope
         file, line);
                   ^
In file included from src/CUDACipherDevice.cpp:1:0:
src/CUDACipherDevice.cpp: In member function ‘virtual void paracrypt::CUDACipherDevice::memcpyFrom(void*, void*, int, cudaStream_t)’:
src/CUDACipherDevice.cpp:121:73: error: too many arguments to function ‘cudaError_t cudaMemcpy(void*, const void*, size_t, cudaMemcpyKind)’
  HANDLE_ERROR(cudaMemcpy(host, dev, size, cudaMemcpyDeviceToHost, stream));
                                                                         ^
src/CUDACipherDevice.hpp:17:43: note: in definition of macro ‘HANDLE_ERROR’
 #define HANDLE_ERROR( err ) (HandleError( err, __FILE__, __LINE__ ))
                                           ^
In file included from src/CUDACipherDevice.hpp:5:0,
                 from src/CUDACipherDevice.cpp:1:
/usr/local/cuda/include/cuda_runtime_api.h:4130:39: note: declared here
 extern __host__ cudaError_t CUDARTAPI cudaMemcpy(void *dst, const void *src, size_t count, enum cudaMemcpyKind kind);
                                       ^
make: *** [CUDACipherDevice.o] Error 1
13:15:48 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++  -c src/tests/tests.cpp -o obj/tests.o "-I/usr/local/cuda/include"
g++  -c src/openssl/AES_key_schedule.c -o obj/AES_key_schedule.o
g++  -c src/logging.cpp -o obj/logging.o
g++  -c src/AES.cpp -o obj/AES.o
g++  -c src/CudaAES.cpp -o obj/CudaAES.o "-I/usr/local/cuda/include"
g++  -c src/CudaEcbAes16B.cpp -o obj/CudaEcbAes16B.o "-I/usr/local/cuda/include"
/usr/local/cuda/bin/nvcc  -c src/CudaEcbAes16B.cu -o obj/CudaEcbAes16B.cuo
nvcc warning : The 'compute_20', 'sm_20', and 'sm_21' architectures are deprecated, and may be removed in a future release (Use -Wno-deprecated-gpu-targets to suppress warning).
g++  -c src/GPUCipherDevice.cpp -o obj/GPUCipherDevice.o
g++  -c src/CUDACipherDevice.cpp -o obj/CUDACipherDevice.o "-I/usr/local/cuda/include"
src/CUDACipherDevice.cpp: In constructor ‘paracrypt::CUDACipherDevice::CUDACipherDevice(int)’:
src/CUDACipherDevice.cpp:3:1: error: uninitialized member ‘paracrypt::CUDACipherDevice::devProp’ with ‘const’ type ‘const cudaDeviceProp’ [-fpermissive]
 paracrypt::CUDACipherDevice::CUDACipherDevice(int device)
 ^
src/CUDACipherDevice.cpp:3:1: error: uninitialized member ‘paracrypt::CUDACipherDevice::nConcurrentKernels’ with ‘const’ type ‘const int’ [-fpermissive]
src/CUDACipherDevice.cpp:5:27: error: assignment of read-only member ‘paracrypt::CUDACipherDevice::nConcurrentKernels’
  this->nConcurrentKernels = 1;
                           ^
src/CUDACipherDevice.cpp:7:53: error: invalid conversion from ‘const cudaDeviceProp*’ to ‘cudaDeviceProp*’ [-fpermissive]
     cudaGetDeviceProperties(&(this->devProp), device);
                                                     ^
In file included from src/CUDACipherDevice.hpp:5:0,
                 from src/CUDACipherDevice.cpp:1:
/usr/local/cuda/include/cuda_runtime_api.h:1421:58: error:   initializing argument 1 of ‘cudaError_t cudaGetDeviceProperties(cudaDeviceProp*, int)’ [-fpermissive]
 extern __host__ __cudart_builtin__ cudaError_t CUDARTAPI cudaGetDeviceProperties(struct cudaDeviceProp *prop, int device);
                                                          ^
src/CUDACipherDevice.cpp:34:28: error: assignment of read-only member ‘paracrypt::CUDACipherDevice::nConcurrentKernels’
   this->nConcurrentKernels = 16;
                            ^
src/CUDACipherDevice.cpp:36:31: error: assignment of read-only member ‘paracrypt::CUDACipherDevice::nConcurrentKernels’
      this->nConcurrentKernels = 4;
                               ^
In file included from src/CUDACipherDevice.cpp:1:0:
src/CUDACipherDevice.cpp:54:41: error: ‘event’ was not declared in this scope
  HANDLE_ERROR(cudaEventCreateWithFlags(&event, "flag"));
                                         ^
src/CUDACipherDevice.hpp:17:43: note: in definition of macro ‘HANDLE_ERROR’
 #define HANDLE_ERROR( err ) (HandleError( err, __FILE__, __LINE__ ))
                                           ^
src/CUDACipherDevice.cpp: At global scope:
src/CUDACipherDevice.cpp:58:36: error: cannot declare member function ‘static void paracrypt::CUDACipherDevice::HandleError(cudaError_t, const char*, int)’ to have static linkage [-fpermissive]
          const char *file, int line){
                                    ^
src/CUDACipherDevice.cpp: In static member function ‘static void paracrypt::CUDACipherDevice::HandleError(cudaError_t, const char*, int)’:
src/CUDACipherDevice.cpp:61:19: error: ‘printf’ was not declared in this scope
         file, line);
                   ^
In file included from src/CUDACipherDevice.cpp:1:0:
src/CUDACipherDevice.cpp: In member function ‘virtual void paracrypt::CUDACipherDevice::memcpyFrom(void*, void*, int, cudaStream_t)’:
src/CUDACipherDevice.cpp:121:73: error: too many arguments to function ‘cudaError_t cudaMemcpy(void*, const void*, size_t, cudaMemcpyKind)’
  HANDLE_ERROR(cudaMemcpy(host, dev, size, cudaMemcpyDeviceToHost, stream));
                                                                         ^
src/CUDACipherDevice.hpp:17:43: note: in definition of macro ‘HANDLE_ERROR’
 #define HANDLE_ERROR( err ) (HandleError( err, __FILE__, __LINE__ ))
                                           ^
In file included from src/CUDACipherDevice.hpp:5:0,
                 from src/CUDACipherDevice.cpp:1:
/usr/local/cuda/include/cuda_runtime_api.h:4130:39: note: declared here
 extern __host__ cudaError_t CUDARTAPI cudaMemcpy(void *dst, const void *src, size_t count, enum cudaMemcpyKind kind);
                                       ^
make: *** [CUDACipherDevice.o] Error 1
13:17:03 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++  -c src/tests/tests.cpp -o obj/tests.o "-I/usr/local/cuda/include"
g++  -c src/openssl/AES_key_schedule.c -o obj/AES_key_schedule.o
g++  -c src/logging.cpp -o obj/logging.o
g++  -c src/AES.cpp -o obj/AES.o
g++  -c src/CudaAES.cpp -o obj/CudaAES.o "-I/usr/local/cuda/include"
g++  -c src/CudaEcbAes16B.cpp -o obj/CudaEcbAes16B.o "-I/usr/local/cuda/include"
/usr/local/cuda/bin/nvcc  -c src/CudaEcbAes16B.cu -o obj/CudaEcbAes16B.cuo
nvcc warning : The 'compute_20', 'sm_20', and 'sm_21' architectures are deprecated, and may be removed in a future release (Use -Wno-deprecated-gpu-targets to suppress warning).
g++  -c src/GPUCipherDevice.cpp -o obj/GPUCipherDevice.o
g++  -c src/CUDACipherDevice.cpp -o obj/CUDACipherDevice.o "-I/usr/local/cuda/include"
src/CUDACipherDevice.cpp: In constructor ‘paracrypt::CUDACipherDevice::CUDACipherDevice(int)’:
src/CUDACipherDevice.cpp:3:1: error: uninitialized member ‘paracrypt::CUDACipherDevice::devProp’ with ‘const’ type ‘const cudaDeviceProp’ [-fpermissive]
 paracrypt::CUDACipherDevice::CUDACipherDevice(int device)
 ^
src/CUDACipherDevice.cpp:3:1: error: uninitialized member ‘paracrypt::CUDACipherDevice::nConcurrentKernels’ with ‘const’ type ‘const int’ [-fpermissive]
src/CUDACipherDevice.cpp:5:27: error: assignment of read-only member ‘paracrypt::CUDACipherDevice::nConcurrentKernels’
  this->nConcurrentKernels = 1;
                           ^
src/CUDACipherDevice.cpp:7:19: error: no match for ‘operator=’ (operand types are ‘const cudaDeviceProp’ and ‘long int’)
     this->devProp = NULL;
                   ^
src/CUDACipherDevice.cpp:7:19: note: candidate is:
In file included from /usr/local/cuda/include/builtin_types.h:59:0,
                 from /usr/local/cuda/include/cuda_runtime_api.h:134,
                 from src/CUDACipherDevice.hpp:5,
                 from src/CUDACipherDevice.cpp:1:
/usr/local/cuda/include/driver_types.h:1307:27: note: cudaDeviceProp& cudaDeviceProp::operator=(const cudaDeviceProp&)
 struct __device_builtin__ cudaDeviceProp
                           ^
/usr/local/cuda/include/driver_types.h:1307:27: note:   no known conversion for argument 1 from ‘long int’ to ‘const cudaDeviceProp&’
src/CUDACipherDevice.cpp:8:53: error: invalid conversion from ‘const cudaDeviceProp*’ to ‘cudaDeviceProp*’ [-fpermissive]
     cudaGetDeviceProperties(&(this->devProp), device);
                                                     ^
In file included from src/CUDACipherDevice.hpp:5:0,
                 from src/CUDACipherDevice.cpp:1:
/usr/local/cuda/include/cuda_runtime_api.h:1421:58: error:   initializing argument 1 of ‘cudaError_t cudaGetDeviceProperties(cudaDeviceProp*, int)’ [-fpermissive]
 extern __host__ __cudart_builtin__ cudaError_t CUDARTAPI cudaGetDeviceProperties(struct cudaDeviceProp *prop, int device);
                                                          ^
src/CUDACipherDevice.cpp:35:28: error: assignment of read-only member ‘paracrypt::CUDACipherDevice::nConcurrentKernels’
   this->nConcurrentKernels = 16;
                            ^
src/CUDACipherDevice.cpp:37:31: error: assignment of read-only member ‘paracrypt::CUDACipherDevice::nConcurrentKernels’
      this->nConcurrentKernels = 4;
                               ^
In file included from src/CUDACipherDevice.cpp:1:0:
src/CUDACipherDevice.cpp:55:41: error: ‘event’ was not declared in this scope
  HANDLE_ERROR(cudaEventCreateWithFlags(&event, "flag"));
                                         ^
src/CUDACipherDevice.hpp:17:43: note: in definition of macro ‘HANDLE_ERROR’
 #define HANDLE_ERROR( err ) (HandleError( err, __FILE__, __LINE__ ))
                                           ^
src/CUDACipherDevice.cpp: At global scope:
src/CUDACipherDevice.cpp:59:36: error: cannot declare member function ‘static void paracrypt::CUDACipherDevice::HandleError(cudaError_t, const char*, int)’ to have static linkage [-fpermissive]
          const char *file, int line){
                                    ^
src/CUDACipherDevice.cpp: In static member function ‘static void paracrypt::CUDACipherDevice::HandleError(cudaError_t, const char*, int)’:
src/CUDACipherDevice.cpp:62:19: error: ‘printf’ was not declared in this scope
         file, line);
                   ^
In file included from src/CUDACipherDevice.cpp:1:0:
src/CUDACipherDevice.cpp: In member function ‘virtual void paracrypt::CUDACipherDevice::memcpyFrom(void*, void*, int, cudaStream_t)’:
src/CUDACipherDevice.cpp:122:73: error: too many arguments to function ‘cudaError_t cudaMemcpy(void*, const void*, size_t, cudaMemcpyKind)’
  HANDLE_ERROR(cudaMemcpy(host, dev, size, cudaMemcpyDeviceToHost, stream));
                                                                         ^
src/CUDACipherDevice.hpp:17:43: note: in definition of macro ‘HANDLE_ERROR’
 #define HANDLE_ERROR( err ) (HandleError( err, __FILE__, __LINE__ ))
                                           ^
In file included from src/CUDACipherDevice.hpp:5:0,
                 from src/CUDACipherDevice.cpp:1:
/usr/local/cuda/include/cuda_runtime_api.h:4130:39: note: declared here
 extern __host__ cudaError_t CUDARTAPI cudaMemcpy(void *dst, const void *src, size_t count, enum cudaMemcpyKind kind);
                                       ^
make: *** [CUDACipherDevice.o] Error 1
13:18:17 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++  -c src/tests/tests.cpp -o obj/tests.o "-I/usr/local/cuda/include"
g++  -c src/openssl/AES_key_schedule.c -o obj/AES_key_schedule.o
g++  -c src/logging.cpp -o obj/logging.o
g++  -c src/AES.cpp -o obj/AES.o
g++  -c src/CudaAES.cpp -o obj/CudaAES.o "-I/usr/local/cuda/include"
g++  -c src/CudaEcbAes16B.cpp -o obj/CudaEcbAes16B.o "-I/usr/local/cuda/include"
/usr/local/cuda/bin/nvcc  -c src/CudaEcbAes16B.cu -o obj/CudaEcbAes16B.cuo
nvcc warning : The 'compute_20', 'sm_20', and 'sm_21' architectures are deprecated, and may be removed in a future release (Use -Wno-deprecated-gpu-targets to suppress warning).
g++  -c src/GPUCipherDevice.cpp -o obj/GPUCipherDevice.o
g++  -c src/CUDACipherDevice.cpp -o obj/CUDACipherDevice.o "-I/usr/local/cuda/include"
In file included from src/CUDACipherDevice.cpp:1:0:
src/CUDACipherDevice.cpp: In constructor ‘paracrypt::CUDACipherDevice::CUDACipherDevice(int)’:
src/CUDACipherDevice.cpp:54:41: error: ‘event’ was not declared in this scope
  HANDLE_ERROR(cudaEventCreateWithFlags(&event, "flag"));
                                         ^
src/CUDACipherDevice.hpp:17:43: note: in definition of macro ‘HANDLE_ERROR’
 #define HANDLE_ERROR( err ) (HandleError( err, __FILE__, __LINE__ ))
                                           ^
src/CUDACipherDevice.cpp: At global scope:
src/CUDACipherDevice.cpp:58:36: error: cannot declare member function ‘static void paracrypt::CUDACipherDevice::HandleError(cudaError_t, const char*, int)’ to have static linkage [-fpermissive]
          const char *file, int line){
                                    ^
src/CUDACipherDevice.cpp: In static member function ‘static void paracrypt::CUDACipherDevice::HandleError(cudaError_t, const char*, int)’:
src/CUDACipherDevice.cpp:61:19: error: ‘printf’ was not declared in this scope
         file, line);
                   ^
In file included from src/CUDACipherDevice.cpp:1:0:
src/CUDACipherDevice.cpp: In member function ‘virtual void paracrypt::CUDACipherDevice::memcpyFrom(void*, void*, int, cudaStream_t)’:
src/CUDACipherDevice.cpp:121:73: error: too many arguments to function ‘cudaError_t cudaMemcpy(void*, const void*, size_t, cudaMemcpyKind)’
  HANDLE_ERROR(cudaMemcpy(host, dev, size, cudaMemcpyDeviceToHost, stream));
                                                                         ^
src/CUDACipherDevice.hpp:17:43: note: in definition of macro ‘HANDLE_ERROR’
 #define HANDLE_ERROR( err ) (HandleError( err, __FILE__, __LINE__ ))
                                           ^
In file included from src/CUDACipherDevice.hpp:5:0,
                 from src/CUDACipherDevice.cpp:1:
/usr/local/cuda/include/cuda_runtime_api.h:4130:39: note: declared here
 extern __host__ cudaError_t CUDARTAPI cudaMemcpy(void *dst, const void *src, size_t count, enum cudaMemcpyKind kind);
                                       ^
make: *** [CUDACipherDevice.o] Error 1
13:19:51 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++  -c src/tests/tests.cpp -o obj/tests.o "-I/usr/local/cuda/include"
g++  -c src/openssl/AES_key_schedule.c -o obj/AES_key_schedule.o
g++  -c src/logging.cpp -o obj/logging.o
g++  -c src/AES.cpp -o obj/AES.o
g++  -c src/CudaAES.cpp -o obj/CudaAES.o "-I/usr/local/cuda/include"
g++  -c src/CudaEcbAes16B.cpp -o obj/CudaEcbAes16B.o "-I/usr/local/cuda/include"
/usr/local/cuda/bin/nvcc  -c src/CudaEcbAes16B.cu -o obj/CudaEcbAes16B.cuo
nvcc warning : The 'compute_20', 'sm_20', and 'sm_21' architectures are deprecated, and may be removed in a future release (Use -Wno-deprecated-gpu-targets to suppress warning).
g++  -c src/GPUCipherDevice.cpp -o obj/GPUCipherDevice.o
g++  -c src/CUDACipherDevice.cpp -o obj/CUDACipherDevice.o "-I/usr/local/cuda/include"
src/CUDACipherDevice.cpp: In static member function ‘static void paracrypt::CUDACipherDevice::HandleError(cudaError_t, const char*, int)’:
src/CUDACipherDevice.cpp:59:19: error: ‘printf’ was not declared in this scope
         file, line);
                   ^
In file included from src/CUDACipherDevice.cpp:1:0:
src/CUDACipherDevice.cpp: In member function ‘virtual void paracrypt::CUDACipherDevice::memcpyFrom(void*, void*, int, cudaStream_t)’:
src/CUDACipherDevice.cpp:119:73: error: too many arguments to function ‘cudaError_t cudaMemcpy(void*, const void*, size_t, cudaMemcpyKind)’
  HANDLE_ERROR(cudaMemcpy(host, dev, size, cudaMemcpyDeviceToHost, stream));
                                                                         ^
src/CUDACipherDevice.hpp:17:43: note: in definition of macro ‘HANDLE_ERROR’
 #define HANDLE_ERROR( err ) (HandleError( err, __FILE__, __LINE__ ))
                                           ^
In file included from src/CUDACipherDevice.hpp:5:0,
                 from src/CUDACipherDevice.cpp:1:
/usr/local/cuda/include/cuda_runtime_api.h:4130:39: note: declared here
 extern __host__ cudaError_t CUDARTAPI cudaMemcpy(void *dst, const void *src, size_t count, enum cudaMemcpyKind kind);
                                       ^
make: *** [CUDACipherDevice.o] Error 1
13:43:17 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++  -c src/tests/tests.cpp -o obj/tests.o "-I/usr/local/cuda/include"
g++  -c src/openssl/AES_key_schedule.c -o obj/AES_key_schedule.o
g++  -c src/logging.cpp -o obj/logging.o
g++  -c src/AES.cpp -o obj/AES.o
g++  -c src/CudaAES.cpp -o obj/CudaAES.o "-I/usr/local/cuda/include"
g++  -c src/CudaEcbAes16B.cpp -o obj/CudaEcbAes16B.o "-I/usr/local/cuda/include"
/usr/local/cuda/bin/nvcc  -c src/CudaEcbAes16B.cu -o obj/CudaEcbAes16B.cuo
nvcc warning : The 'compute_20', 'sm_20', and 'sm_21' architectures are deprecated, and may be removed in a future release (Use -Wno-deprecated-gpu-targets to suppress warning).
g++  -c src/GPUCipherDevice.cpp -o obj/GPUCipherDevice.o
g++  -c src/CUDACipherDevice.cpp -o obj/CUDACipherDevice.o "-I/usr/local/cuda/include"
In file included from src/CUDACipherDevice.cpp:2:0:
src/CUDACipherDevice.cpp: In static member function ‘static void paracrypt::CUDACipherDevice::HandleError(cudaError_t, const char*, int)’:
src/logging.hpp:12:40: error: ‘error’ was not declared in this scope
 #define LOG_ERR(str) BOOST_LOG_TRIVIAL(error) << #str
                                        ^
src/CUDACipherDevice.cpp:59:5: note: in expansion of macro ‘LOG_ERR’
     LOG_ERR(boost::format("%s in %s at line %d\n")
     ^
src/logging.hpp:12:45: error: ‘BOOST_LOG_TRIVIAL’ was not declared in this scope
 #define LOG_ERR(str) BOOST_LOG_TRIVIAL(error) << #str
                                             ^
src/CUDACipherDevice.cpp:59:5: note: in expansion of macro ‘LOG_ERR’
     LOG_ERR(boost::format("%s in %s at line %d\n")
     ^
In file included from src/CUDACipherDevice.cpp:1:0:
src/CUDACipherDevice.cpp: In member function ‘virtual void paracrypt::CUDACipherDevice::memcpyFrom(void*, void*, int, cudaStream_t)’:
src/CUDACipherDevice.cpp:120:73: error: too many arguments to function ‘cudaError_t cudaMemcpy(void*, const void*, size_t, cudaMemcpyKind)’
  HANDLE_ERROR(cudaMemcpy(host, dev, size, cudaMemcpyDeviceToHost, stream));
                                                                         ^
src/CUDACipherDevice.hpp:17:43: note: in definition of macro ‘HANDLE_ERROR’
 #define HANDLE_ERROR( err ) (HandleError( err, __FILE__, __LINE__ ))
                                           ^
In file included from src/CUDACipherDevice.hpp:5:0,
                 from src/CUDACipherDevice.cpp:1:
/usr/local/cuda/include/cuda_runtime_api.h:4130:39: note: declared here
 extern __host__ cudaError_t CUDARTAPI cudaMemcpy(void *dst, const void *src, size_t count, enum cudaMemcpyKind kind);
                                       ^
make: *** [CUDACipherDevice.o] Error 1
13:43:46 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++  -c src/tests/tests.cpp -o obj/tests.o "-I/usr/local/cuda/include"
g++  -c src/openssl/AES_key_schedule.c -o obj/AES_key_schedule.o
g++  -c src/logging.cpp -o obj/logging.o
g++  -c src/AES.cpp -o obj/AES.o
g++  -c src/CudaAES.cpp -o obj/CudaAES.o "-I/usr/local/cuda/include"
g++  -c src/CudaEcbAes16B.cpp -o obj/CudaEcbAes16B.o "-I/usr/local/cuda/include"
/usr/local/cuda/bin/nvcc  -c src/CudaEcbAes16B.cu -o obj/CudaEcbAes16B.cuo
nvcc warning : The 'compute_20', 'sm_20', and 'sm_21' architectures are deprecated, and may be removed in a future release (Use -Wno-deprecated-gpu-targets to suppress warning).
g++  -c src/GPUCipherDevice.cpp -o obj/GPUCipherDevice.o
g++  -c src/CUDACipherDevice.cpp -o obj/CUDACipherDevice.o "-I/usr/local/cuda/include"
In file included from src/CUDACipherDevice.cpp:1:0:
src/CUDACipherDevice.cpp: In member function ‘virtual void paracrypt::CUDACipherDevice::memcpyFrom(void*, void*, int, cudaStream_t)’:
src/CUDACipherDevice.cpp:120:73: error: too many arguments to function ‘cudaError_t cudaMemcpy(void*, const void*, size_t, cudaMemcpyKind)’
  HANDLE_ERROR(cudaMemcpy(host, dev, size, cudaMemcpyDeviceToHost, stream));
                                                                         ^
src/CUDACipherDevice.hpp:17:43: note: in definition of macro ‘HANDLE_ERROR’
 #define HANDLE_ERROR( err ) (HandleError( err, __FILE__, __LINE__ ))
                                           ^
In file included from src/CUDACipherDevice.hpp:5:0,
                 from src/CUDACipherDevice.cpp:1:
/usr/local/cuda/include/cuda_runtime_api.h:4130:39: note: declared here
 extern __host__ cudaError_t CUDARTAPI cudaMemcpy(void *dst, const void *src, size_t count, enum cudaMemcpyKind kind);
                                       ^
make: *** [CUDACipherDevice.o] Error 1
13:44:03 **** Incremental Build of configuration Debug for project pcnsight ****
make all 
g++  -c src/tests/tests.cpp -o obj/tests.o "-I/usr/local/cuda/include"
g++  -c src/openssl/AES_key_schedule.c -o obj/AES_key_schedule.o
g++  -c src/logging.cpp -o obj/logging.o
g++  -c src/AES.cpp -o obj/AES.o
g++  -c src/CudaAES.cpp -o obj/CudaAES.o "-I/usr/local/cuda/include"
g++  -c src/CudaEcbAes16B.cpp -o obj/CudaEcbAes16B.o "-I/usr/local/cuda/include"
/usr/local/cuda/bin/nvcc  -c src/CudaEcbAes16B.cu -o obj/CudaEcbAes16B.cuo
nvcc warning : The 'compute_20', 'sm_20', and 'sm_21' architectures are deprecated, and may be removed in a future release (Use -Wno-deprecated-gpu-targets to suppress warning).
g++  -c src/GPUCipherDevice.cpp -o obj/GPUCipherDevice.o
g++  -c src/CUDACipherDevice.cpp -o obj/CUDACipherDevice.o "-I/usr/local/cuda/include"
In file included from src/CUDACipherDevice.cpp:1:0:
src/CUDACipherDevice.cpp: In member function ‘virtual void paracrypt::CUDACipherDevice::memcpyFrom(void*, void*, int, cudaStream_t)’:
src/CUDACipherDevice.cpp:120:73: error: too many arguments to function ‘cudaError_t cudaMemcpy(void*, const void*, size_t, cudaMemcpyKind)’
  HANDLE_ERROR(cudaMemcpy(host, dev, size, cudaMemcpyDeviceToHost, stream));
                                                                         ^
src/CUDACipherDevice.hpp:17:43: note: in definition of macro ‘HANDLE_ERROR’
 #define HANDLE_ERROR( err ) (HandleError( err, __FILE__, __LINE__ ))
                                           ^
In file included from src/CUDACipherDevice.hpp:5:0,
                 from src/CUDACipherDevice.cpp:1:
/usr/local/cuda/include/cuda_runtime_api.h:4130:39: note: declared here
 extern __host__ cudaError_t CUDARTAPI cudaMemcpy(void *dst, const void *src, size_t count, enum cudaMemcpyKind kind);
                                       ^
make: *** [CUDACipherDevice.o] Error 1
